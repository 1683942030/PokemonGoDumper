}

// Namespace: Niantic.Holoholo.Audio
class Music {
    // Fields:
    AudioClip Clip;
    float Volume;
    float FadeOutTime;
    float FadeInTime;
    boolean Looping;
    float LoopStart;
    float LoopEnd;
    Music ContinueToMusic;

    // Methods:
    void .ctor(...);
    void Play(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Audio
class IMusicService {
    // Methods:
    void PlayMusic(...);
    void StopAll(...);
    void Pause(...);
    void Unpause(...);
}

// Namespace: Niantic.Holoholo.Audio
class MusicService {
    // Fields:
    Generic activeMusic;
    Generic garbageMusic;
    boolean <Paused>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_Paused(...);
    void set_Paused(...);
    Generic get_ActiveMusic(...);
    void PlayMusic(...);
    void StopAll(...);
    void Pause(...);
    void Unpause(...);
    void Update(...);
    void CleanupMusic(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void PlayMusic(...);
    /*[05]*/ void StopAll(...);
    /*[06]*/ void Pause(...);
    /*[07]*/ void Unpause(...);
}

// Namespace: 
class MusicPlayInstance {
    // Fields:
    float lastUpdateTime;
    float <TimeBasis>k__BackingField;
    Generic <FadeOutEndTime>k__BackingField;
    AudioSource <Source>k__BackingField;
    Music <Music>k__BackingField;
    boolean <PlayComplete>k__BackingField;
    boolean <Paused>k__BackingField;

    // Methods:
    void .ctor(...);
    float get_TimeBasis(...);
    void set_TimeBasis(...);
    Generic get_FadeOutEndTime(...);
    void set_FadeOutEndTime(...);
    AudioSource get_Source(...);
    void set_Source(...);
    Music get_Music(...);
    void set_Music(...);
    boolean get_PlayComplete(...);
    void set_PlayComplete(...);
    boolean get_Paused(...);
    void set_Paused(...);
    void Pause(...);
    void Unpause(...);
    void StartFadeOut(...);
    void Update(...);
    boolean UpdateFadeIn(...);
    void UpdateLoop(...);
    boolean UpdateFadeOut(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Audio.Tools
class MusicTestSceneRunner {
    // Fields:
    Text playPauseLabel;
    cmod_reqd musics;
    MusicService service;

    // Methods:
    void .ctor(...);
    void Play(...);
    void TogglePlayPause(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Auth
class PTCException {
    // Fields:
    String error;
    String error_code;
    String redirect;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    String get_ErrorMessage(...);
    String get_ErrorCode(...);
    String get_Redirect(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: Niantic.Holoholo.Auth
class PTCTokenSource {
    // Fields:
    int CURRENT_FORMAT_VERSION = 1;
    String PTC_CREDENTIALS_PREF = "5750bac0-483c-4131-80fd-6b047b2ca7b4";
    int WEB_REQUEST_TIMEOUT_MILLIS = 10000;
    String cachedEncryptedCredentials;
    String USER_AGENT;
    PTCExceptionHandler ExceptionEvents;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_ExceptionEvents(...);
    void remove_ExceptionEvents(...);
    boolean get_HasCachedCredentials(...);
    DateTime get_ProfileBirthdate(...);
    void Login(...);
    void SetCachedCredentials(...);
    Credentials GetCachedCredentials(...);
    String get_AuthenticationProviderId(...);
    void GetTokenInner(...);
    void GetToken(...);
    void RefreshToken(...);
    void ClearToken(...);
    LoginResponse ParseReponse(...);
    LoginResponse ParseReponse(...);
    void AppendUrlEncoded(...);
    boolean MyRemoteCertificateValidationCallback(...);
    void Login1(...);
    void Login2(...);
    void Login3(...);
    String GetTicket(...);
    Generic GetAccessToken(...);
    Profile CheckProfile(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_AuthenticationProviderId(...);
    /*[05]*/ void GetToken(...);
    /*[06]*/ void RefreshToken(...);
    /*[07]*/ void ClearToken(...);
}

// Namespace: 
class PTCExceptionHandler {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class Credentials {
    // Fields:
    int formatVersion;
    String username;
    String password;
    String accessToken;
    long expirationTime;
    long birthdate;

    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LoginResponse {
    // Fields:
    String lt;
    String execution;
    cmod_reqd errors;
    String error;
    String error_code;
    String redirect;
    String id;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Profile {
    // Fields:
    DateTime birthdate;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LoginState {
    // Fields:
    CookieContainer cookieContainer;
    String lt;
    String execution;
    String username;
    String password;
    String ticket;
    String token;
    String expires;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class AvatarCustomizationOption {
    // Fields:
    Texture Texture;
    CustomizationSlot slot;
    Sprite thumbnail;
    String Name;
    int Id;

    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class CustomizationSlot {
    // Fields:
    int value__;
    CustomizationSlot Skin = 0;
    CustomizationSlot Hair = 1;
    CustomizationSlot Shirt = 2;
    CustomizationSlot Pants = 3;
    CustomizationSlot Hat = 4;
    CustomizationSlot Shoes = 5;
    CustomizationSlot Eyes = 6;
    CustomizationSlot Backpack = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Avatar
class AvatarCustomizationSet {
    // Fields:
    cmod_reqd avatarTextureLayout;
    int AvatarId;
    GameObject AvatarPrefab;
    Generic allOptions;
    cmod_reqd skin;
    cmod_reqd hairstyles;
    cmod_reqd shirts;
    cmod_reqd pants;
    cmod_reqd hats;
    cmod_reqd shoes;
    cmod_reqd eyes;
    cmod_reqd backpack;

    // Methods:
    void .ctor(...);
    Generic BuildLookup(...);
    void LoadCustomizationOptions(...);
    Generic GetOptionsForSlot(...);
    AvatarCustomizationOption GetCustomizationAsset(...);
    void BlitTexture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TextureLayout {
    // Fields:
    CustomizationSlot slot;
    Rect texturePosition;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class IAvatarService {
    // Methods:
    GameObject BuildAvatar(...);
    void UpdateLocalAvatar(...);
    PlayerAvatarProto get_LocalAvatarSettings(...);
    void set_LocalAvatarSettings(...);
    AvatarCustomizationSet GetCustomizationSettings(...);
}

// Namespace: Holoholo.Rpc
class PlayerAvatarProto {
    // Fields:
    int AvatarFieldNumber = 8;
    int SkinFieldNumber = 2;
    int HairFieldNumber = 3;
    int ShirtFieldNumber = 4;
    int PantsFieldNumber = 5;
    int HatFieldNumber = 6;
    int ShoesFieldNumber = 7;
    int EyesFieldNumber = 9;
    int BackpackFieldNumber = 10;
    Generic _parser;
    int avatar_;
    int skin_;
    int hair_;
    int shirt_;
    int pants_;
    int hat_;
    int shoes_;
    int eyes_;
    int backpack_;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerAvatarProto Clone(...);
    int get_Avatar(...);
    void set_Avatar(...);
    int get_Skin(...);
    void set_Skin(...);
    int get_Hair(...);
    void set_Hair(...);
    int get_Shirt(...);
    void set_Shirt(...);
    int get_Pants(...);
    void set_Pants(...);
    int get_Hat(...);
    void set_Hat(...);
    int get_Shoes(...);
    void set_Shoes(...);
    int get_Eyes(...);
    void set_Eyes(...);
    int get_Backpack(...);
    void set_Backpack(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerAvatarProto <_parser>m__1AA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerAvatarProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Avatar
class AvatarService {
    // Fields:
    cmod_reqd avatars;
    PlayerAvatarProto localAvatarSettings;

    // Methods:
    void .ctor(...);
    PlayerAvatarProto get_LocalAvatarSettings(...);
    void set_LocalAvatarSettings(...);
    void Start(...);
    AvatarCustomizationSet GetCustomizationSettings(...);
    GameObject BuildAvatar(...);
    void UpdateLocalAvatar(...);
    void ApplyCustomization(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject BuildAvatar(...);
    /*[05]*/ void UpdateLocalAvatar(...);
    /*[06]*/ PlayerAvatarProto get_LocalAvatarSettings(...);
    /*[07]*/ void set_LocalAvatarSettings(...);
    /*[08]*/ AvatarCustomizationSet GetCustomizationSettings(...);
}

// Namespace: Niantic.Holoholo.Avatar
class PlayerAvatarProtoExt {
    // Methods:
    int GetIdForSlot(...);
    void SetIdForSlot(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class Blink {
    // Fields:
    float minInterval;
    float maxInterval;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void InitializeBlinkAnim(...);
    IEnumerator PlayBlinkAnim(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Scanlines {
    // Fields:
    cmod_reqd mat;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class LocalAvatarInstantiator {
    // Fields:
    String layerName;
    GameObject avatar;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class IMapAvatar {
    // Methods:
    Transform get_Transform(...);
    LatLng get_Location(...);
    void ResetFollowCompass(...);
    void FaceTowards(...);
    void ShowAvatar(...);
    void ShowLevelUpFx(...);
}

// Namespace: Niantic.Holoholo.Geometry
class LatLng {
    // Fields:
    double lat;
    double lng;

    // Methods:
    void .ctor(...);
    boolean Equals(...);
    int GetHashCode(...);
    double GetDistance(...);
    double GetDistance(...);
    double GetDistance(...);
    LatLng Lerp(...);
    LatLng get_Zero(...);
    LatLng SmoothDamp(...);
    double SmoothDamp(...);
    double SmoothDamp(...);
    LatLng op_Multiply(...);
    LatLng op_Addition(...);
    LatLng op_Subtraction(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class MapAvatar {
    // Fields:
    int MOVE_SPEED_ANIMATION_FLAG_ID;
    float gpsFollowTime;
    float playerTurnSpeed;
    float jumpThresholdMeter;
    float turnSpeedThreshold;
    float ignoreSpeedAnimationTime;
    float createdTime;
    GameObject blobShadow;
    GameObject pulseRing;
    GameObject levelUpFxPrefab;
    MapObjectPositionTweener position;
    ILocationProvider locationProvider;
    WorldMapRenderer worldMapRenderer;
    GameObject playerAvatar;
    Animator playerAnimator;
    ICompass compass;
    LatLng velocity;
    boolean followCompass;
    float overrideHeading;
    LatLng <Location>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    LatLng get_Location(...);
    void set_Location(...);
    Transform get_Transform(...);
    void Start(...);
    void Update(...);
    void FaceTowards(...);
    void ResetFollowCompass(...);
    void ShowAvatar(...);
    void ShowLevelUpFx(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Transform get_Transform(...);
    /*[05]*/ LatLng get_Location(...);
    /*[06]*/ void ResetFollowCompass(...);
    /*[07]*/ void FaceTowards(...);
    /*[08]*/ void ShowAvatar(...);
    /*[09]*/ void ShowLevelUpFx(...);
}

// Namespace: Niantic.Holoholo.Map
class MapObjectPositionTweener {
    // Fields:
    float baseTweenSpeed;
    float maxTweenTime;
    float maxTweenDistance;
    AnimationCurve tweenCurve;
    LatLng targetLocation;
    Coroutine currTween;
    LatLng lastLoc;
    Vector3 offset;

    // Methods:
    void .ctor(...);
    void StartTween(...);
    IEnumerator DoMove(...);
    void OnWorldScaleOrOriginChanged(...);
    void ComputePosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnWorldScaleOrOriginChanged(...);
    /*[05]*/ void ComputePosition(...);
}

// Namespace: 
class ILocationProvider {
    // Methods:
    LatLng get_Location(...);
    boolean get_HasValidLocation(...);
    boolean get_IsMeasuredLocation(...);
}

// Namespace: Niantic.Holoholo
class WorldMapRenderer {
    // Fields:
    cmod_reqd builderPrefabs;
    MapSpawnPoint mapSpawnPointPrefab;
    INianticMapApi mapApi;
    INianticMapTileEventHandler mapTileEventHandler;
    IMapScene mapScene;
    int lineOfSight;
    int tileSize;
    float pluginEventsIdleInterval;
    int maxProcessEventsTime;
    ICameraRig cameraRig;
    Generic buildersByLayer;
    Generic currentLayerBuilders;
    Generic allBuilders;
    Generic tiles;
    Stopwatch processStopWatch;
    IEnumerator processEventsCoroutine;
    Plane hPlane;
    Vector3 mapOffset;
    float mapScale;
    float LEVEL17_TO_12_SCALE_FACTOR;
    boolean <MapShowing>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_MapShowing(...);
    void set_MapShowing(...);
    Generic get_AllTiles(...);
    void InitMapCenter(...);
    void UpdateMapCenter(...);
    boolean RefreshMapOffset(...);
    LatLng GetWorldLocation(...);
    Vector3 GetMapPosition(...);
    boolean GetGroundPosition(...);
    boolean GetGroundLocation(...);
    float MetersToMapUnits(...);
    void Start(...);
    void Show(...);
    void Hide(...);
    IEnumerator ProcessEvents(...);
    void Awake(...);
    void SubscribeToLayer(...);
    void SubscribeToLayer(...);
    void OnCreateTile(...);
    void OnDeleteTile(...);
    void OnBeginTile(...);
    MapTile GetTile(...);
    void OnEndTile(...);
    void OnLayer(...);
    void OnPoint(...);
    void OnLinear(...);
    void OnMesh(...);
    void OnGmmBuilding(...);
    void OnArea(...);
    boolean OnProcessingPauseCheck(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnCreateTile(...);
    /*[05]*/ void OnDeleteTile(...);
    /*[06]*/ void OnBeginTile(...);
    /*[07]*/ void OnEndTile(...);
    /*[08]*/ void OnLayer(...);
    /*[09]*/ void OnPoint(...);
    /*[10]*/ void OnLinear(...);
    /*[11]*/ void OnMesh(...);
    /*[12]*/ void OnGmmBuilding(...);
    /*[13]*/ void OnArea(...);
    /*[14]*/ boolean OnProcessingPauseCheck(...);
    /*[15]*/ void SubscribeToLayer(...);
    /*[16]*/ MapTile GetTile(...);
}

// Namespace: Niantic.Holoholo.Map
class MapSpawnPoint {
    // Fields:
    float CHECK_SPAWN_AVG_INTERVAL = 2.000000;
    float CHECK_SPAWN_JITTER = 1.000000;
    float MIN_CHECK_TIME = 1.000000;
    float MAX_CHECK_TIME = 3.000000;
    Generic connectedPoints;
    float minConnectionDist;
    cmod_reqd spawnFxSettings;
    SpawnPointFxSettings fxSettings;
    IMapAvatar mapAvatar;
    IMapExploreState mapExploreState;
    Color LOW_VIS_WIRE_COLOR;
    Color HIGH_VIS_WIRE_COLOR;
    Color ACTIVE_RADIUS_COLOR;
    VisibilityType <Visibility>k__BackingField;
    MapEntityCell <Cell>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    VisibilityType get_Visibility(...);
    void set_Visibility(...);
    MapEntityCell get_Cell(...);
    void set_Cell(...);
    Generic get_ConnectedSpawnPoints(...);
    LatLng get_Location(...);
    boolean get_AvatarIsInFxRange(...);
    void Initialize(...);
    void Connect(...);
    IEnumerator MonitorSpawnMapFx(...);
    IEnumerator AnimateSpawnFx(...);
    Vector3 get_Position(...);
    void set_Position(...);
    void OnDrawGizmos(...);
    void OnDrawGizmosSelected(...);
    boolean <Initialize>m__94(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SpawnPointFxSettings {
    // Fields:
    float SpawnChancePerSecond;
    GameObject SpawnFXPrefab;
    VisibilityType Visibility;
    float MaxDistToPlayerForSpawnFx;
    float SpawnFxLifeTime;
    int NumberOfJumps;
    float TimeBetweenJumps;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class VisibilityType {
    // Fields:
    int value__;
    VisibilityType Low = 0;
    VisibilityType High = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapExploreState {
    // Methods:
    boolean get_IsActiveAndVisible(...);
    void PokestopSelected(...);
    void PokemonSelected(...);
    void PokestopComplete(...);
    void GymComplete(...);
}

// Namespace: Niantic.Holoholo.Map
class MapEntityCell {
    // Fields:
    GlobalSettings globalSettings;
    Generic pois;
    Generic spawnPoints;
    Generic mapPokemons;
    Generic nearbyPokemons;
    boolean spawnPointsLocked;
    ulong <Id>k__BackingField;

    // Methods:
    void .ctor(...);
    ulong get_Id(...);
    void set_Id(...);
    Generic get_NearbyPokemon(...);
    boolean TryGetPoi(...);
    void AddPoi(...);
    void LockSpawnPoints(...);
    void AddSpawnPoint(...);
    void AddMapPokemon(...);
    IWildMapPokemon GetMapPokemon(...);
    boolean RemoveMapPokemon(...);
    void AddNearbyPokemon(...);
    int UpdatePokemonVisibility(...);
    void PrepareForDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class GlobalSettings {
    // Fields:
    String cachedSha1;
    GlobalSettingsProto settings;
    Generic SettingsUpdated;

    // Methods:
    void .ctor(...);
    void add_SettingsUpdated(...);
    void remove_SettingsUpdated(...);
    GlobalSettingsProto get_Settings(...);
    void OverwriteSettings(...);
    void RegisterSettingsSideChannel(...);
    Request buildSettingsSideChannelRequest(...);
    void handleSettingsSideChannelResponse(...);
    void <buildSettingsSideChannelRequest>m__F3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GlobalSettingsProto {
    // Fields:
    int FortSettingsFieldNumber = 2;
    int MapSettingsFieldNumber = 3;
    int LevelSettingsFieldNumber = 4;
    int InventorySettingsFieldNumber = 5;
    int MinimumClientVersionFieldNumber = 6;
    Generic _parser;
    FortSettingsProto fortSettings_;
    MapSettingsProto mapSettings_;
    LevelSettingsProto levelSettings_;
    InventorySettingsProto inventorySettings_;
    String minimumClientVersion_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GlobalSettingsProto Clone(...);
    FortSettingsProto get_FortSettings(...);
    void set_FortSettings(...);
    MapSettingsProto get_MapSettings(...);
    void set_MapSettings(...);
    LevelSettingsProto get_LevelSettings(...);
    void set_LevelSettings(...);
    InventorySettingsProto get_InventorySettings(...);
    void set_InventorySettings(...);
    String get_MinimumClientVersion(...);
    void set_MinimumClientVersion(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GlobalSettingsProto <_parser>m__1ED(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GlobalSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortSettingsProto {
    // Fields:
    int InteractionRangeMetersFieldNumber = 1;
    int MaxTotalDeployedPokemonFieldNumber = 2;
    int MaxPlayerDeployedPokemonFieldNumber = 3;
    int DeployStaminaMultiplierFieldNumber = 4;
    int DeployAttackMultiplierFieldNumber = 5;
    int FarInteractionRangeMetersFieldNumber = 6;
    Generic _parser;
    double interactionRangeMeters_;
    int maxTotalDeployedPokemon_;
    int maxPlayerDeployedPokemon_;
    double deployStaminaMultiplier_;
    double deployAttackMultiplier_;
    double farInteractionRangeMeters_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortSettingsProto Clone(...);
    double get_InteractionRangeMeters(...);
    void set_InteractionRangeMeters(...);
    int get_MaxTotalDeployedPokemon(...);
    void set_MaxTotalDeployedPokemon(...);
    int get_MaxPlayerDeployedPokemon(...);
    void set_MaxPlayerDeployedPokemon(...);
    double get_DeployStaminaMultiplier(...);
    void set_DeployStaminaMultiplier(...);
    double get_DeployAttackMultiplier(...);
    void set_DeployAttackMultiplier(...);
    double get_FarInteractionRangeMeters(...);
    void set_FarInteractionRangeMeters(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortSettingsProto <_parser>m__1EE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class MapSettingsProto {
    // Fields:
    int PokemonVisibleRangeFieldNumber = 1;
    int PokeNavRangeMetersFieldNumber = 2;
    int EncounterRangeMetersFieldNumber = 3;
    int GetMapObjectsMinRefreshSecondsFieldNumber = 4;
    int GetMapObjectsMaxRefreshSecondsFieldNumber = 5;
    int GetMapObjectsMinDistanceMetersFieldNumber = 6;
    int GoogleMapsApiKeyFieldNumber = 7;
    Generic _parser;
    double pokemonVisibleRange_;
    double pokeNavRangeMeters_;
    double encounterRangeMeters_;
    float getMapObjectsMinRefreshSeconds_;
    float getMapObjectsMaxRefreshSeconds_;
    float getMapObjectsMinDistanceMeters_;
    String googleMapsApiKey_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MapSettingsProto Clone(...);
    double get_PokemonVisibleRange(...);
    void set_PokemonVisibleRange(...);
    double get_PokeNavRangeMeters(...);
    void set_PokeNavRangeMeters(...);
    double get_EncounterRangeMeters(...);
    void set_EncounterRangeMeters(...);
    float get_GetMapObjectsMinRefreshSeconds(...);
    void set_GetMapObjectsMinRefreshSeconds(...);
    float get_GetMapObjectsMaxRefreshSeconds(...);
    void set_GetMapObjectsMaxRefreshSeconds(...);
    float get_GetMapObjectsMinDistanceMeters(...);
    void set_GetMapObjectsMinDistanceMeters(...);
    String get_GoogleMapsApiKey(...);
    void set_GoogleMapsApiKey(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MapSettingsProto <_parser>m__1EF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MapSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class LevelSettingsProto {
    // Fields:
    int TrainerCpModifierFieldNumber = 2;
    int TrainerDifficultyModifierFieldNumber = 3;
    Generic _parser;
    double trainerCpModifier_;
    double trainerDifficultyModifier_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    LevelSettingsProto Clone(...);
    double get_TrainerCpModifier(...);
    void set_TrainerCpModifier(...);
    double get_TrainerDifficultyModifier(...);
    void set_TrainerDifficultyModifier(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    LevelSettingsProto <_parser>m__1F0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ LevelSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventorySettingsProto {
    // Fields:
    int MaxPokemonFieldNumber = 1;
    int MaxBagItemsFieldNumber = 2;
    int BasePokemonFieldNumber = 3;
    int BaseBagItemsFieldNumber = 4;
    int BaseEggsFieldNumber = 5;
    Generic _parser;
    int maxPokemon_;
    int maxBagItems_;
    int basePokemon_;
    int baseBagItems_;
    int baseEggs_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventorySettingsProto Clone(...);
    int get_MaxPokemon(...);
    void set_MaxPokemon(...);
    int get_MaxBagItems(...);
    void set_MaxBagItems(...);
    int get_BasePokemon(...);
    void set_BasePokemon(...);
    int get_BaseBagItems(...);
    void set_BaseBagItems(...);
    int get_BaseEggs(...);
    void set_BaseEggs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventorySettingsProto <_parser>m__1F1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventorySettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Request {
    // Fields:
    int method;
    IMessage payload;
    RpcFuture future;

    // Methods:
    void .ctor(...);
    void SetResult(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class RpcFuture {
    // Fields:
    boolean retSet;
    RpcData retValue;
    RpcStatus rpcStatus;
    Generic onReady;
    CancellationToken cancelToken;

    // Methods:
    void .ctor(...);
    void Recycle(...);
    RpcData NianticLabs.Platform.Tasks.IFuture<NianticLabs.Platform.RpcData>.get_Value(...);
    boolean get_IsCancelled(...);
    void Set(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ RpcData NianticLabs.Platform.Tasks.IFuture<NianticLabs.Platform.RpcData>.get_Value(...);
}

// Namespace: NianticLabs.Platform
class RpcData {
    // Fields:
    int rpcId;
    CodedInputStream stream;

    // Methods:
    void .ctor(...);
    int get_RpcId(...);
    CodedInputStream get_Stream(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Platform
class RpcStatus {
    // Fields:
    int value__;
    RpcStatus UNDEFINED = 0;
    RpcStatus SUCCESS = 1;
    RpcStatus BAD_RESPONSE = 2;
    RpcStatus ACTION_ERROR = 3;
    RpcStatus DISPATCH_ERROR = 4;
    RpcStatus SERVER_ERROR = 5;
    RpcStatus ASSIGNMENT_ERROR = 6;
    RpcStatus PROTOCOL_ERROR = 7;
    RpcStatus AUTHENTICATION_ERROR = 8;
    RpcStatus CANCELLED_REQUEST = 9;
    RpcStatus UNKNOWN_ERROR = 10;
    RpcStatus NO_RETRIES_ERROR = 11;
    RpcStatus UNAUTHORIZED_ERROR = 12;
    RpcStatus PARSING_ERROR = 13;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: NianticLabs.Platform.Tasks
class CancellationToken {
    // Fields:
    boolean cancelled;

    // Methods:
    boolean get_IsCancelled(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class IWildMapPokemon {
    // Methods:
    void UpdateData(...);
    boolean get_VisibleOnMap(...);
    void set_VisibleOnMap(...);
}

// Namespace: Niantic.Holoholo
class INianticMapApi {
    // Methods:
    void ClearCache(...);
    void GetView(...);
    void SetView(...);
    void GetPosition(...);
    void GetWorldLocation(...);
    void SubscribeLayer(...);
}

// Namespace: Niantic.Holoholo
class INianticMapTileEventHandler {
    // Methods:
    void ProcessEvents(...);
    void SetTileManager(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapScene {
    // Methods:
    GameObject get_GameObject(...);
    Transform get_MapObjectsParent(...);
    void SetVisible(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class ICameraRig {
    // Methods:
    Camera get_MainCamera(...);
    void PushController(...);
    void PopController(...);
    void ClearControllers(...);
    void SetControllingCamera(...);
    void HideMap(...);
    void ShowMap(...);
    void HideMapCharacters(...);
    void ShowMapCharacters(...);
}

// Namespace: Niantic.Holoholo
class MapTile {
    // Fields:
    ulong id;
    double originX;
    double originY;
    double originZ;
    float size;
    int level;

    // Methods:
    void .ctor(...);
    ulong GetId(...);
    void GetOrigin(...);
    double GetSize(...);
    void UpdateTransform(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class ICompass {
    // Methods:
    float get_Heading(...);
    float get_RawHeading(...);
}

// Namespace: 
class DoNotOutline {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Outline {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class VertBucket {
    // Fields:
    Vector3 position;
    Generic verts;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Outliner {
    // Fields:
    Generic _cachedOutlines;

    // Methods:
    void .cctor(...);
    Generic BuildOutline(...);
    GameObject MakeEmptyChildObject(...);
    GameObject PlaceMarker(...);
    Mesh CopyMesh(...);
    void FlipMesh(...);
    void PushMesh(...);
    cmod_reqd ReverseWinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar
class PlayerAvatar {
    // Fields:
    RenderTexture AvatarTexture;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void SetupRenderTexture(...);
    void Update(...);
    IEnumerator OnApplicationPause(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar.Test
class AvatarCustomizationTestGui {
    // Fields:
    IAvatarService avatarService;
    Transform avatarAnchor;
    GameObject currentAvatar;
    int Avatar;
    int lastAvatar;
    int Skin;
    int lastSkin;
    int Eyes;
    int lastEyes;
    int Hair;
    int lastHair;
    int Shirt;
    int lastShirt;
    int Pants;
    int lastPants;
    int Hat;
    int lastHat;
    int Shoes;
    int lastShoes;
    int Pack;
    int lastPack;

    // Methods:
    void .ctor(...);
    void PostInject(...);
    void Update(...);
    void GenerateAvatar(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Avatar.Test
class AvatarCustomizationTestInstaller {
    // Fields:
    AvatarService avatarServicePrefab;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetBrowserController {
    // Fields:
    int selected;
    int lod;
    boolean loadFromResources;
    AssetBrowserView2D assetBrowserView2D;
    AssetBrowserView3D assetBrowserView3D;
    AssetDigest assetDigest;
    ListView listViewPrefab;
    ClickableTextListAdapter listAdapter;
    ListView listView;

    // Methods:
    void .ctor(...);
    int get_Selected(...);
    void set_Selected(...);
    int get_Lod(...);
    void set_Lod(...);
    boolean get_LoadFromResources(...);
    void set_LoadFromResources(...);
    void PostInject(...);
    void CreateAssetList(...);
    void OnDestroy(...);
    void ViewNext(...);
    void ViewPrev(...);
    void ToggleLOD(...);
    void ShowAssetList(...);
    void PlayAnimation(...);
    void ToggleDataSource(...);
    void LoadAsset(...);
    void LoadAsset(...);
    void <CreateAssetList>m__9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetBrowserView2D {
    // Fields:
    Text infoText;
    Text dataSourceText;
    Action <OnViewNext>k__BackingField;
    Action <OnViewPrev>k__BackingField;
    Action <OnToggleLOD>k__BackingField;
    Action <OnClickInfo>k__BackingField;
    Action <OnToggleDataSource>k__BackingField;
    Generic <OnPlayAnimation>k__BackingField;

    // Methods:
    void .ctor(...);
    Action get_OnViewNext(...);
    void set_OnViewNext(...);
    Action get_OnViewPrev(...);
    void set_OnViewPrev(...);
    Action get_OnToggleLOD(...);
    void set_OnToggleLOD(...);
    Action get_OnClickInfo(...);
    void set_OnClickInfo(...);
    Action get_OnToggleDataSource(...);
    void set_OnToggleDataSource(...);
    Generic get_OnPlayAnimation(...);
    void set_OnPlayAnimation(...);
    String get_Info(...);
    void set_Info(...);
    String get_DataSource(...);
    void set_DataSource(...);
    void ViewNext(...);
    void ViewPrev(...);
    void ToggleLOD(...);
    void ClickInfo(...);
    void PlayAnimation(...);
    void ToggleDataSource(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetBrowserView3D {
    // Fields:
    GameObject objectRoot;

    // Methods:
    void .ctor(...);
    GameObject get_ObjectRoot(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AssetDigest {
    // Fields:
    int MAX_FAIL_COUNT = 4;
    double MIN_REFRESH_TIME_HR = 23.000000;
    double CLOUD_URL_REFRESH_TIME_MINUTES = 4.500000;
    int digestSuccessCount;
    int digestFailCount;
    DateTime digestLastSuccess;
    ulong digestPublishTime_Unix;
    RemoteConfigCache remoteConfigCache;
    IRpcService rpc;
    Generic entries;
    Generic cloudUrls;
    Generic pendingAssetIdCloudUrlRequests;
    StateEntries <State>k__BackingField;

    // Methods:
    void .ctor(...);
    StateEntries get_State(...);
    void set_State(...);
    boolean get_IsReady(...);
    int get_Count(...);
    Generic get_Entries(...);
    long GetDigestAssetSize(...);
    long GetDigestAssetSizeTotal(...);
    Record Get(...);
    ulong GetPublishTime(...);
    String GetAssetId(...);
    void RefreshCloudURLs(...);
    void RequestCloudURL(...);
    boolean IsCloudUrlStale(...);
    void RetryCloudURLRequest(...);
    IEnumerator TimeOut(...);
    void Awake(...);
    void Update(...);
    void RequestAssetDigest(...);
    void RetryDigestRequest(...);
    void <RequestAssetDigest>m__F0(...);
    void <RetryDigestRequest>m__F1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class RemoteConfigCache {
    // Fields:
    String REMOTE_CONFIG_DIR;
    Generic currentVersion;
    Generic entries;
    IRpcService rpc;
    CacheState <State>k__BackingField;

    // Methods:
    void .ctor(...);
    CacheState get_State(...);
    void set_State(...);
    boolean get_IsReady(...);
    void Awake(...);
    int GetCachedOrDownloadAssetDigest(...);
    int GetCachedOrDownloadGameMasterClientTemplates(...);
    void SetServerCurrentVersion(...);
    void Purge(...);
    void PurgeAll(...);
    void RefreshCacheEntries(...);
    void WriteAsync(...);
    IEnumerator ReadAsync(...);
    String GetRemoteConfigPath(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class IRpcService {
    // Methods:
    int GetAssetDigest(...);
    int GetDownloadURL(...);
    int GetGameMasterClientTemplates(...);
    int GetRemoteConfigVersions(...);
    int SetAvatar(...);
    int MarkTutorialComplete(...);
    int FortDetails(...);
    int FortSearch(...);
    int Encounter(...);
    int GetMapObjects(...);
    int ClaimCodename(...);
    int GetGymDetails(...);
}

// Namespace: 
class CacheState {
    // Fields:
    int value__;
    CacheState FAILED = 0;
    CacheState UNINITIALIZED = 1;
    CacheState LOADING = 2;
    CacheState READY = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class StateEntries {
    // Fields:
    int value__;
    StateEntries FAILED = 0;
    StateEntries UNINITIALIZED = 1;
    StateEntries LOADING = 2;
    StateEntries READY = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Record {
    // Fields:
    String bundleName;
    long version;
    long size;
    uint checksum;
    cmod_reqd key;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class ListView {
    // Fields:
    RectTransform content;
    IListAdapter listAdapter;

    // Methods:
    void .ctor(...);
    IListAdapter get_ListAdapter(...);
    void set_ListAdapter(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnDestroy(...);
    void HandleListItemsChanged(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class IListAdapter {
    // Methods:
    void add_OnItemsChanged(...);
    void remove_OnItemsChanged(...);
    int get_Count(...);
    RectTransform GetView(...);
}

// Namespace: Niantic.Holoholo.Widget
class ClickableTextListAdapter {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ListItemClickableView CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: Niantic.Holoholo.Widget
class ListItemClickableView {
    // Fields:
    Action OnClick;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    void Click(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetBrowserGestureHandler {
    // Fields:
    float rotationSpeed;
    float minScale;
    float maxScale;
    Transform targetTransform;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnTransformed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetLoader {
    // Fields:
    String bundleName;
    String assetName;
    boolean fromResources;

    // Methods:
    void .ctor(...);
    IEnumerator Start(...);
    AssetLoader Load(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ApplicationChrome {
    // Fields:
    uint DEFAULT_BACKGROUND_COLOR = 4278190080;
    int VIEW_SYSTEM_UI_FLAG_VISIBLE = 0;
    int VIEW_SYSTEM_UI_FLAG_LOW_PROFILE = 1;
    int VIEW_SYSTEM_UI_FLAG_HIDE_NAVIGATION = 2;
    int VIEW_SYSTEM_UI_FLAG_FULLSCREEN = 4;
    int VIEW_SYSTEM_UI_FLAG_LAYOUT_STABLE = 256;
    int VIEW_SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION = 512;
    int VIEW_SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN = 1024;
    int VIEW_SYSTEM_UI_FLAG_IMMERSIVE = 2048;
    int VIEW_SYSTEM_UI_FLAG_IMMERSIVE_STICKY = 4096;
    int WINDOW_FLAG_FULLSCREEN;
    int WINDOW_FLAG_FORCE_NOT_FULLSCREEN;
    int WINDOW_FLAG_LAYOUT_IN_SCREEN;
    int WINDOW_FLAG_TRANSLUCENT_STATUS;
    int WINDOW_FLAG_TRANSLUCENT_NAVIGATION;
    int WINDOW_FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS;
    int systemUiVisibilityValue;
    int flagsValue;
    States _statusBarState;
    States _navigationBarState;
    uint _statusBarColor;
    uint _navigationBarColor;
    boolean _isStatusBarTranslucent;
    boolean _isNavigationBarTranslucent;
    boolean _dimmed;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void applyUIStates(...);
    void applyUIColors(...);
    void applyUIStatesAndroid(...);
    void runOnAndroidUiThread(...);
    void setSystemUiVisibility(...);
    void setSystemUiVisibilityInThread(...);
    void setFlags(...);
    void setFlagsInThread(...);
    void applyUIColorsAndroid(...);
    void applyUIColorsAndroidInThread(...);
    States get_navigationBarState(...);
    void set_navigationBarState(...);
    States get_statusBarState(...);
    void set_statusBarState(...);
    boolean get_dimmed(...);
    void set_dimmed(...);
    uint get_statusBarColor(...);
    void set_statusBarColor(...);
    uint get_navigationBarColor(...);
    void set_navigationBarColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class States {
    // Fields:
    int value__;
    States Unknown = 0;
    States Visible = 1;
    States VisibleOverContent = 2;
    States TranslucentOverContent = 3;
    States Hidden = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Cardboard {
    // Fields:
    Cardboard sdk;
    boolean vrModeEnabled;
    DistortionCorrectionMethod distortionCorrection;
    boolean enableAlignmentMarker;
    boolean enableSettingsButton;
    BackButtonModes backButtonMode;
    boolean tapIsTrigger;
    float neckModelScale;
    boolean autoDriftCorrection;
    boolean electronicDisplayStabilization;
    BaseVRDevice device;
    float stereoScreenScale;
    RenderTexture stereoScreen;
    Vector2 defaultComfortableViewingRange;
    Uri DefaultDeviceProfile;
    boolean updated;
    StereoScreenChangeDelegate OnStereoScreenChanged;
    Action OnTrigger;
    Action OnTilt;
    Action OnProfileChange;
    Action OnBackButton;
    boolean <NativeDistortionCorrectionSupported>k__BackingField;
    boolean <NativeUILayerSupported>k__BackingField;
    boolean <Triggered>k__BackingField;
    boolean <Tilted>k__BackingField;
    boolean <ProfileChanged>k__BackingField;
    boolean <BackButtonPressed>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_OnStereoScreenChanged(...);
    void remove_OnStereoScreenChanged(...);
    void add_OnTrigger(...);
    void remove_OnTrigger(...);
    void add_OnTilt(...);
    void remove_OnTilt(...);
    void add_OnProfileChange(...);
    void remove_OnProfileChange(...);
    void add_OnBackButton(...);
    void remove_OnBackButton(...);
    Cardboard get_SDK(...);
    boolean get_VRModeEnabled(...);
    void set_VRModeEnabled(...);
    DistortionCorrectionMethod get_DistortionCorrection(...);
    void set_DistortionCorrection(...);
    boolean get_EnableAlignmentMarker(...);
    void set_EnableAlignmentMarker(...);
    boolean get_EnableSettingsButton(...);
    void set_EnableSettingsButton(...);
    BackButtonModes get_BackButtonMode(...);
    void set_BackButtonMode(...);
    boolean get_TapIsTrigger(...);
    void set_TapIsTrigger(...);
    float get_NeckModelScale(...);
    void set_NeckModelScale(...);
    boolean get_AutoDriftCorrection(...);
    void set_AutoDriftCorrection(...);
    boolean get_ElectronicDisplayStabilization(...);
    void set_ElectronicDisplayStabilization(...);
    boolean get_NativeDistortionCorrectionSupported(...);
    void set_NativeDistortionCorrectionSupported(...);
    boolean get_NativeUILayerSupported(...);
    void set_NativeUILayerSupported(...);
    float get_StereoScreenScale(...);
    void set_StereoScreenScale(...);
    RenderTexture get_StereoScreen(...);
    void set_StereoScreen(...);
    CardboardProfile get_Profile(...);
    Pose3D get_HeadPose(...);
    Pose3D EyePose(...);
    Matrix4x4 Projection(...);
    Rect Viewport(...);
    Vector2 get_ComfortableViewingRange(...);
    void InitDevice(...);
    void Awake(...);
    boolean get_Triggered(...);
    void set_Triggered(...);
    boolean get_Tilted(...);
    void set_Tilted(...);
    boolean get_ProfileChanged(...);
    void set_ProfileChanged(...);
    boolean get_BackButtonPressed(...);
    void set_BackButtonPressed(...);
    void UpdateState(...);
    void DispatchEvents(...);
    IEnumerator EndOfFrame(...);
    void PostRender(...);
    void Recenter(...);
    void SetTouchCoordinates(...);
    void ShowSettingsDialog(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnApplicationPause(...);
    void OnApplicationFocus(...);
    void OnLevelWasLoaded(...);
    void OnApplicationQuit(...);
    void OnDestroy(...);
    boolean get_nativeDistortionCorrection(...);
    void set_nativeDistortionCorrection(...);
    boolean get_InCardboard(...);
    boolean get_CardboardTriggered(...);
    Matrix4x4 get_HeadView(...);
    Quaternion get_HeadRotation(...);
    Vector3 get_HeadPosition(...);
    Matrix4x4 EyeView(...);
    Vector3 EyeOffset(...);
    Matrix4x4 UndistortedProjection(...);
    Rect EyeRect(...);
    float get_MinimumComfortDistance(...);
    float get_MaximumComfortDistance(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DistortionCorrectionMethod {
    // Fields:
    int value__;
    DistortionCorrectionMethod None = 0;
    DistortionCorrectionMethod Native = 1;
    DistortionCorrectionMethod Unity = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class BackButtonModes {
    // Fields:
    int value__;
    BackButtonModes Off = 0;
    BackButtonModes OnlyInVR = 1;
    BackButtonModes On = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class BaseVRDevice {
    // Fields:
    BaseVRDevice device;
    MutablePose3D headPose;
    MutablePose3D leftEyePose;
    MutablePose3D rightEyePose;
    Matrix4x4 leftEyeDistortedProjection;
    Matrix4x4 rightEyeDistortedProjection;
    Matrix4x4 leftEyeUndistortedProjection;
    Matrix4x4 rightEyeUndistortedProjection;
    Rect leftEyeDistortedViewport;
    Rect rightEyeDistortedViewport;
    Rect leftEyeUndistortedViewport;
    Rect rightEyeUndistortedViewport;
    Vector2 recommendedTextureSize;
    boolean triggered;
    boolean tilted;
    boolean profileChanged;
    boolean backButtonPressed;
    CardboardProfile <Profile>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    CardboardProfile get_Profile(...);
    void set_Profile(...);
    void Init(...);
    void SetVRModeEnabled(...);
    void SetDistortionCorrectionEnabled(...);
    void SetStereoScreen(...);
    void SetSettingsButtonEnabled(...);
    void SetAlignmentMarkerEnabled(...);
    void SetVRBackButtonEnabled(...);
    void SetShowVrBackButtonOnlyInVR(...);
    void SetTapIsTrigger(...);
    void SetNeckModelScale(...);
    void SetAutoDriftCorrectionEnabled(...);
    void SetElectronicDisplayStabilizationEnabled(...);
    DisplayMetrics GetDisplayMetrics(...);
    boolean SupportsNativeDistortionCorrection(...);
    boolean SupportsNativeUILayer(...);
    boolean SupportsUnityRenderEvent(...);
    RenderTexture CreateStereoScreen(...);
    boolean SetDefaultDeviceProfile(...);
    void ShowSettingsDialog(...);
    Pose3D GetHeadPose(...);
    Pose3D GetEyePose(...);
    Matrix4x4 GetProjection(...);
    Rect GetViewport(...);
    void UpdateState(...);
    void UpdateScreenData(...);
    void Recenter(...);
    void PostRender(...);
    void SetTouchCoordinates(...);
    void OnPause(...);
    void OnFocus(...);
    void OnLevelLoaded(...);
    void OnApplicationQuit(...);
    void Destroy(...);
    void ComputeEyesFromProfile(...);
    Matrix4x4 MakeProjection(...);
    BaseVRDevice GetDevice(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DisplayMetrics GetDisplayMetrics(...);
    /*[05]*/ boolean SupportsNativeDistortionCorrection(...);
    /*[06]*/ boolean SupportsNativeUILayer(...);
    /*[07]*/ RenderTexture CreateStereoScreen(...);
    /*[08]*/ boolean SetDefaultDeviceProfile(...);
    /*[09]*/ void ShowSettingsDialog(...);
    /*[10]*/ void SetTouchCoordinates(...);
    /*[11]*/ void OnPause(...);
    /*[12]*/ void OnFocus(...);
    /*[13]*/ void OnLevelLoaded(...);
    /*[14]*/ void OnApplicationQuit(...);
    /*[15]*/ void Destroy(...);
}

// Namespace: 
class MutablePose3D {
    // Methods:
    void .ctor(...);
    void Set(...);
    void Set(...);
    void SetRightHanded(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CardboardProfile {
    // Fields:
    Screen screen;
    Device device;
    Screen Nexus5;
    Screen Nexus6;
    Screen GalaxyS6;
    Screen GalaxyNote4;
    Screen LGG3;
    Screen iPhone4;
    Screen iPhone5;
    Screen iPhone6;
    Screen iPhone6p;
    Device CardboardJun2014;
    Device CardboardMay2015;
    Device GoggleTechC1Glass;
    CardboardProfile Default;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    CardboardProfile Clone(...);
    float get_VerticalLensOffset(...);
    CardboardProfile GetKnownProfile(...);
    void GetLeftEyeVisibleTanAngles(...);
    void GetLeftEyeNoLensTanAngles(...);
    Rect GetLeftEyeVisibleScreenRect(...);
    float GetMaxRadius(...);
    cmod_reqd solveLeastSquares(...);
    Distortion ApproximateInverse(...);
    Distortion ApproximateInverse(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Screen {
    // Fields:
    float width;
    float height;
    float border;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Device {
    // Fields:
    Lenses lenses;
    MaxFOV maxFOV;
    Distortion distortion;
    Distortion inverse;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Lenses {
    // Fields:
    int AlignTop = -1;
    int AlignCenter = 0;
    int AlignBottom = 1;
    float separation;
    float offset;
    float screenDistance;
    int alignment;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MaxFOV {
    // Fields:
    float outer;
    float inner;
    float upper;
    float lower;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Distortion {
    // Fields:
    float k1;
    float k2;

    // Methods:
    float distort(...);
    float distortInv(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DisplayMetrics {
    // Fields:
    int width;
    int height;
    float xdpi;
    float ydpi;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Pose3D {
    // Fields:
    Matrix4x4 flipZ;
    Vector3 <Position>k__BackingField;
    Quaternion <Orientation>k__BackingField;
    Matrix4x4 <Matrix>k__BackingField;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    Vector3 get_Position(...);
    void set_Position(...);
    Quaternion get_Orientation(...);
    void set_Orientation(...);
    Matrix4x4 get_Matrix(...);
    void set_Matrix(...);
    Matrix4x4 get_RightHandedMatrix(...);
    void Set(...);
    void Set(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class StereoScreenChangeDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class Eye {
    // Fields:
    int value__;
    Eye Left = 0;
    Eye Right = 1;
    Eye Center = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Distortion {
    // Fields:
    int value__;
    Distortion Distorted = 0;
    Distortion Undistorted = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class ScreenSizes {
    // Fields:
    int value__;
    ScreenSizes Nexus5 = 0;
    ScreenSizes Nexus6 = 1;
    ScreenSizes GalaxyS6 = 2;
    ScreenSizes GalaxyNote4 = 3;
    ScreenSizes LGG3 = 4;
    ScreenSizes iPhone4 = 5;
    ScreenSizes iPhone5 = 6;
    ScreenSizes iPhone6 = 7;
    ScreenSizes iPhone6p = 8;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class DeviceTypes {
    // Fields:
    int value__;
    DeviceTypes CardboardJun2014 = 0;
    DeviceTypes CardboardMay2015 = 1;
    DeviceTypes GoggleTechC1Glass = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class BaseAndroidDevice {
    // Fields:
    AndroidJavaObject androidActivity;

    // Methods:
    void .ctor(...);
    boolean SupportsNativeDistortionCorrection(...);
    void Destroy(...);
    void ConnectToActivity(...);
    AndroidJavaClass GetClass(...);
    AndroidJavaObject Create(...);
    boolean CallStaticMethod(...);
    boolean CallObjectMethod(...);
    boolean CallStaticMethod(...);
    boolean CallObjectMethod(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DisplayMetrics GetDisplayMetrics(...);
    /*[05]*/ boolean SupportsNativeDistortionCorrection(...);
    /*[06]*/ boolean SupportsNativeUILayer(...);
    /*[07]*/ RenderTexture CreateStereoScreen(...);
    /*[08]*/ boolean SetDefaultDeviceProfile(...);
    /*[09]*/ void ShowSettingsDialog(...);
    /*[10]*/ void SetTouchCoordinates(...);
    /*[11]*/ void OnPause(...);
    /*[12]*/ void OnFocus(...);
    /*[13]*/ void OnLevelLoaded(...);
    /*[14]*/ void OnApplicationQuit(...);
    /*[15]*/ void Destroy(...);
    /*[16]*/ void ConnectToActivity(...);
}

// Namespace: 
class BaseCardboardDevice {
    // Fields:
    int kCardboardRenderEvent = 1196770114;
    int kTriggered = 1;
    int kTilted = 2;
    int kProfileChanged = 3;
    int kVRBackButton = 4;
    String dllName = "vrunity";
    cmod_reqd headData;
    cmod_reqd viewData;
    cmod_reqd profileData;
    Matrix4x4 headView;
    Matrix4x4 leftEyeView;
    Matrix4x4 rightEyeView;
    Generic eventQueue;
    boolean debugDisableNativeProjections;
    boolean debugDisableNativeDistortion;
    boolean debugDisableNativeUILayer;
    cmod_reqd events;

    // Methods:
    void .ctor(...);
    boolean SupportsNativeDistortionCorrection(...);
    void SetDistortionCorrectionEnabled(...);
    void SetNeckModelScale(...);
    void SetAutoDriftCorrectionEnabled(...);
    void SetElectronicDisplayStabilizationEnabled(...);
    boolean SetDefaultDeviceProfile(...);
    void Init(...);
    void SetStereoScreen(...);
    void UpdateState(...);
    void UpdateScreenData(...);
    void Recenter(...);
    void PostRender(...);
    void OnPause(...);
    void OnApplicationQuit(...);
    void UpdateView(...);
    void UpdateProfile(...);
    int ExtractMatrix(...);
    void ProcessEvents(...);
    void OnVREvent(...);
    void Start(...);
    void SetEventCallback(...);
    void SetTextureId(...);
    boolean SetDefaultProfile(...);
    void SetUnityVersion(...);
    void EnableDistortionCorrection(...);
    void EnableAutoDriftCorrection(...);
    void EnableElectronicDisplayStabilization(...);
    void SetNeckModelFactor(...);
    void ResetHeadTracker(...);
    void GetProfile(...);
    void GetHeadPose(...);
    void GetViewParameters(...);
    void Pause(...);
    void Resume(...);
    void Stop(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Init(...);
    /*[05]*/ void SetDistortionCorrectionEnabled(...);
    /*[06]*/ void SetStereoScreen(...);
    /*[07]*/ void SetNeckModelScale(...);
    /*[08]*/ void SetAutoDriftCorrectionEnabled(...);
    /*[09]*/ void SetElectronicDisplayStabilizationEnabled(...);
    /*[10]*/ DisplayMetrics GetDisplayMetrics(...);
    /*[11]*/ boolean SupportsNativeDistortionCorrection(...);
    /*[12]*/ boolean SupportsNativeUILayer(...);
    /*[13]*/ RenderTexture CreateStereoScreen(...);
    /*[14]*/ boolean SetDefaultDeviceProfile(...);
    /*[15]*/ void ShowSettingsDialog(...);
    /*[16]*/ void UpdateState(...);
    /*[17]*/ void UpdateScreenData(...);
    /*[18]*/ void Recenter(...);
    /*[19]*/ void PostRender(...);
    /*[20]*/ void SetTouchCoordinates(...);
    /*[21]*/ void OnPause(...);
    /*[22]*/ void OnFocus(...);
    /*[23]*/ void OnLevelLoaded(...);
    /*[24]*/ void OnApplicationQuit(...);
    /*[25]*/ void Destroy(...);
    /*[26]*/ void ConnectToActivity(...);
    /*[27]*/ void ProcessEvents(...);
}

// Namespace: 
class VREventCallback {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class CardboardAndroidDevice {
    // Fields:
    String ActivityListenerClass = "com.google.vr.platform.unity.UnityVrActivityListener";
    AndroidJavaObject activityListener;

    // Methods:
    void .ctor(...);
    void Init(...);
    void ConnectToActivity(...);
    DisplayMetrics GetDisplayMetrics(...);
    void SetVRModeEnabled(...);
    void SetSettingsButtonEnabled(...);
    void SetAlignmentMarkerEnabled(...);
    void SetVRBackButtonEnabled(...);
    void SetShowVrBackButtonOnlyInVR(...);
    void SetTapIsTrigger(...);
    void SetTouchCoordinates(...);
    void ShowSettingsDialog(...);
    void ProcessEvents(...);
    void SetApplicationState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Init(...);
    /*[05]*/ void SetVRModeEnabled(...);
    /*[06]*/ void SetDistortionCorrectionEnabled(...);
    /*[07]*/ void SetStereoScreen(...);
    /*[08]*/ void SetSettingsButtonEnabled(...);
    /*[09]*/ void SetAlignmentMarkerEnabled(...);
    /*[10]*/ void SetVRBackButtonEnabled(...);
    /*[11]*/ void SetShowVrBackButtonOnlyInVR(...);
    /*[12]*/ void SetTapIsTrigger(...);
    /*[13]*/ void SetNeckModelScale(...);
    /*[14]*/ void SetAutoDriftCorrectionEnabled(...);
    /*[15]*/ void SetElectronicDisplayStabilizationEnabled(...);
    /*[16]*/ DisplayMetrics GetDisplayMetrics(...);
    /*[17]*/ boolean SupportsNativeDistortionCorrection(...);
    /*[18]*/ boolean SupportsNativeUILayer(...);
    /*[19]*/ RenderTexture CreateStereoScreen(...);
    /*[20]*/ boolean SetDefaultDeviceProfile(...);
    /*[21]*/ void ShowSettingsDialog(...);
    /*[22]*/ void UpdateState(...);
    /*[23]*/ void UpdateScreenData(...);
    /*[24]*/ void Recenter(...);
    /*[25]*/ void PostRender(...);
    /*[26]*/ void SetTouchCoordinates(...);
    /*[27]*/ void OnPause(...);
    /*[28]*/ void OnFocus(...);
    /*[29]*/ void OnLevelLoaded(...);
    /*[30]*/ void OnApplicationQuit(...);
    /*[31]*/ void Destroy(...);
    /*[32]*/ void ConnectToActivity(...);
    /*[33]*/ void ProcessEvents(...);
}

// Namespace: Crittercism.Android
class CrittercismAndroid {
    // Fields:
    boolean isInitialized;
    String CRITTERCISM_CLASS;
    AndroidJavaClass mCrittercismsPlugin;
    boolean logUnhandledExceptionAsCrash;

    // Methods:
    void .cctor(...);
    void Init(...);
    void Init(...);
    String StackTrace(...);
    void LogHandledException(...);
    void LogUnhandledException(...);
    boolean GetOptOut(...);
    void SetOptOut(...);
    void SetUsername(...);
    void SetMetadata(...);
    void SetValue(...);
    void LeaveBreadcrumb(...);
    void BeginTransaction(...);
    void EndTransaction(...);
    void FailTransaction(...);
    void SetTransactionValue(...);
    int GetTransactionValue(...);
    void OnUnhandledException(...);
    void SetLogUnhandledExceptionAsCrash(...);
    boolean GetLogUnhandledExceptionAsCrash(...);
    void OnLogMessageReceived(...);
    void PluginCallStatic(...);
    cmod_opt PluginCallStatic(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Crittercism.Android
class CrittercismConfig {
    // Fields:
    String CRITTERCISM_CONFIG_CLASS;
    AndroidJavaObject mCrittercismConfig;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    AndroidJavaObject GetAndroidConfig(...);
    String GetCustomVersionName(...);
    void SetCustomVersionName(...);
    boolean IsLogcatReportingEnabled(...);
    void SetLogcatReportingEnabled(...);
    void CallConfigMethod(...);
    cmod_opt CallConfigMethod(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Crittercism.Android
class Logger {
    // Methods:
    void .ctor(...);
    void SetUsername(...);
    void SetOptOut(...);
    void LeaveBreadcrumbFormat(...);
    void LeaveBreadcrumb(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void SetUsername(...);
    /*[05]*/ void SetOptOut(...);
    /*[06]*/ void LeaveBreadcrumbFormat(...);
    /*[07]*/ void LeaveBreadcrumb(...);
}

// Namespace: Crittercism
class CrittercismInit {
    // Fields:
    String CrittercismAppID = "5644ec0f8d4d8c0a00d081f1";
    ICrittercismLogger loggerInstance;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    ICrittercismLogger get_LoggerInstance(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ICrittercismLogger {
    // Methods:
    void .ctor(...);
    void SetUsername(...);
    void SetOptOut(...);
    void LeaveBreadcrumbFormat(...);
    void LeaveBreadcrumb(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void LeaveBreadcrumb(...);
}

// Namespace: 
class CrittercismLogger {
    // Fields:
    IAuthenticationService <AuthenticationService>k__BackingField;

    // Methods:
    void .ctor(...);
    IAuthenticationService get_AuthenticationService(...);
    void set_AuthenticationService(...);
    boolean get_TrackingDisabled(...);
    void SetUsername(...);
    void SetOptOut(...);
    void LeaveBreadcrumbFormat(...);
    void LeaveBreadcrumb(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Auth
class IAuthenticationService {
    // Methods:
    void add_AuthorizationRevoked(...);
    void remove_AuthorizationRevoked(...);
    boolean get_CachedAuthTokenExists(...);
    AuthTokenProvider get_CachedAuthTokenProvider(...);
    boolean get_FirstTimeAuthCompleted(...);
    boolean get_TrackingDisabled(...);
    boolean get_UserAboveMinimumMarketingAge(...);
    boolean get_IsConnected(...);
    Generic AttemptGoogleLogin(...);
    Generic AttemptPtcLogin(...);
    Generic AttemptCachedLogin(...);
    void CancelPendingConnection(...);
    void SignOut(...);
    void DebugClearData(...);
}

// Namespace: Niantic.Holoholo.Auth
class AuthTokenProvider {
    // Fields:
    int value__;
    AuthTokenProvider None = 0;
    AuthTokenProvider Google = 1;
    AuthTokenProvider Ptc = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: EnhancedUI
class EnhancedScroller {
    // Fields:
    int DATA_INDICES_PER_JUMP_MARKER = 1000;
    ItemSelectedDelegate itemSelected;
    ItemSelectedIntDelegate itemSelectedInt;
    ItemSelectedFloatDelegate itemSelectedFloat;
    ItemSelectedStringDelegate itemSelectedString;
    ScrollRect scrollRect;
    RectTransform listItemContainer;
    Scrollbar scrollbar;
    GameObject listItemPrefab;
    ScrollbarDisplayMode scrollbarDisplayMode;
    boolean loop;
    Generic _jumpMarkers;
    int _jumpMarkerCount;
    Generic _data;
    Generic _listItemSizes;
    float _constantSize;
    Generic _listItemOffsets;
    Generic _recycleItems;
    Generic _inuseItems;
    Generic _listItems;
    RectTransform _scrollRectTransform;
    Mask _scrollRectMask;
    float _firstDataUID;
    int _lastFirstDataUIDInt;
    int _lastLastDataUIDInt;
    boolean _scrollActive;
    float _lastScrollRectSize;

    // Methods:
    void .ctor(...);
    void Reload(...);
    void Reload(...);
    void JumpToIndex(...);
    void ToggleMask(...);
    void ToggleLoop(...);
    void SetScrollBarDisplayMode(...);
    float get__ListItemContainerSize(...);
    float get__ScrollRectSize(...);
    float get__ListSize(...);
    boolean get__VerticalScrolling(...);
    void Awake(...);
    void Update(...);
    void ScrollbarScrolled(...);
    void Refresh(...);
    void CreateListItem(...);
    void SetListItemContainer(...);
    float ItemPosition(...);
    Vector2 ItemSize(...);
    float CalculateFirstScrollUID(...);
    float CalculateLastScrollUID(...);
    float CalculateScrollUID(...);
    float CalculateScrollPosition(...);
    Vector2 CreateVector(...);
    void SetScrollBarVisibility(...);
    void ItemSelected(...);
    void ItemSelected(...);
    void ItemSelected(...);
    void ItemSelected(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: EnhancedUI
class ItemSelectedDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: EnhancedUI
class ItemSelectedIntDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: EnhancedUI
class ItemSelectedFloatDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: EnhancedUI
class ItemSelectedStringDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class ScrollbarDisplayMode {
    // Fields:
    int value__;
    ScrollbarDisplayMode ShowIfRelevant = 0;
    ScrollbarDisplayMode Always = 1;
    ScrollbarDisplayMode Never = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class JumpMarker {
    // Fields:
    int dataIndex;
    float offset;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: EnhancedUI
class ListItemBase {
    // Fields:
    int _dataIndex;
    int <ItemIndex>k__BackingField;
    int <UID>k__BackingField;
    EnhancedScroller <Scroller>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_ItemIndex(...);
    void set_ItemIndex(...);
    int get_DataIndex(...);
    void set_DataIndex(...);
    int get_UID(...);
    void set_UID(...);
    EnhancedScroller get_Scroller(...);
    void set_Scroller(...);
    boolean get_IsActive(...);
    void set_IsActive(...);
    RectTransform get_MainRectTransform(...);
    void SetData(...);
    void CopyItem(...);
    void ItemSelected(...);
    void ItemSelected(...);
    void ItemSelected(...);
    void ItemSelected(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ EnhancedScroller get_Scroller(...);
    /*[05]*/ void set_Scroller(...);
    /*[06]*/ boolean get_IsActive(...);
    /*[07]*/ void set_IsActive(...);
    /*[08]*/ RectTransform get_MainRectTransform(...);
    /*[09]*/ void SetData(...);
    /*[10]*/ void CopyItem(...);
    /*[11]*/ void ItemSelected(...);
    /*[12]*/ void ItemSelected(...);
    /*[13]*/ void ItemSelected(...);
    /*[14]*/ void ItemSelected(...);
}

// Namespace: 
class SmallList`1 {
    // Fields:
    cmod_reqd data;
    int Count;

    // Methods:
    void .ctor(...);
    var get_Item(...);
    void set_Item(...);
    void ResizeArray(...);
    void Clear(...);
    void Add(...);
    var RemoveEnd(...);
    boolean Contains(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LeanTest {
    // Fields:
    int expected;
    int tests;
    int passes;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void debug(...);
    String padRight(...);
    float printOutLength(...);
    String formatBC(...);
    String formatB(...);
    String formatC(...);
    void overview(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LTRect {
    // Fields:
    Rect _rect;
    float alpha;
    float rotation;
    Vector2 pivot;
    Vector2 margin;
    Rect relativeRect;
    boolean rotateEnabled;
    boolean rotateFinished;
    boolean alphaEnabled;
    String labelStr;
    Element_Type type;
    GUIStyle style;
    boolean useColor;
    Color color;
    boolean fontScaleToFit;
    boolean useSimpleScale;
    boolean sizeByHeight;
    Texture texture;
    int _id;
    int counter;
    boolean colorTouched;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    boolean get_hasInitiliazed(...);
    int get_id(...);
    void setId(...);
    void reset(...);
    void resetForRotation(...);
    float get_x(...);
    void set_x(...);
    float get_y(...);
    void set_y(...);
    float get_width(...);
    void set_width(...);
    float get_height(...);
    void set_height(...);
    Rect get_rect(...);
    void set_rect(...);
    LTRect setStyle(...);
    LTRect setFontScaleToFit(...);
    LTRect setColor(...);
    LTRect setAlpha(...);
    LTRect setLabel(...);
    LTRect setUseSimpleScale(...);
    LTRect setUseSimpleScale(...);
    LTRect setSizeByHeight(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Element_Type {
    // Fields:
    int value__;
    Element_Type Texture = 0;
    Element_Type Label = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class LTBezier {
    // Fields:
    float length;
    Vector3 a;
    Vector3 aa;
    Vector3 bb;
    Vector3 cc;
    float len;
    cmod_reqd arcLengths;

    // Methods:
    void .ctor(...);
    float map(...);
    Vector3 bezierPoint(...);
    Vector3 point(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LTBezierPath {
    // Fields:
    cmod_reqd pts;
    float length;
    boolean orientToPath;
    boolean orientToPath2d;
    cmod_reqd beziers;
    cmod_reqd lengthRatio;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void setPoints(...);
    Vector3 point(...);
    void place2d(...);
    void placeLocal2d(...);
    void place(...);
    void place(...);
    void placeLocal(...);
    void placeLocal(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LTSpline {
    // Fields:
    cmod_reqd pts;
    boolean orientToPath;
    boolean orientToPath2d;
    cmod_reqd lengthRatio;
    cmod_reqd lengths;
    int numSections;
    int currPt;
    float totalLength;

    // Methods:
    void .ctor(...);
    float map(...);
    Vector3 interp(...);
    Vector3 point(...);
    void place2d(...);
    void placeLocal2d(...);
    void place(...);
    void place(...);
    void placeLocal(...);
    void placeLocal(...);
    void gizmoDraw(...);
    Vector3 Velocity(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TweenAction {
    // Fields:
    int value__;
    TweenAction MOVE_X = 0;
    TweenAction MOVE_Y = 1;
    TweenAction MOVE_Z = 2;
    TweenAction MOVE_LOCAL_X = 3;
    TweenAction MOVE_LOCAL_Y = 4;
    TweenAction MOVE_LOCAL_Z = 5;
    TweenAction MOVE_CURVED = 6;
    TweenAction MOVE_CURVED_LOCAL = 7;
    TweenAction MOVE_SPLINE = 8;
    TweenAction MOVE_SPLINE_LOCAL = 9;
    TweenAction SCALE_X = 10;
    TweenAction SCALE_Y = 11;
    TweenAction SCALE_Z = 12;
    TweenAction ROTATE_X = 13;
    TweenAction ROTATE_Y = 14;
    TweenAction ROTATE_Z = 15;
    TweenAction ROTATE_AROUND = 16;
    TweenAction ROTATE_AROUND_LOCAL = 17;
    TweenAction CANVAS_ROTATEAROUND = 18;
    TweenAction CANVAS_ROTATEAROUND_LOCAL = 19;
    TweenAction CANVAS_PLAYSPRITE = 20;
    TweenAction ALPHA = 21;
    TweenAction TEXT_ALPHA = 22;
    TweenAction CANVAS_ALPHA = 23;
    TweenAction ALPHA_VERTEX = 24;
    TweenAction COLOR = 25;
    TweenAction CALLBACK_COLOR = 26;
    TweenAction TEXT_COLOR = 27;
    TweenAction CANVAS_COLOR = 28;
    TweenAction CALLBACK = 29;
    TweenAction MOVE = 30;
    TweenAction MOVE_LOCAL = 31;
    TweenAction ROTATE = 32;
    TweenAction ROTATE_LOCAL = 33;
    TweenAction SCALE = 34;
    TweenAction VALUE3 = 35;
    TweenAction GUI_MOVE = 36;
    TweenAction GUI_MOVE_MARGIN = 37;
    TweenAction GUI_SCALE = 38;
    TweenAction GUI_ALPHA = 39;
    TweenAction GUI_ROTATE = 40;
    TweenAction DELAYED_SOUND = 41;
    TweenAction CANVAS_MOVE = 42;
    TweenAction CANVAS_SCALE = 43;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class LeanTweenType {
    // Fields:
    int value__;
    LeanTweenType notUsed = 0;
    LeanTweenType linear = 1;
    LeanTweenType easeOutQuad = 2;
    LeanTweenType easeInQuad = 3;
    LeanTweenType easeInOutQuad = 4;
    LeanTweenType easeInCubic = 5;
    LeanTweenType easeOutCubic = 6;
    LeanTweenType easeInOutCubic = 7;
    LeanTweenType easeInQuart = 8;
    LeanTweenType easeOutQuart = 9;
    LeanTweenType easeInOutQuart = 10;
    LeanTweenType easeInQuint = 11;
    LeanTweenType easeOutQuint = 12;
    LeanTweenType easeInOutQuint = 13;
    LeanTweenType easeInSine = 14;
    LeanTweenType easeOutSine = 15;
    LeanTweenType easeInOutSine = 16;
    LeanTweenType easeInExpo = 17;
    LeanTweenType easeOutExpo = 18;
    LeanTweenType easeInOutExpo = 19;
    LeanTweenType easeInCirc = 20;
    LeanTweenType easeOutCirc = 21;
    LeanTweenType easeInOutCirc = 22;
    LeanTweenType easeInBounce = 23;
    LeanTweenType easeOutBounce = 24;
    LeanTweenType easeInOutBounce = 25;
    LeanTweenType easeInBack = 26;
    LeanTweenType easeOutBack = 27;
    LeanTweenType easeInOutBack = 28;
    LeanTweenType easeInElastic = 29;
    LeanTweenType easeOutElastic = 30;
    LeanTweenType easeInOutElastic = 31;
    LeanTweenType easeSpring = 32;
    LeanTweenType easeShake = 33;
    LeanTweenType punch = 34;
    LeanTweenType once = 35;
    LeanTweenType clamp = 36;
    LeanTweenType pingPong = 37;
    LeanTweenType animationCurve = 38;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class LTDescr {
    // Fields:
    boolean toggle;
    boolean useEstimatedTime;
    boolean useFrames;
    boolean useManualTime;
    boolean hasInitiliazed;
    boolean hasPhysics;
    boolean onCompleteOnRepeat;
    boolean onCompleteOnStart;
    float passed;
    float delay;
    float time;
    float lastVal;
    uint _id;
    int loopCount;
    uint counter;
    float direction;
    float directionLast;
    boolean destroyOnComplete;
    Transform trans;
    LTRect ltRect;
    Vector3 from;
    Vector3 to;
    Vector3 diff;
    Vector3 point;
    Vector3 axis;
    Quaternion origRotation;
    LTBezierPath path;
    LTSpline spline;
    TweenAction type;
    LeanTweenType tweenType;
    AnimationCurve animationCurve;
    LeanTweenType loopType;
    boolean hasUpdateCallback;
    Generic onUpdateFloat;
    Generic onUpdateFloatObject;
    Generic onUpdateVector2;
    Generic onUpdateVector3;
    Generic onUpdateVector3Object;
    Generic onUpdateColor;
    Action onComplete;
    Generic onCompleteObject;
    mvar onCompleteParam;
    mvar onUpdateParam;
    RectTransform rectTransform;
    Text uiText;
    Image uiImage;
    cmod_reqd sprites;
    uint global_counter;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    String ToString(...);
    LTDescr cancel(...);
    int get_uniqueId(...);
    int get_id(...);
    void reset(...);
    void init(...);
    LTDescr setFromColor(...);
    LTDescr pause(...);
    LTDescr resume(...);
    LTDescr setAxis(...);
    LTDescr setDelay(...);
    LTDescr setEase(...);
    LTDescr setEase(...);
    LTDescr setTo(...);
    LTDescr setFrom(...);
    LTDescr setFrom(...);
    LTDescr setDiff(...);
    LTDescr setHasInitialized(...);
    LTDescr setId(...);
    LTDescr setTime(...);
    LTDescr setRepeat(...);
    LTDescr setLoopType(...);
    LTDescr setUseEstimatedTime(...);
    LTDescr setUseFrames(...);
    LTDescr setUseManualTime(...);
    LTDescr setLoopCount(...);
    LTDescr setLoopOnce(...);
    LTDescr setLoopClamp(...);
    LTDescr setLoopPingPong(...);
    LTDescr setOnComplete(...);
    LTDescr setOnComplete(...);
    LTDescr setOnComplete(...);
    LTDescr setOnCompleteParam(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdateObject(...);
    LTDescr setOnUpdateVector2(...);
    LTDescr setOnUpdateVector3(...);
    LTDescr setOnUpdateColor(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdate(...);
    LTDescr setOnUpdateParam(...);
    LTDescr setOrientToPath(...);
    LTDescr setOrientToPath2d(...);
    LTDescr setRect(...);
    LTDescr setRect(...);
    LTDescr setPath(...);
    LTDescr setPoint(...);
    LTDescr setDestroyOnComplete(...);
    LTDescr setAudio(...);
    LTDescr setOnCompleteOnRepeat(...);
    LTDescr setOnCompleteOnStart(...);
    LTDescr setRect(...);
    LTDescr setSprites(...);
    LTDescr setFrameRate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LeanTween {
    // Fields:
    boolean throwErrors;
    float tau;
    cmod_reqd tweens;
    cmod_reqd tweensFinished;
    LTDescr tween;
    int tweenMaxSearch;
    int maxTweens;
    int frameRendered;
    GameObject _tweenEmpty;
    float dtEstimated;
    float dtManual;
    float previousRealTime;
    float dt;
    float dtActual;
    int i;
    int j;
    int finishedCnt;
    AnimationCurve punch;
    AnimationCurve shake;
    Transform trans;
    float timeTotal;
    TweenAction tweenAction;
    float ratioPassed;
    float from;
    float val;
    boolean isTweenFinished;
    int maxTweenReached;
    Vector3 newVect;
    GameObject target;
    GameObject customTarget;
    int startSearch;
    LTDescr descr;
    cmod_reqd eventListeners;
    cmod_reqd goListeners;
    int eventsMaxSearch;
    int EVENTS_MAX;
    int LISTENERS_MAX;
    int INIT_LISTENERS_MAX;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void init(...);
    int get_maxSearch(...);
    void init(...);
    void reset(...);
    void Update(...);
    void OnLevelWasLoaded(...);
    void update(...);
    void textAlphaRecursive(...);
    Color tweenColor(...);
    void removeTween(...);
    cmod_reqd add(...);
    float closestRot(...);
    void cancelAll(...);
    void cancel(...);
    void cancel(...);
    void cancel(...);
    void cancel(...);
    LTDescr description(...);
    void pause(...);
    void pause(...);
    void pause(...);
    void pauseAll(...);
    void resumeAll(...);
    void resume(...);
    void resume(...);
    void resume(...);
    boolean isTweening(...);
    boolean isTweening(...);
    boolean isTweening(...);
    void drawBezierPath(...);
    mvar logError(...);
    LTDescr options(...);
    LTDescr options(...);
    GameObject get_tweenEmpty(...);
    LTDescr pushNewTween(...);
    LTDescr play(...);
    LTDescr alpha(...);
    LTDescr alpha(...);
    LTDescr textAlpha(...);
    LTDescr alphaVertex(...);
    LTDescr color(...);
    LTDescr textColor(...);
    LTDescr delayedCall(...);
    LTDescr delayedCall(...);
    LTDescr delayedCall(...);
    LTDescr delayedCall(...);
    LTDescr destroyAfter(...);
    LTDescr move(...);
    LTDescr move(...);
    LTDescr move(...);
    LTDescr moveSpline(...);
    LTDescr moveSplineLocal(...);
    LTDescr move(...);
    LTDescr moveMargin(...);
    LTDescr moveX(...);
    LTDescr moveY(...);
    LTDescr moveZ(...);
    LTDescr moveLocal(...);
    LTDescr moveLocal(...);
    LTDescr moveLocalX(...);
    LTDescr moveLocalY(...);
    LTDescr moveLocalZ(...);
    LTDescr rotate(...);
    LTDescr rotate(...);
    LTDescr rotateLocal(...);
    LTDescr rotateX(...);
    LTDescr rotateY(...);
    LTDescr rotateZ(...);
    LTDescr rotateAround(...);
    LTDescr rotateAroundLocal(...);
    LTDescr scale(...);
    LTDescr scale(...);
    LTDescr scaleX(...);
    LTDescr scaleY(...);
    LTDescr scaleZ(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr value(...);
    LTDescr delayedSound(...);
    LTDescr delayedSound(...);
    LTDescr move(...);
    LTDescr rotate(...);
    LTDescr rotateAround(...);
    LTDescr rotateAroundLocal(...);
    LTDescr scale(...);
    LTDescr alpha(...);
    LTDescr color(...);
    float tweenOnCurve(...);
    Vector3 tweenOnCurveVector(...);
    float easeOutQuadOpt(...);
    float easeInQuadOpt(...);
    float easeInOutQuadOpt(...);
    float linear(...);
    float clerp(...);
    float spring(...);
    float easeInQuad(...);
    float easeOutQuad(...);
    float easeInOutQuad(...);
    float easeInCubic(...);
    float easeOutCubic(...);
    float easeInOutCubic(...);
    float easeInQuart(...);
    float easeOutQuart(...);
    float easeInOutQuart(...);
    float easeInQuint(...);
    float easeOutQuint(...);
    float easeInOutQuint(...);
    float easeInSine(...);
    float easeOutSine(...);
    float easeInOutSine(...);
    float easeInExpo(...);
    float easeOutExpo(...);
    float easeInOutExpo(...);
    float easeInCirc(...);
    float easeOutCirc(...);
    float easeInOutCirc(...);
    float easeInBounce(...);
    float easeOutBounce(...);
    float easeInOutBounce(...);
    float easeInBack(...);
    float easeOutBack(...);
    float easeInOutBack(...);
    float easeInElastic(...);
    float easeOutElastic(...);
    float easeInOutElastic(...);
    void addListener(...);
    void addListener(...);
    boolean removeListener(...);
    boolean removeListener(...);
    void dispatchEvent(...);
    void dispatchEvent(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LTEvent {
    // Fields:
    int id;
    mvar data;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LTGUI {
    // Fields:
    int RECT_LEVELS;
    int RECTS_PER_LEVEL;
    int BUTTONS_MAX;
    cmod_reqd levels;
    cmod_reqd levelDepths;
    cmod_reqd buttons;
    cmod_reqd buttonLevels;
    cmod_reqd buttonLastFrame;
    LTRect r;
    Color color;
    boolean isGUIEnabled;
    int global_counter;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void init(...);
    void initRectCheck(...);
    void reset(...);
    void update(...);
    boolean checkOnScreen(...);
    void destroy(...);
    void destroyAll(...);
    LTRect label(...);
    LTRect label(...);
    LTRect texture(...);
    LTRect texture(...);
    LTRect element(...);
    boolean hasNoOverlap(...);
    boolean pressedWithinRect(...);
    boolean checkWithinRect(...);
    Vector2 firstTouch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: LunarConsole
class Gesture {
    // Fields:
    int value__;
    Gesture SwipeDown = 0;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: LunarConsole
class LunarConsole {
    // Fields:
    int capacity;
    int trim;
    Gesture gesture;

    // Methods:
    void .ctor(...);
    void Show(...);
    void Hide(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: LunarConsole
class LunarConsoleSettings {
    // Fields:
    boolean consoleEnabled;

    // Methods:
    void .cctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: LunarConsoleInternal
class LunarConstants {
    // Fields:
    String Version;
    String UpdateJsonURL;
    String PluginName;
    String PluginDisplayName;
    String PluginScriptPath;

    // Methods:
    void .cctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UpsightLoggerLevel {
    // Fields:
    int value__;
    UpsightLoggerLevel Off = -1;
    UpsightLoggerLevel Critical = 0;
    UpsightLoggerLevel Error = 1;
    UpsightLoggerLevel Warn = 2;
    UpsightLoggerLevel Info = 3;
    UpsightLoggerLevel Debug = 4;
    UpsightLoggerLevel Verbose = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class UpsightPurchaseResolution {
    // Fields:
    int value__;
    UpsightPurchaseResolution Buy = 0;
    UpsightPurchaseResolution Cancel = 1;
    UpsightPurchaseResolution Fraud = 2;
    UpsightPurchaseResolution Refund = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Upsight {
    // Fields:
    AndroidJavaObject _plugin;

    // Methods:
    void .ctor(...);
    void init(...);
    String getAppToken(...);
    String getPublicKey(...);
    String getSid(...);
    void setLoggerLevel(...);
    String getPluginVersion(...);
    boolean getOptOutStatus(...);
    void setOptOutStatus(...);
    void setUserAttributeString(...);
    void setUserAttributeFloat(...);
    void setUserAttributeInt(...);
    void setUserAttributeBool(...);
    String getUserAttributeString(...);
    float getUserAttributeFloat(...);
    int getUserAttributeInt(...);
    boolean getUserAttributeBool(...);
    String getManagedString(...);
    float getManagedFloat(...);
    int getManagedInt(...);
    boolean getManagedBool(...);
    void setLocation(...);
    void purgeLocation(...);
    void recordCustomEvent(...);
    void recordMilestoneEvent(...);
    boolean isContentReadyForBillboardWithScope(...);
    void prepareBillboard(...);
    void destroyBillboard(...);
    void recordMonetizationEvent(...);
    void recordGooglePlayPurchase(...);
    void recordAppleStorePurchase(...);
    void registerForPushNotifications(...);
    void unregisterForPushNotifications(...);
    void setShouldSynchronizeManagedVariables(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UpsightManager {
    // Fields:
    Generic onBillboardAppearEvent;
    Generic onBillboardDismissEvent;
    Generic billboardDidReceiveRewardEvent;
    Generic billboardDidReceivePurchaseEvent;
    Generic managedVariablesDidSynchronizeEvent;

    // Methods:
    void .ctor(...);
    void add_onBillboardAppearEvent(...);
    void remove_onBillboardAppearEvent(...);
    void add_onBillboardDismissEvent(...);
    void remove_onBillboardDismissEvent(...);
    void add_billboardDidReceiveRewardEvent(...);
    void remove_billboardDidReceiveRewardEvent(...);
    void add_billboardDidReceivePurchaseEvent(...);
    void remove_billboardDidReceivePurchaseEvent(...);
    void add_managedVariablesDidSynchronizeEvent(...);
    void remove_managedVariablesDidSynchronizeEvent(...);
    void init(...);
    void onBillboardAppear(...);
    void onBillboardDismiss(...);
    void billboardDidReceiveReward(...);
    void billboardDidReceivePurchase(...);
    void managedVariablesDidSynchronize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UpsightMiniJSON
class Json {
    // Methods:
    mvar Deserialize(...);
    String Serialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Parser {
    // Fields:
    String WORD_BREAK = "{}[],:"";
    StringReader json;
    Generic <>f__switch$map0;

    // Methods:
    void .ctor(...);
    boolean IsWordBreak(...);
    mvar Parse(...);
    void Dispose(...);
    Generic ParseObject(...);
    Generic ParseArray(...);
    mvar ParseValue(...);
    mvar ParseByToken(...);
    String ParseString(...);
    mvar ParseNumber(...);
    void EatWhitespace(...);
    char get_PeekChar(...);
    char get_NextChar(...);
    String get_NextWord(...);
    TOKEN get_NextToken(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: 
class TOKEN {
    // Fields:
    int value__;
    TOKEN NONE = 0;
    TOKEN CURLY_OPEN = 1;
    TOKEN CURLY_CLOSE = 2;
    TOKEN SQUARED_OPEN = 3;
    TOKEN SQUARED_CLOSE = 4;
    TOKEN COLON = 5;
    TOKEN COMMA = 6;
    TOKEN STRING = 7;
    TOKEN NUMBER = 8;
    TOKEN TRUE = 9;
    TOKEN FALSE = 10;
    TOKEN NULL = 11;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Serializer {
    // Fields:
    StringBuilder builder;

    // Methods:
    void .ctor(...);
    String Serialize(...);
    void SerializeValue(...);
    void SerializeObject(...);
    void SerializeArray(...);
    void SerializeString(...);
    void SerializeOther(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UpsightPurchase {
    // Methods:
    void .ctor(...);
    UpsightPurchase purchaseFromJson(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UpsightReward {
    // Fields:
    String <productIdentifier>k__BackingField;
    int <quantity>k__BackingField;
    String <signatureData>k__BackingField;
    String <billboardScope>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_productIdentifier(...);
    void set_productIdentifier(...);
    int get_quantity(...);
    void set_quantity(...);
    String get_signatureData(...);
    void set_signatureData(...);
    String get_billboardScope(...);
    void set_billboardScope(...);
    UpsightReward rewardFromJson(...);
    void populateFromJson(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.ForDebug.AssetBrowser
class AssetBrowserState {
    // Fields:
    AssetBrowserController controllerPrefab;
    AssetBrowserView3D assetBrowserView3DPrefab;
    AssetBrowserView2D assetBrowserView2DPrefab;
    AssetBrowserController controller;
    IMapAvatar avatar;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo
class GameState {
    // Fields:
    Factory gameStateFactory;
    GameState <ChildState>k__BackingField;
    GameState <ParentState>k__BackingField;
    boolean <IsActiveState>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_Name(...);
    void EnterState(...);
    void ExitState(...);
    GameState get_ChildState(...);
    void set_ChildState(...);
    GameState get_ParentState(...);
    void set_ParentState(...);
    boolean get_IsActiveState(...);
    void set_IsActiveState(...);
    boolean get_IsLeafState(...);
    boolean IsValidSubstate(...);
    cmod_opt SetActiveSubstate(...);
    void SetChild(...);
    void Collapse(...);
    cmod_opt Replace(...);
    void ClearSubstate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    cmod_opt GetState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameState Create(...);
    /*[05]*/ GameState Create(...);
}

// Namespace: 
class BootSequenceGuiController {
    // Fields:
    HoloBootMessage ErrorMessageBox;
    ProgressBar progressBar;
    II18n ii18n;

    // Methods:
    void .ctor(...);
    void SetProgressBarValue(...);
    void SetProgressBarText(...);
    boolean ShowErrorMessage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class HoloBootMessage {
    // Fields:
    Text messageText;
    Action messageRetryCallback;
    boolean isAnimating;
    boolean <IsReady>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_IsReady(...);
    void set_IsReady(...);
    void Awake(...);
    void Start(...);
    boolean ShowMessage(...);
    void OnRetryPressed(...);
    void AnimateIn(...);
    void AnimateOut(...);
    IEnumerator WaitToCall(...);
    void <AnimateOut>m__16(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class ProgressBar {
    // Fields:
    float progress;
    Image progressImage;
    Text text;

    // Methods:
    void .ctor(...);
    float get_Value(...);
    void set_Value(...);
    String get_Text(...);
    void set_Text(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Internationalization
class II18n {
    // Methods:
    void SetUpLanguageTable(...);
    String Text(...);
    String TextFormat(...);
    boolean HasText(...);
    String BadgeName(...);
    String ItemDesc(...);
    String ItemName(...);
    String PokemonName(...);
    String PokemonDesc(...);
    String PokemonType(...);
    String PokemonCategory(...);
    String PokemonMoveName(...);
    String PokemonMoveDesc(...);
}

// Namespace: Niantic.Holoholo.UI
class GuiLayer {
    // Fields:
    int value__;
    GuiLayer World = 0;
    GuiLayer MapScreen = 100;
    GuiLayer GameHud = 200;
    GuiLayer Screens = 300;
    GuiLayer Transitions = 350;
    GuiLayer RpcSpinner = 400;
    GuiLayer Conversation = 500;
    GuiLayer Toast = 600;
    GuiLayer Effects = 700;
    GuiLayer Modal = 800;
    GuiLayer Error = 900;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class IPromise {
    // Methods:
    IPromise Then(...);
    IPromise Error(...);
    IPromise Finally(...);
    CustomYieldInstruction get_Yield(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BootSequenceGuiController Create(...);
    /*[05]*/ BootSequenceGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Boot
class BootSignoutButton {
    // Fields:
    GameObject button;

    // Methods:
    void .ctor(...);
    void ShowSignout(...);
    void SignoutPressed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Boot
class BootState {
    // Fields:
    HoloBoot bootSequencePrefab;
    RootState rootState;
    AssetDigest assetDigest;
    NianticPlugin nianticPlugin;
    IAuthenticationService authenticationService;
    IConnectivityService connectivityService;
    Factory bootSequenceFactory;
    HoloBoot bootSequence;
    boolean bootComplete;
    String loadingSceneName;
    Music titleMusic;
    float showSignOutTime;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    IEnumerator InitializePlugin(...);
    void ExitState(...);
    void OnBootComplete(...);
    void CheckLoadingComplete(...);
    void ShowSignout(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Boot
class HoloBoot {
    // Fields:
    BootSequenceGuiController guiControllerPrefab;
    int maxGetPlayerRetries;
    float initialGetPlayerRetrySeconds;
    float maxGetPlayerRetrySeconds;
    IAuthenticationService authenticationService;
    IUserPromptsService userPromptsService;
    Factory guiControllerFactory;
    BootSequenceGuiController guiController;
    boolean bootWarningAccepted;
    AssetDigest assetDigest;
    Action BootComplete;

    // Methods:
    void .ctor(...);
    void add_BootComplete(...);
    void remove_BootComplete(...);
    void SetAssetDigest(...);
    void Init(...);
    void Start(...);
    void OnDestroy(...);
    IEnumerator CoBootSequence(...);
    void SetUserMessage(...);
    IEnumerator InitializePlugin(...);
    void RegisterRpcSideChannels(...);
    IEnumerator SendInitialGetPlayerRequest(...);
    IEnumerator InitializeUpsight(...);
    IEnumerator DisplayBootWarning(...);
    IEnumerator InitializeRemoteConfigVersions(...);
    IEnumerator InitializeBundleDigest(...);
    IEnumerator InitializeGameMasterTemplate(...);
    IEnumerator ConfirmBootWarning(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IUserPromptsService {
    // Methods:
    Generic ShowModal(...);
    Generic ShowNumericalPicker(...);
    IReceipt ShowBlockingError(...);
    IReceipt ShowNonBlockingError(...);
}

// Namespace: Niantic.Holoholo
class IReceipt {
    // Methods:
    void Complete(...);
}

// Namespace: Niantic.Holoholo
class RootState {
    // Fields:
    BootState bootStatePrefab;
    WorldMapState worldMapStatePrefab;
    AssetBrowserState assetBrowserStatePrefab;
    LoginState loginStatePrefab;
    FirstTimeUserState firstTimeUserStatePrefab;
    FirstTimeUserWorldMapState firstTimeUserMapStatePrefab;
    PlayerAwardsInstaller playerAwardsInstaller;
    TasksInstaller tasksInstaller;
    ImageDownloadService imageDownloadService;
    ConnectivityService connectivityPrefab;
    AvatarService avatarServicePrefab;
    LocaleService localeServicePrefab;
    IncubatorSelectorGuiService incubatorSelectorServicePrefab;
    IncubatorService incubatorServicePrefab;
    DefenderBonusService defenderBonusServicePrefab;
    IConnectivityService connectivityService;
    IAuthenticationService authenticationService;
    InputEventService inputEventServicePrefab;
    UserPromptsService userPromptGuis;
    GlobalGuiInstaller globalGuiInstaller;
    MusicService musicServicePrefab;
    BatterySaverService batterySaverServicePrefab;
    ColorUtil colorUtilPrefab;
    IBatterySaverService batterySaverService;
    IUserPromptsService userPrompts;
    IInputEventService inputEventService;
    IRpcService rpcService;
    II18n ii18n;
    IUserPromptsService userPromptsService;
    boolean clearCachedLogin;
    LoginState loginState;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void LoginComplete(...);
    void LoadingComplete(...);
    void OnboardingComplete(...);
    void SetupStatusAndNavBars(...);
    void OnAuthenticationRevoked(...);
    void SetupGraphics(...);
    void SetupLanguageTable(...);
    void <LoadingComplete>m__35(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Map
class WorldMapState {
    // Fields:
    String mapLevelName;
    MapExploreState mapExploreState;
    MapContentHandler mapContentHandlerPrefab;
    MapContentHandler mapContentHandler;
    MapEntityService mapEntityServicePrefab;
    GyroTracker gyroPrefab;
    BlobShadow blobShadowPrefab;
    MapViewHandler mapViewHandlerPrefab;
    SfidaService sfidaServicePrefab;
    WebCamProjector webcamProjectorPrefab;
    MapGestureHandler gestureHandlerPrefab;
    PoiDetailsService poiDetailsService;
    PoiInspectionService poiInspectionServicePrefab;
    PoiDirectoryService poiDirectoryServicePrefab;
    PlayerProximityService playerProximityServicePrefab;
    ProxyCamera proxyCameraPrefab;
    MapAvatar avatarPrefab;
    MapScene mapObjectRootPrefab;
    PokemonBoundsService pokemonBoundsServicePrefab;
    IMapController mapController;
    IRpcSpinnerGuiController rpcSpinnerGuiController;
    MapGestureHandler gestureHandlerInstance;
    IInputLayerStack inputLayerStack;
    IReceipt inputReceipt;
    ICameraRig cameraRig;
    ILocationProvider locationProvider;
    PlayerAvatarPortrait playerAvatarPortraitPrefab;
    PlayerAvatarPortrait playerAvatarPortrait;
    boolean simulateGpsJitter;
    float gpsJitterAmount;
    float gpsJitterRate;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    IEnumerator GpsJitter(...);
    void SetupScene(...);
    void PokemonEncounterComplete(...);
    void ActivateAssetBrowser(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Map
class MapExploreState {
    // Fields:
    WorldMapRenderer worldMapRendererPrefab;
    GymState gymBattleState;
    PokestopState pokestopState;
    WildPokemonEncounterState encounterState;
    WildMapPokemon wildMapPokemonPrefab;
    PlayerHudGuiController playerHudGuiPrefab;
    PokeNav pokeNavPrefab;
    CompassGuiController compassGuiPrefab;
    MainMenuGuiController mainMenuGuiPrefab;
    TimeOfDay mapLightingPrefab;
    WorldMapRenderer worldMapRenderer;
    ITimeOfDayService mapLighting;
    ICameraRig cameraRig;
    ISfidaService sfidaService;
    IBatterySaverService batterySaver;
    GlobalSettings globalSettings;
    IUserPromptsService userPrompts;
    IPlayerBuffService playerBuffService;
    IGuiLayerService guiLayerService;
    IXpAwardService xpAwardService;
    Factory eggHatchGuiFactory;
    Factory levelUpGuiFactory;
    Factory storefrontGuiFactory;
    Factory playerHudGuiFactory;
    Factory mainMenuGuiFactory;
    Factory compassGuiFactory;
    Factory pokeNavFactory;
    ILocationProvider locationProvider;
    IPlayerHudGuiController playerHudGui;
    IMainMenuGuiController mainMenuGui;
    ICompassGuiController compassGui;
    IPokeNav pokeNav;
    Music mapMusic;
    AudioSource gymSelectionSound;
    float visibilityCheckFrequency;
    Coroutine visibilityCheckRoutine;
    boolean <DisableInteractiveElements>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_DisableInteractiveElements(...);
    void set_DisableInteractiveElements(...);
    boolean get_IsActiveAndVisible(...);
    void GymSelected(...);
    void PokestopSelected(...);
    void PokemonSelected(...);
    void PokestopComplete(...);
    void GymComplete(...);
    void EnterState(...);
    cmod_opt SetActiveSubstate(...);
    void ClearSubstate(...);
    void ExitState(...);
    void InstantiateUI(...);
    void SetUIVisible(...);
    IEnumerator PeriodicallyCheckForVisibility(...);
    void <PokemonSelected>m__8F(...);
    void <EnterState>m__90(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
    /*[17]*/ boolean get_IsActiveAndVisible(...);
    /*[18]*/ void PokestopSelected(...);
    /*[19]*/ void PokemonSelected(...);
    /*[20]*/ void PokestopComplete(...);
    /*[21]*/ void GymComplete(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymState {
    // Fields:
    LayerMask visibleLayers;
    float refreshGymSeconds;
    Music mapMusic;
    float gymScale;
    LayerMask tempPastVisibleLayers;
    GymApproachState gymApproachState;
    GymBattleState gymBattleState;
    GymResolveState gymResolveState;
    GymAsset gymAssetPrefab;
    MapGym mapGymPrefab;
    GymBattleTransforms gymBattleTransformsPrefab;
    GymApproachPlatform approachPlatformPrefab;
    Transform oldCameraParent;
    ICameraRig cameraRig;
    MapExploreState mapExploreState;
    IInputLayerStack inputLayerStack;
    IReceipt inputReceipt;
    IPoiDetailsService poiDetailsService;
    Factory gymAssetFactory;
    IBehaviourService behaviourService;
    cmod_reqd playerTeam;
    IBattleTransforms battleTransforms;
    boolean outstandingRefreshRequest;
    boolean isInitialized;
    Generic refreshPromise;
    Generic OnGymStateRefreshed;
    MapGym <MapGym>k__BackingField;
    GymAsset <BattleGym>k__BackingField;
    boolean <IsActive>k__BackingField;
    String <GymName>k__BackingField;
    String <GymImageUrl>k__BackingField;
    Generic <GymMembers>k__BackingField;
    GymMembershipProto <Me>k__BackingField;
    PoiDetails <PoiDetails>k__BackingField;
    GymStateProto <GymStateProto>k__BackingField;
    ProxyCamera <ProxyCamera>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnGymStateRefreshed(...);
    void remove_OnGymStateRefreshed(...);
    MapGym get_MapGym(...);
    void set_MapGym(...);
    GymAsset get_BattleGym(...);
    void set_BattleGym(...);
    boolean get_IsActive(...);
    void set_IsActive(...);
    String get_GymName(...);
    void set_GymName(...);
    String get_GymImageUrl(...);
    void set_GymImageUrl(...);
    Generic get_GymMembers(...);
    void set_GymMembers(...);
    GymMembershipProto get_Me(...);
    void set_Me(...);
    PoiDetails get_PoiDetails(...);
    void set_PoiDetails(...);
    GymStateProto get_GymStateProto(...);
    void set_GymStateProto(...);
    ProxyCamera get_ProxyCamera(...);
    void set_ProxyCamera(...);
    void EnterState(...);
    void ExitState(...);
    void SetupBattleGym(...);
    IEnumerator RefreshGymState(...);
    Generic SingleRefresh(...);
    void OnGymStateResponse(...);
    GymBattleState StartBattle(...);
    void FailedToStartBattle(...);
    void BattleResolved(...);
    void ExitGym(...);
    PokemonProto GetDefenderPokemonProto(...);
    int GetDefenderPokemonId(...);
    void <SetupBattleGym>m__7B(...);
    void <SetupBattleGym>m__7C(...);
    void <SingleRefresh>m__7D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymApproachState {
    // Fields:
    ApproachService approachServicePrefab;
    GymApproachStateInput approachStateInputPrefab;
    GymState gymState;
    ApproachService approachService;
    ICameraRig cameraRig;
    IUserPromptsService userPrompts;
    IArService arService;
    II18n ii18n;
    Music approachMusic;
    ApproachCameraController approachCameraController;
    GymApproachStateInput approachStateInput;
    boolean <PlayerInRange>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_PlayerInRange(...);
    void set_PlayerInRange(...);
    void Init(...);
    void Awake(...);
    void EnterState(...);
    void ExitState(...);
    void StartBattle(...);
    void BackOut(...);
    void Update(...);
    void OnGymDataRefreshed(...);
    void HandleChangeDefenders(...);
    void UpdateRange(...);
    void <EnterState>m__5E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Gym
class ApproachService {
    // Fields:
    ApproachUIController approachGuiPrefab;
    BattlePrepUIController battlePrepGuiPrefab;
    PickTeamUIController pickTeamGuiPrefab;
    GymState gymState;
    GymApproachState gymApproachState;
    IArService arService;
    Factory approachGuiFactory;
    Factory battlePrepGuiFactory;
    Factory pickTeamGuiFactory;
    GuiController currentModeGui;
    ApproachUIController <ApproachGui>k__BackingField;

    // Methods:
    void .ctor(...);
    ApproachUIController get_ApproachGui(...);
    void set_ApproachGui(...);
    PokemonProto get_OwnedPokemon(...);
    ApproachUIController CreateApproachGui(...);
    void DismissApproachGui(...);
    void ResetApproachGui(...);
    void SetApproachMode(...);
    void StartBattle(...);
    void StartTraining(...);
    void DismissModeGui(...);
    void <SetApproachMode>m__4C(...);
    void <SetApproachMode>m__4D(...);
    void <StartBattle>m__4E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class ApproachUIController {
    // Fields:
    GymMinimapDot minimapDotPrefab;
    IPokemonInventoryGuiService pokemonInventoryGuiService;
    Generic prefabFactory;
    GymState gymState;
    IImageDownloadService imageDownloadService;
    ApproachService approachService;
    ILocationProvider locationProvider;
    IRpcHandler rpcHandler;
    IUserPromptsService userPrompts;
    IPoiInspectionService poiInspectionService;
    GymApproachState approachState;
    IInputEventService inputEventService;
    ISponsorDataService sponsorDataService;
    Text gymNameText;
    Text prestigeText;
    Text levelText;
    Image levelProgress;
    RawImage portalImage;
    cmod_reqd teamColor;
    GameObject deployButtonObject;
    Image sponsorImage;
    GymMinimap minimap;
    GameObject currentModeParent;
    GameObject outOfRangeBox;
    Color outOfRangeHeaderColor;
    Color inRangePrestigeCounterColor;
    Color outOfRangePrestigeCounterColor;
    Image headerBackground;
    Image prestigeCounterBackground;
    AudioClip deploySfx;
    Generic upsightDict;
    Generic <>f__am$cache1F;
    Generic <>f__am$cache20;
    Generic <>f__am$cache21;

    // Methods:
    void .ctor(...);
    GymMinimap get_Minimap(...);
    GameObject get_CurrentModeParent(...);
    void Init(...);
    void HandleDestroy(...);
    void OnGymDataRefresh(...);
    void Refresh(...);
    void OnBackButtonPressed(...);
    void ClickInspect(...);
    void ClickDeploy(...);
    void PokemonSelectedForDeploy(...);
    void PokemonDeployConfirmed(...);
    void ClientDeployCallback(...);
    void Update(...);
    void SetupSponsorUI(...);
    void <Init>m__4F(...);
    boolean <ClickDeploy>m__50(...);
    boolean <ClickDeploy>m__51(...);
    void <ClickDeploy>m__52(...);
    void <ClickDeploy>m__53(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymMinimapDot {
    // Fields:
    float emptySpriteSize = 8.000000;
    float fullSpriteSize = 8.000000;
    float leaderSpriteSize = 30.000000;
    Sprite emptySprite;
    Sprite fullSprite;
    Sprite leaderSprite;
    cmod_reqd teamColors;
    Color emptySlotColor;
    Color unselectedColor;
    Image image;
    Team team;

    // Methods:
    void .ctor(...);
    Color get_TeamColor(...);
    void SetSelected(...);
    void Init(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class Team {
    // Fields:
    int value__;
    Team Neutral = 0;
    Team Blue = 1;
    Team Red = 2;
    Team Yellow = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class IPokemonInventoryGuiService {
    // Methods:
    Generic SelectPokemonFromInventory(...);
    Generic ShowPokemonInventoryWithEggs(...);
    Generic ShowPokemonInventoryToApplyItem(...);
    void DismissPokemonInventory(...);
    void UpdateEggWithIncubator(...);
}

// Namespace: Niantic.Holoholo
class IImageDownloadService {
    // Methods:
    Generic GetImage(...);
}

// Namespace: Holoholo.Rpc
class IRpcHandler {
    // Methods:
    Generic Send(...);
    IReceipt RegisterSideChannel(...);
}

// Namespace: Niantic.Holoholo.UI
class IPoiInspectionService {
    // Methods:
    IReceipt InspectPoi(...);
    IReceipt InspectPoiFullscreen(...);
}

// Namespace: Niantic.Holoholo.GameInput
class IInputEventService {
    // Methods:
    void EnableInputEvents(...);
    IReceipt ListenForBackButton(...);
}

// Namespace: Niantic.Holoholo.Sponsors
class ISponsorDataService {
    // Methods:
    boolean TryGetSponsorData(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymMinimap {
    // Fields:
    int slotsPerTier = 5;
    Transform dividerPrefab;
    Color unselectedColor;
    IBehaviourService behaviourService;
    GameMasterData gameData;
    cmod_reqd dots;
    int emptySlots;
    int activeSlot;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Init(...);
    void SetActiveSlot(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class IBehaviourService {
    // Methods:
    cmod_opt GetBehaviour(...);
    cmod_opt GetInstance(...);
}

// Namespace: 
class GameMasterData {
    // Fields:
    cmod_reqd POKEMON_ANIM_NAME;
    int maxPokemonId;
    int maxPokemonTypeId;
    SpriteLookup spriteLookup;
    IGameMasterDataService gameMasterDataService;
    GymLevelSettingsProto gymSettings;
    Generic playerBadges;
    Generic pokemonList;
    Generic pokemonMoves;
    Generic pokemonTypeEffectiveness;
    Generic itemSettings;
    StateData <State>k__BackingField;
    PlayerLevelSettingsProto <LevelSettings>k__BackingField;
    GymBattleSettingsProto <GymBattleSettings>k__BackingField;
    EncounterSettingsProto <EncounterSettings>k__BackingField;
    IapSettingsProto <IapSettings>k__BackingField;
    PokemonUpgradeSettingsProto <PokemonUpgradeSettings>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    StateData get_State(...);
    void set_State(...);
    int get_MaxPokemonId(...);
    int get_MaxPokemonTypeId(...);
    PlayerLevelSettingsProto get_LevelSettings(...);
    void set_LevelSettings(...);
    int Get_PlayerExperienceForLevel(...);
    int Get_PlayerRankForLevel(...);
    GymLevelSettingsProto get_GymLevelSettings(...);
    int Get_GymExperienceForLevel(...);
    GymBattleSettingsProto get_GymBattleSettings(...);
    void set_GymBattleSettings(...);
    EncounterSettingsProto get_EncounterSettings(...);
    void set_EncounterSettings(...);
    IapSettingsProto get_IapSettings(...);
    void set_IapSettings(...);
    BadgeSettingsProto Get_PlayerBadge(...);
    BadgeSettingsProto Get_PlayerBadge(...);
    void AddPlayerBadge(...);
    PokemonSettingsProto Get_Pokemon(...);
    PokemonSettingsProto Get_Pokemon(...);
    float Get_PokemonAnimTime(...);
    Generic Get_PokemonEvolutionChain(...);
    PokemonUpgradeSettingsProto get_PokemonUpgradeSettings(...);
    void set_PokemonUpgradeSettings(...);
    float GetMaxCpMultAllowedForLevel(...);
    int GetUpgradesLeft(...);
    float GetMinCpMult(...);
    int GetPokemonLevelOfCpMultiplier(...);
    void AddPokemon(...);
    MoveSettingsProto Get_PokemonMove(...);
    MoveSettingsProto Get_PokemonMove(...);
    void AddPokemonMove(...);
    float Get_TypeEffectiveness(...);
    void AddPokemonTypeEffectiveness(...);
    ItemSettingsProto GetItemSettings(...);
    ItemSettingsProto GetItemSettings(...);
    Generic Get_ItemSettings_ByType(...);
    Generic Get_ItemSettingsKeys(...);
    void AddItemSettings(...);
    String Resource_ItemPrefab_Path(...);
    GameObject Resource_ItemPrefab(...);
    Sprite Resource_PokemonIcon(...);
    Sprite Resource_PokemonIcon(...);
    String StrippedSku(...);
    void Awake(...);
    void RequestGameMasterUpdate(...);
    void GameMasterDataLoaded(...);
    void GameMasterDataRequestFailed(...);
    String RemovePrefixedKey(...);
    int CalcMaxPokemonId(...);
    int CalcMaxPokemonTypeId(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SpriteLookup {
    // Fields:
    cmod_reqd pokemonSprites;
    cmod_reqd eggSprite;
    cmod_reqd teamSprites;

    // Methods:
    void .ctor(...);
    Sprite GetPokemonSprite(...);
    Sprite GetPokemonEggSprite(...);
    Sprite GetTeamLogoSprite(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class IGameMasterDataService {
    // Methods:
    GetGameMasterClientTemplatesOutProto get_GameMasterDataResponse(...);
    void RequestGameMasterData(...);
}

// Namespace: Holoholo.Rpc
class GetGameMasterClientTemplatesOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int ItemsFieldNumber = 2;
    int TimestampFieldNumber = 3;
    Generic _parser;
    Result result_;
    Generic _repeated_items_codec;
    Generic items_;
    ulong timestamp_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetGameMasterClientTemplatesOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_Items(...);
    ulong get_Timestamp(...);
    void set_Timestamp(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetGameMasterClientTemplatesOutProto <_parser>m__187(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetGameMasterClientTemplatesOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class GymLevelSettingsProto {
    // Fields:
    int RequiredExpFieldNumber = 1;
    int LeaderSlotsFieldNumber = 2;
    int TrainerSlotsFieldNumber = 3;
    int SearchRollBonusFieldNumber = 4;
    Generic _parser;
    Generic _repeated_requiredExp_codec;
    Generic requiredExp_;
    Generic _repeated_leaderSlots_codec;
    Generic leaderSlots_;
    Generic _repeated_trainerSlots_codec;
    Generic trainerSlots_;
    Generic _repeated_searchRollBonus_codec;
    Generic searchRollBonus_;
    Generic <>f__am$cache9;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GymLevelSettingsProto Clone(...);
    Generic get_RequiredExp(...);
    Generic get_LeaderSlots(...);
    Generic get_TrainerSlots(...);
    Generic get_SearchRollBonus(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GymLevelSettingsProto <_parser>m__17F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GymLevelSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class StateData {
    // Fields:
    int value__;
    StateData FAILED = 0;
    StateData UNINITIALIZED = 1;
    StateData LOADING = 2;
    StateData READY = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PlayerLevelSettingsProto {
    // Fields:
    int RankNumFieldNumber = 1;
    int RequiredExpFieldNumber = 2;
    int CpMultiplierFieldNumber = 3;
    int MaxEggPlayerLevelFieldNumber = 4;
    int MaxEncounterPlayerLevelFieldNumber = 5;
    Generic _parser;
    Generic _repeated_rankNum_codec;
    Generic rankNum_;
    Generic _repeated_requiredExp_codec;
    Generic requiredExp_;
    Generic _repeated_cpMultiplier_codec;
    Generic cpMultiplier_;
    int maxEggPlayerLevel_;
    int maxEncounterPlayerLevel_;
    Generic <>f__am$cache9;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerLevelSettingsProto Clone(...);
    Generic get_RankNum(...);
    Generic get_RequiredExp(...);
    Generic get_CpMultiplier(...);
    int get_MaxEggPlayerLevel(...);
    void set_MaxEggPlayerLevel(...);
    int get_MaxEncounterPlayerLevel(...);
    void set_MaxEncounterPlayerLevel(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerLevelSettingsProto <_parser>m__17E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerLevelSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GymBattleSettingsProto {
    // Fields:
    int EnergyPerSecFieldNumber = 1;
    int DodgeEnergyCostFieldNumber = 2;
    int RetargetSecondsFieldNumber = 3;
    int EnemyAttackIntervalFieldNumber = 4;
    int AttackServerIntervalFieldNumber = 5;
    int RoundDurationSecondsFieldNumber = 6;
    int BonusTimePerAllySecondsFieldNumber = 7;
    int MaximumAttackersPerBattleFieldNumber = 8;
    int SameTypeAttackBonusMultiplierFieldNumber = 9;
    int MaximumEnergyFieldNumber = 10;
    int EnergyDeltaPerHealthLostFieldNumber = 11;
    int DodgeDurationMsFieldNumber = 12;
    int MinimumPlayerLevelFieldNumber = 13;
    int SwapDurationMsFieldNumber = 14;
    Generic _parser;
    float energyPerSec_;
    float dodgeEnergyCost_;
    float retargetSeconds_;
    float enemyAttackInterval_;
    float attackServerInterval_;
    float roundDurationSeconds_;
    float bonusTimePerAllySeconds_;
    int maximumAttackersPerBattle_;
    float sameTypeAttackBonusMultiplier_;
    int maximumEnergy_;
    float energyDeltaPerHealthLost_;
    int dodgeDurationMs_;
    int minimumPlayerLevel_;
    int swapDurationMs_;
    Generic <>f__am$cacheF;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GymBattleSettingsProto Clone(...);
    float get_EnergyPerSec(...);
    void set_EnergyPerSec(...);
    float get_DodgeEnergyCost(...);
    void set_DodgeEnergyCost(...);
    float get_RetargetSeconds(...);
    void set_RetargetSeconds(...);
    float get_EnemyAttackInterval(...);
    void set_EnemyAttackInterval(...);
    float get_AttackServerInterval(...);
    void set_AttackServerInterval(...);
    float get_RoundDurationSeconds(...);
    void set_RoundDurationSeconds(...);
    float get_BonusTimePerAllySeconds(...);
    void set_BonusTimePerAllySeconds(...);
    int get_MaximumAttackersPerBattle(...);
    void set_MaximumAttackersPerBattle(...);
    float get_SameTypeAttackBonusMultiplier(...);
    void set_SameTypeAttackBonusMultiplier(...);
    int get_MaximumEnergy(...);
    void set_MaximumEnergy(...);
    float get_EnergyDeltaPerHealthLost(...);
    void set_EnergyDeltaPerHealthLost(...);
    int get_DodgeDurationMs(...);
    void set_DodgeDurationMs(...);
    int get_MinimumPlayerLevel(...);
    void set_MinimumPlayerLevel(...);
    int get_SwapDurationMs(...);
    void set_SwapDurationMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GymBattleSettingsProto <_parser>m__180(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GymBattleSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EncounterSettingsProto {
    // Fields:
    int SpinBonusThresholdFieldNumber = 1;
    int ExcellentThrowThresholdFieldNumber = 2;
    int GreatThrowThresholdFieldNumber = 3;
    int NiceThrowThresholdFieldNumber = 4;
    int MilestoneThresholdFieldNumber = 5;
    Generic _parser;
    float spinBonusThreshold_;
    float excellentThrowThreshold_;
    float greatThrowThreshold_;
    float niceThrowThreshold_;
    int milestoneThreshold_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EncounterSettingsProto Clone(...);
    float get_SpinBonusThreshold(...);
    void set_SpinBonusThreshold(...);
    float get_ExcellentThrowThreshold(...);
    void set_ExcellentThrowThreshold(...);
    float get_GreatThrowThreshold(...);
    void set_GreatThrowThreshold(...);
    float get_NiceThrowThreshold(...);
    void set_NiceThrowThreshold(...);
    int get_MilestoneThreshold(...);
    void set_MilestoneThreshold(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EncounterSettingsProto <_parser>m__181(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EncounterSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class IapSettingsProto {
    // Fields:
    int DailyBonusCoinsFieldNumber = 1;
    int DailyDefenderBonusPerPokemonFieldNumber = 2;
    int DailyDefenderBonusMaxDefendersFieldNumber = 3;
    int DailyDefenderBonusCurrencyFieldNumber = 4;
    int MinTimeBetweenClaimsMsFieldNumber = 5;
    int DailyBonusEnabledFieldNumber = 6;
    int DailyDefenderBonusEnabledFieldNumber = 7;
    Generic _parser;
    int dailyBonusCoins_;
    Generic _repeated_dailyDefenderBonusPerPokemon_codec;
    Generic dailyDefenderBonusPerPokemon_;
    int dailyDefenderBonusMaxDefenders_;
    Generic _repeated_dailyDefenderBonusCurrency_codec;
    Generic dailyDefenderBonusCurrency_;
    long minTimeBetweenClaimsMs_;
    boolean dailyBonusEnabled_;
    boolean dailyDefenderBonusEnabled_;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    IapSettingsProto Clone(...);
    int get_DailyBonusCoins(...);
    void set_DailyBonusCoins(...);
    Generic get_DailyDefenderBonusPerPokemon(...);
    int get_DailyDefenderBonusMaxDefenders(...);
    void set_DailyDefenderBonusMaxDefenders(...);
    Generic get_DailyDefenderBonusCurrency(...);
    long get_MinTimeBetweenClaimsMs(...);
    void set_MinTimeBetweenClaimsMs(...);
    boolean get_DailyBonusEnabled(...);
    void set_DailyBonusEnabled(...);
    boolean get_DailyDefenderBonusEnabled(...);
    void set_DailyDefenderBonusEnabled(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    IapSettingsProto <_parser>m__182(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ IapSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonUpgradeSettingsProto {
    // Fields:
    int UpgradesPerLevelFieldNumber = 1;
    int AllowedLevelsAbovePlayerFieldNumber = 2;
    int CandyCostFieldNumber = 3;
    int StardustCostFieldNumber = 4;
    Generic _parser;
    int upgradesPerLevel_;
    int allowedLevelsAbovePlayer_;
    Generic _repeated_candyCost_codec;
    Generic candyCost_;
    Generic _repeated_stardustCost_codec;
    Generic stardustCost_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonUpgradeSettingsProto Clone(...);
    int get_UpgradesPerLevel(...);
    void set_UpgradesPerLevel(...);
    int get_AllowedLevelsAbovePlayer(...);
    void set_AllowedLevelsAbovePlayer(...);
    Generic get_CandyCost(...);
    Generic get_StardustCost(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonUpgradeSettingsProto <_parser>m__183(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonUpgradeSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class BadgeSettingsProto {
    // Fields:
    int BadgeTypeFieldNumber = 1;
    int BadgeRanksFieldNumber = 2;
    int TargetsFieldNumber = 3;
    Generic _parser;
    HoloBadgeType badgeType_;
    int badgeRanks_;
    Generic _repeated_targets_codec;
    Generic targets_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BadgeSettingsProto Clone(...);
    HoloBadgeType get_BadgeType(...);
    void set_BadgeType(...);
    int get_BadgeRanks(...);
    void set_BadgeRanks(...);
    Generic get_Targets(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BadgeSettingsProto <_parser>m__178(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BadgeSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloBadgeType {
    // Fields:
    int value__;
    HoloBadgeType BADGE_UNSET = 0;
    HoloBadgeType BADGE_TRAVEL_KM = 1;
    HoloBadgeType BADGE_POKEDEX_ENTRIES = 2;
    HoloBadgeType BADGE_CAPTURE_TOTAL = 3;
    HoloBadgeType BADGE_DEFEATED_FORT = 4;
    HoloBadgeType BADGE_EVOLVED_TOTAL = 5;
    HoloBadgeType BADGE_HATCHED_TOTAL = 6;
    HoloBadgeType BADGE_ENCOUNTERED_TOTAL = 7;
    HoloBadgeType BADGE_POKESTOPS_VISITED = 8;
    HoloBadgeType BADGE_UNIQUE_POKESTOPS = 9;
    HoloBadgeType BADGE_POKEBALL_THROWN = 10;
    HoloBadgeType BADGE_BIG_MAGIKARP = 11;
    HoloBadgeType BADGE_DEPLOYED_TOTAL = 12;
    HoloBadgeType BADGE_BATTLE_ATTACK_WON = 13;
    HoloBadgeType BADGE_BATTLE_TRAINING_WON = 14;
    HoloBadgeType BADGE_BATTLE_DEFEND_WON = 15;
    HoloBadgeType BADGE_PRESTIGE_RAISED = 16;
    HoloBadgeType BADGE_PRESTIGE_DROPPED = 17;
    HoloBadgeType BADGE_TYPE_NORMAL = 18;
    HoloBadgeType BADGE_TYPE_FIGHTING = 19;
    HoloBadgeType BADGE_TYPE_FLYING = 20;
    HoloBadgeType BADGE_TYPE_POISON = 21;
    HoloBadgeType BADGE_TYPE_GROUND = 22;
    HoloBadgeType BADGE_TYPE_ROCK = 23;
    HoloBadgeType BADGE_TYPE_BUG = 24;
    HoloBadgeType BADGE_TYPE_GHOST = 25;
    HoloBadgeType BADGE_TYPE_STEEL = 26;
    HoloBadgeType BADGE_TYPE_FIRE = 27;
    HoloBadgeType BADGE_TYPE_WATER = 28;
    HoloBadgeType BADGE_TYPE_GRASS = 29;
    HoloBadgeType BADGE_TYPE_ELECTRIC = 30;
    HoloBadgeType BADGE_TYPE_PSYCHIC = 31;
    HoloBadgeType BADGE_TYPE_ICE = 32;
    HoloBadgeType BADGE_TYPE_DRAGON = 33;
    HoloBadgeType BADGE_TYPE_DARK = 34;
    HoloBadgeType BADGE_TYPE_FAIRY = 35;
    HoloBadgeType BADGE_SMALL_RATTATA = 36;
    HoloBadgeType BADGE_PIKACHU = 37;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokemonSettingsProto {
    // Fields:
    int UniqueIdFieldNumber = 1;
    int ModelScaleFieldNumber = 3;
    int Type1FieldNumber = 4;
    int Type2FieldNumber = 5;
    int CameraFieldNumber = 6;
    int EncounterFieldNumber = 7;
    int StatsFieldNumber = 8;
    int QuickMovesFieldNumber = 9;
    int CinematicMovesFieldNumber = 10;
    int AnimTimeFieldNumber = 11;
    int EvolutionFieldNumber = 12;
    int EvolutionPipsFieldNumber = 13;
    int PokemonClassFieldNumber = 14;
    int PokedexHeightMFieldNumber = 15;
    int PokedexWeightKgFieldNumber = 16;
    int ParentIdFieldNumber = 17;
    int HeightStdDevFieldNumber = 18;
    int WeightStdDevFieldNumber = 19;
    int KmDistanceToHatchFieldNumber = 20;
    int FamilyIdFieldNumber = 21;
    int CandyToEvolveFieldNumber = 22;
    Generic _parser;
    HoloPokemonId uniqueId_;
    float modelScale_;
    HoloPokemonType type1_;
    HoloPokemonType type2_;
    PokemonCameraAttributesProto camera_;
    PokemonEncounterAttributesProto encounter_;
    PokemonStatsAttributesProto stats_;
    Generic _repeated_quickMoves_codec;
    Generic quickMoves_;
    Generic _repeated_cinematicMoves_codec;
    Generic cinematicMoves_;
    Generic _repeated_animTime_codec;
    Generic animTime_;
    Generic _repeated_evolution_codec;
    Generic evolution_;
    int evolutionPips_;
    HoloPokemonClass pokemonClass_;
    float pokedexHeightM_;
    float pokedexWeightKg_;
    HoloPokemonId parentId_;
    float heightStdDev_;
    float weightStdDev_;
    float kmDistanceToHatch_;
    HoloPokemonFamilyId familyId_;
    int candyToEvolve_;
    Generic <>f__am$cache1A;
    Generic <>f__am$cache1B;
    Generic <>f__am$cache1C;
    Generic <>f__am$cache1D;
    Generic <>f__am$cache1E;
    Generic <>f__am$cache1F;
    Generic <>f__am$cache20;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonSettingsProto Clone(...);
    HoloPokemonId get_UniqueId(...);
    void set_UniqueId(...);
    float get_ModelScale(...);
    void set_ModelScale(...);
    HoloPokemonType get_Type1(...);
    void set_Type1(...);
    HoloPokemonType get_Type2(...);
    void set_Type2(...);
    PokemonCameraAttributesProto get_Camera(...);
    void set_Camera(...);
    PokemonEncounterAttributesProto get_Encounter(...);
    void set_Encounter(...);
    PokemonStatsAttributesProto get_Stats(...);
    void set_Stats(...);
    Generic get_QuickMoves(...);
    Generic get_CinematicMoves(...);
    Generic get_AnimTime(...);
    Generic get_Evolution(...);
    int get_EvolutionPips(...);
    void set_EvolutionPips(...);
    HoloPokemonClass get_PokemonClass(...);
    void set_PokemonClass(...);
    float get_PokedexHeightM(...);
    void set_PokedexHeightM(...);
    float get_PokedexWeightKg(...);
    void set_PokedexWeightKg(...);
    HoloPokemonId get_ParentId(...);
    void set_ParentId(...);
    float get_HeightStdDev(...);
    void set_HeightStdDev(...);
    float get_WeightStdDev(...);
    void set_WeightStdDev(...);
    float get_KmDistanceToHatch(...);
    void set_KmDistanceToHatch(...);
    HoloPokemonFamilyId get_FamilyId(...);
    void set_FamilyId(...);
    int get_CandyToEvolve(...);
    void set_CandyToEvolve(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonSettingsProto <_parser>m__15C(...);
    int <_repeated_quickMoves_codec>m__15D(...);
    HoloPokemonMove <_repeated_quickMoves_codec>m__15E(...);
    int <_repeated_cinematicMoves_codec>m__15F(...);
    HoloPokemonMove <_repeated_cinematicMoves_codec>m__160(...);
    int <_repeated_evolution_codec>m__161(...);
    HoloPokemonId <_repeated_evolution_codec>m__162(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonId {
    // Fields:
    int value__;
    HoloPokemonId POKEMON_UNSET = 0;
    HoloPokemonId V0001_POKEMON_BULBASAUR = 1;
    HoloPokemonId V0002_POKEMON_IVYSAUR = 2;
    HoloPokemonId V0003_POKEMON_VENUSAUR = 3;
    HoloPokemonId V0004_POKEMON_CHARMANDER = 4;
    HoloPokemonId V0005_POKEMON_CHARMELEON = 5;
    HoloPokemonId V0006_POKEMON_CHARIZARD = 6;
    HoloPokemonId V0007_POKEMON_SQUIRTLE = 7;
    HoloPokemonId V0008_POKEMON_WARTORTLE = 8;
    HoloPokemonId V0009_POKEMON_BLASTOISE = 9;
    HoloPokemonId V0010_POKEMON_CATERPIE = 10;
    HoloPokemonId V0011_POKEMON_METAPOD = 11;
    HoloPokemonId V0012_POKEMON_BUTTERFREE = 12;
    HoloPokemonId V0013_POKEMON_WEEDLE = 13;
    HoloPokemonId V0014_POKEMON_KAKUNA = 14;
    HoloPokemonId V0015_POKEMON_BEEDRILL = 15;
    HoloPokemonId V0016_POKEMON_PIDGEY = 16;
    HoloPokemonId V0017_POKEMON_PIDGEOTTO = 17;
    HoloPokemonId V0018_POKEMON_PIDGEOT = 18;
    HoloPokemonId V0019_POKEMON_RATTATA = 19;
    HoloPokemonId V0020_POKEMON_RATICATE = 20;
    HoloPokemonId V0021_POKEMON_SPEAROW = 21;
    HoloPokemonId V0022_POKEMON_FEAROW = 22;
    HoloPokemonId V0023_POKEMON_EKANS = 23;
    HoloPokemonId V0024_POKEMON_ARBOK = 24;
    HoloPokemonId V0025_POKEMON_PIKACHU = 25;
    HoloPokemonId V0026_POKEMON_RAICHU = 26;
    HoloPokemonId V0027_POKEMON_SANDSHREW = 27;
    HoloPokemonId V0028_POKEMON_SANDSLASH = 28;
    HoloPokemonId V0029_POKEMON_NIDORAN = 29;
    HoloPokemonId V0030_POKEMON_NIDORINA = 30;
    HoloPokemonId V0031_POKEMON_NIDOQUEEN = 31;
    HoloPokemonId V0032_POKEMON_NIDORAN = 32;
    HoloPokemonId V0033_POKEMON_NIDORINO = 33;
    HoloPokemonId V0034_POKEMON_NIDOKING = 34;
    HoloPokemonId V0035_POKEMON_CLEFAIRY = 35;
    HoloPokemonId V0036_POKEMON_CLEFABLE = 36;
    HoloPokemonId V0037_POKEMON_VULPIX = 37;
    HoloPokemonId V0038_POKEMON_NINETALES = 38;
    HoloPokemonId V0039_POKEMON_JIGGLYPUFF = 39;
    HoloPokemonId V0040_POKEMON_WIGGLYTUFF = 40;
    HoloPokemonId V0041_POKEMON_ZUBAT = 41;
    HoloPokemonId V0042_POKEMON_GOLBAT = 42;
    HoloPokemonId V0043_POKEMON_ODDISH = 43;
    HoloPokemonId V0044_POKEMON_GLOOM = 44;
    HoloPokemonId V0045_POKEMON_VILEPLUME = 45;
    HoloPokemonId V0046_POKEMON_PARAS = 46;
    HoloPokemonId V0047_POKEMON_PARASECT = 47;
    HoloPokemonId V0048_POKEMON_VENONAT = 48;
    HoloPokemonId V0049_POKEMON_VENOMOTH = 49;
    HoloPokemonId V0050_POKEMON_DIGLETT = 50;
    HoloPokemonId V0051_POKEMON_DUGTRIO = 51;
    HoloPokemonId V0052_POKEMON_MEOWTH = 52;
    HoloPokemonId V0053_POKEMON_PERSIAN = 53;
    HoloPokemonId V0054_POKEMON_PSYDUCK = 54;
    HoloPokemonId V0055_POKEMON_GOLDUCK = 55;
    HoloPokemonId V0056_POKEMON_MANKEY = 56;
    HoloPokemonId V0057_POKEMON_PRIMEAPE = 57;
    HoloPokemonId V0058_POKEMON_GROWLITHE = 58;
    HoloPokemonId V0059_POKEMON_ARCANINE = 59;
    HoloPokemonId V0060_POKEMON_POLIWAG = 60;
    HoloPokemonId V0061_POKEMON_POLIWHIRL = 61;
    HoloPokemonId V0062_POKEMON_POLIWRATH = 62;
    HoloPokemonId V0063_POKEMON_ABRA = 63;
    HoloPokemonId V0064_POKEMON_KADABRA = 64;
    HoloPokemonId V0065_POKEMON_ALAKAZAM = 65;
    HoloPokemonId V0066_POKEMON_MACHOP = 66;
    HoloPokemonId V0067_POKEMON_MACHOKE = 67;
    HoloPokemonId V0068_POKEMON_MACHAMP = 68;
    HoloPokemonId V0069_POKEMON_BELLSPROUT = 69;
    HoloPokemonId V0070_POKEMON_WEEPINBELL = 70;
    HoloPokemonId V0071_POKEMON_VICTREEBEL = 71;
    HoloPokemonId V0072_POKEMON_TENTACOOL = 72;
    HoloPokemonId V0073_POKEMON_TENTACRUEL = 73;
    HoloPokemonId V0074_POKEMON_GEODUDE = 74;
    HoloPokemonId V0075_POKEMON_GRAVELER = 75;
    HoloPokemonId V0076_POKEMON_GOLEM = 76;
    HoloPokemonId V0077_POKEMON_PONYTA = 77;
    HoloPokemonId V0078_POKEMON_RAPIDASH = 78;
    HoloPokemonId V0079_POKEMON_SLOWPOKE = 79;
    HoloPokemonId V0080_POKEMON_SLOWBRO = 80;
    HoloPokemonId V0081_POKEMON_MAGNEMITE = 81;
    HoloPokemonId V0082_POKEMON_MAGNETON = 82;
    HoloPokemonId V0083_POKEMON_FARFETCHD = 83;
    HoloPokemonId V0084_POKEMON_DODUO = 84;
    HoloPokemonId V0085_POKEMON_DODRIO = 85;
    HoloPokemonId V0086_POKEMON_SEEL = 86;
    HoloPokemonId V0087_POKEMON_DEWGONG = 87;
    HoloPokemonId V0088_POKEMON_GRIMER = 88;
    HoloPokemonId V0089_POKEMON_MUK = 89;
    HoloPokemonId V0090_POKEMON_SHELLDER = 90;
    HoloPokemonId V0091_POKEMON_CLOYSTER = 91;
    HoloPokemonId V0092_POKEMON_GASTLY = 92;
    HoloPokemonId V0093_POKEMON_HAUNTER = 93;
    HoloPokemonId V0094_POKEMON_GENGAR = 94;
    HoloPokemonId V0095_POKEMON_ONIX = 95;
    HoloPokemonId V0096_POKEMON_DROWZEE = 96;
    HoloPokemonId V0097_POKEMON_HYPNO = 97;
    HoloPokemonId V0098_POKEMON_KRABBY = 98;
    HoloPokemonId V0099_POKEMON_KINGLER = 99;
    HoloPokemonId V0100_POKEMON_VOLTORB = 100;
    HoloPokemonId V0101_POKEMON_ELECTRODE = 101;
    HoloPokemonId V0102_POKEMON_EXEGGCUTE = 102;
    HoloPokemonId V0103_POKEMON_EXEGGUTOR = 103;
    HoloPokemonId V0104_POKEMON_CUBONE = 104;
    HoloPokemonId V0105_POKEMON_MAROWAK = 105;
    HoloPokemonId V0106_POKEMON_HITMONLEE = 106;
    HoloPokemonId V0107_POKEMON_HITMONCHAN = 107;
    HoloPokemonId V0108_POKEMON_LICKITUNG = 108;
    HoloPokemonId V0109_POKEMON_KOFFING = 109;
    HoloPokemonId V0110_POKEMON_WEEZING = 110;
    HoloPokemonId V0111_POKEMON_RHYHORN = 111;
    HoloPokemonId V0112_POKEMON_RHYDON = 112;
    HoloPokemonId V0113_POKEMON_CHANSEY = 113;
    HoloPokemonId V0114_POKEMON_TANGELA = 114;
    HoloPokemonId V0115_POKEMON_KANGASKHAN = 115;
    HoloPokemonId V0116_POKEMON_HORSEA = 116;
    HoloPokemonId V0117_POKEMON_SEADRA = 117;
    HoloPokemonId V0118_POKEMON_GOLDEEN = 118;
    HoloPokemonId V0119_POKEMON_SEAKING = 119;
    HoloPokemonId V0120_POKEMON_STARYU = 120;
    HoloPokemonId V0121_POKEMON_STARMIE = 121;
    HoloPokemonId V0122_POKEMON_MR_MIME = 122;
    HoloPokemonId V0123_POKEMON_SCYTHER = 123;
    HoloPokemonId V0124_POKEMON_JYNX = 124;
    HoloPokemonId V0125_POKEMON_ELECTABUZZ = 125;
    HoloPokemonId V0126_POKEMON_MAGMAR = 126;
    HoloPokemonId V0127_POKEMON_PINSIR = 127;
    HoloPokemonId V0128_POKEMON_TAUROS = 128;
    HoloPokemonId V0129_POKEMON_MAGIKARP = 129;
    HoloPokemonId V0130_POKEMON_GYARADOS = 130;
    HoloPokemonId V0131_POKEMON_LAPRAS = 131;
    HoloPokemonId V0132_POKEMON_DITTO = 132;
    HoloPokemonId V0133_POKEMON_EEVEE = 133;
    HoloPokemonId V0134_POKEMON_VAPOREON = 134;
    HoloPokemonId V0135_POKEMON_JOLTEON = 135;
    HoloPokemonId V0136_POKEMON_FLAREON = 136;
    HoloPokemonId V0137_POKEMON_PORYGON = 137;
    HoloPokemonId V0138_POKEMON_OMANYTE = 138;
    HoloPokemonId V0139_POKEMON_OMASTAR = 139;
    HoloPokemonId V0140_POKEMON_KABUTO = 140;
    HoloPokemonId V0141_POKEMON_KABUTOPS = 141;
    HoloPokemonId V0142_POKEMON_AERODACTYL = 142;
    HoloPokemonId V0143_POKEMON_SNORLAX = 143;
    HoloPokemonId V0144_POKEMON_ARTICUNO = 144;
    HoloPokemonId V0145_POKEMON_ZAPDOS = 145;
    HoloPokemonId V0146_POKEMON_MOLTRES = 146;
    HoloPokemonId V0147_POKEMON_DRATINI = 147;
    HoloPokemonId V0148_POKEMON_DRAGONAIR = 148;
    HoloPokemonId V0149_POKEMON_DRAGONITE = 149;
    HoloPokemonId V0150_POKEMON_MEWTWO = 150;
    HoloPokemonId V0151_POKEMON_MEW = 151;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonType {
    // Fields:
    int value__;
    HoloPokemonType POKEMON_TYPE_NONE = 0;
    HoloPokemonType POKEMON_TYPE_NORMAL = 1;
    HoloPokemonType POKEMON_TYPE_FIGHTING = 2;
    HoloPokemonType POKEMON_TYPE_FLYING = 3;
    HoloPokemonType POKEMON_TYPE_POISON = 4;
    HoloPokemonType POKEMON_TYPE_GROUND = 5;
    HoloPokemonType POKEMON_TYPE_ROCK = 6;
    HoloPokemonType POKEMON_TYPE_BUG = 7;
    HoloPokemonType POKEMON_TYPE_GHOST = 8;
    HoloPokemonType POKEMON_TYPE_STEEL = 9;
    HoloPokemonType POKEMON_TYPE_FIRE = 10;
    HoloPokemonType POKEMON_TYPE_WATER = 11;
    HoloPokemonType POKEMON_TYPE_GRASS = 12;
    HoloPokemonType POKEMON_TYPE_ELECTRIC = 13;
    HoloPokemonType POKEMON_TYPE_PSYCHIC = 14;
    HoloPokemonType POKEMON_TYPE_ICE = 15;
    HoloPokemonType POKEMON_TYPE_DRAGON = 16;
    HoloPokemonType POKEMON_TYPE_DARK = 17;
    HoloPokemonType POKEMON_TYPE_FAIRY = 18;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokemonCameraAttributesProto {
    // Fields:
    int DiskRadiusMFieldNumber = 1;
    int CylRadiusMFieldNumber = 2;
    int CylHeightMFieldNumber = 3;
    int CylGroundMFieldNumber = 4;
    int ShoulderModeScaleFieldNumber = 5;
    Generic _parser;
    float diskRadiusM_;
    float cylRadiusM_;
    float cylHeightM_;
    float cylGroundM_;
    float shoulderModeScale_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonCameraAttributesProto Clone(...);
    float get_DiskRadiusM(...);
    void set_DiskRadiusM(...);
    float get_CylRadiusM(...);
    void set_CylRadiusM(...);
    float get_CylHeightM(...);
    void set_CylHeightM(...);
    float get_CylGroundM(...);
    void set_CylGroundM(...);
    float get_ShoulderModeScale(...);
    void set_ShoulderModeScale(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonCameraAttributesProto <_parser>m__159(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonCameraAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonEncounterAttributesProto {
    // Fields:
    int BaseCaptureRateFieldNumber = 1;
    int BaseFleeRateFieldNumber = 2;
    int CollisionRadiusMFieldNumber = 3;
    int CollisionHeightMFieldNumber = 4;
    int CollisionHeadRadiusMFieldNumber = 5;
    int MovementTypeFieldNumber = 6;
    int MovementTimerSFieldNumber = 7;
    int JumpTimeSFieldNumber = 8;
    int AttackTimerSFieldNumber = 9;
    Generic _parser;
    float baseCaptureRate_;
    float baseFleeRate_;
    float collisionRadiusM_;
    float collisionHeightM_;
    float collisionHeadRadiusM_;
    HoloPokemonMovementType movementType_;
    float movementTimerS_;
    float jumpTimeS_;
    float attackTimerS_;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonEncounterAttributesProto Clone(...);
    float get_BaseCaptureRate(...);
    void set_BaseCaptureRate(...);
    float get_BaseFleeRate(...);
    void set_BaseFleeRate(...);
    float get_CollisionRadiusM(...);
    void set_CollisionRadiusM(...);
    float get_CollisionHeightM(...);
    void set_CollisionHeightM(...);
    float get_CollisionHeadRadiusM(...);
    void set_CollisionHeadRadiusM(...);
    HoloPokemonMovementType get_MovementType(...);
    void set_MovementType(...);
    float get_MovementTimerS(...);
    void set_MovementTimerS(...);
    float get_JumpTimeS(...);
    void set_JumpTimeS(...);
    float get_AttackTimerS(...);
    void set_AttackTimerS(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonEncounterAttributesProto <_parser>m__15A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonEncounterAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonMovementType {
    // Fields:
    int value__;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_STATIC = 0;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_JUMP = 1;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_VERTICAL = 2;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_PSYCHIC = 3;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_ELECTRIC = 4;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_FLYING = 5;
    HoloPokemonMovementType POKEMON_ENC_MOVEMENT_HOVERING = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokemonStatsAttributesProto {
    // Fields:
    int BaseStaminaFieldNumber = 1;
    int BaseAttackFieldNumber = 2;
    int BaseDefenseFieldNumber = 3;
    int DodgeEnergyDeltaFieldNumber = 8;
    Generic _parser;
    int baseStamina_;
    int baseAttack_;
    int baseDefense_;
    int dodgeEnergyDelta_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonStatsAttributesProto Clone(...);
    int get_BaseStamina(...);
    void set_BaseStamina(...);
    int get_BaseAttack(...);
    void set_BaseAttack(...);
    int get_BaseDefense(...);
    void set_BaseDefense(...);
    int get_DodgeEnergyDelta(...);
    void set_DodgeEnergyDelta(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonStatsAttributesProto <_parser>m__15B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonStatsAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonClass {
    // Fields:
    int value__;
    HoloPokemonClass POKEMON_CLASS_NORMAL = 0;
    HoloPokemonClass POKEMON_CLASS_LEGENDARY = 1;
    HoloPokemonClass POKEMON_CLASS_MYTHIC = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonFamilyId {
    // Fields:
    int value__;
    HoloPokemonFamilyId FAMILY_UNSET = 0;
    HoloPokemonFamilyId V0001_FAMILY_BULBASAUR = 1;
    HoloPokemonFamilyId V0004_FAMILY_CHARMANDER = 4;
    HoloPokemonFamilyId V0007_FAMILY_SQUIRTLE = 7;
    HoloPokemonFamilyId V0010_FAMILY_CATERPIE = 10;
    HoloPokemonFamilyId V0013_FAMILY_WEEDLE = 13;
    HoloPokemonFamilyId V0016_FAMILY_PIDGEY = 16;
    HoloPokemonFamilyId V0019_FAMILY_RATTATA = 19;
    HoloPokemonFamilyId V0021_FAMILY_SPEAROW = 21;
    HoloPokemonFamilyId V0023_FAMILY_EKANS = 23;
    HoloPokemonFamilyId V0025_FAMILY_PIKACHU = 25;
    HoloPokemonFamilyId V0027_FAMILY_SANDSHREW = 27;
    HoloPokemonFamilyId V0029_FAMILY_NIDORAN = 29;
    HoloPokemonFamilyId V0032_FAMILY_NIDORAN = 32;
    HoloPokemonFamilyId V0035_FAMILY_CLEFAIRY = 35;
    HoloPokemonFamilyId V0037_FAMILY_VULPIX = 37;
    HoloPokemonFamilyId V0039_FAMILY_JIGGLYPUFF = 39;
    HoloPokemonFamilyId V0041_FAMILY_ZUBAT = 41;
    HoloPokemonFamilyId V0043_FAMILY_ODDISH = 43;
    HoloPokemonFamilyId V0046_FAMILY_PARAS = 46;
    HoloPokemonFamilyId V0048_FAMILY_VENONAT = 48;
    HoloPokemonFamilyId V0050_FAMILY_DIGLETT = 50;
    HoloPokemonFamilyId V0052_FAMILY_MEOWTH = 52;
    HoloPokemonFamilyId V0054_FAMILY_PSYDUCK = 54;
    HoloPokemonFamilyId V0056_FAMILY_MANKEY = 56;
    HoloPokemonFamilyId V0058_FAMILY_GROWLITHE = 58;
    HoloPokemonFamilyId V0060_FAMILY_POLIWAG = 60;
    HoloPokemonFamilyId V0063_FAMILY_ABRA = 63;
    HoloPokemonFamilyId V0066_FAMILY_MACHOP = 66;
    HoloPokemonFamilyId V0069_FAMILY_BELLSPROUT = 69;
    HoloPokemonFamilyId V0072_FAMILY_TENTACOOL = 72;
    HoloPokemonFamilyId V0074_FAMILY_GEODUDE = 74;
    HoloPokemonFamilyId V0077_FAMILY_PONYTA = 77;
    HoloPokemonFamilyId V0079_FAMILY_SLOWPOKE = 79;
    HoloPokemonFamilyId V0081_FAMILY_MAGNEMITE = 81;
    HoloPokemonFamilyId V0083_FAMILY_FARFETCHD = 83;
    HoloPokemonFamilyId V0084_FAMILY_DODUO = 84;
    HoloPokemonFamilyId V0086_FAMILY_SEEL = 86;
    HoloPokemonFamilyId V0088_FAMILY_GRIMER = 88;
    HoloPokemonFamilyId V0090_FAMILY_SHELLDER = 90;
    HoloPokemonFamilyId V0092_FAMILY_GASTLY = 92;
    HoloPokemonFamilyId V0095_FAMILY_ONIX = 95;
    HoloPokemonFamilyId V0096_FAMILY_DROWZEE = 96;
    HoloPokemonFamilyId V0098_FAMILY_KRABBY = 98;
    HoloPokemonFamilyId V0100_FAMILY_VOLTORB = 100;
    HoloPokemonFamilyId V0102_FAMILY_EXEGGCUTE = 102;
    HoloPokemonFamilyId V0104_FAMILY_CUBONE = 104;
    HoloPokemonFamilyId V0106_FAMILY_HITMONLEE = 106;
    HoloPokemonFamilyId V0107_FAMILY_HITMONCHAN = 107;
    HoloPokemonFamilyId V0108_FAMILY_LICKITUNG = 108;
    HoloPokemonFamilyId V0109_FAMILY_KOFFING = 109;
    HoloPokemonFamilyId V0111_FAMILY_RHYHORN = 111;
    HoloPokemonFamilyId V0113_FAMILY_CHANSEY = 113;
    HoloPokemonFamilyId V0114_FAMILY_TANGELA = 114;
    HoloPokemonFamilyId V0115_FAMILY_KANGASKHAN = 115;
    HoloPokemonFamilyId V0116_FAMILY_HORSEA = 116;
    HoloPokemonFamilyId V0118_FAMILY_GOLDEEN = 118;
    HoloPokemonFamilyId V0120_FAMILY_STARYU = 120;
    HoloPokemonFamilyId V0122_FAMILY_MR_MIME = 122;
    HoloPokemonFamilyId V0123_FAMILY_SCYTHER = 123;
    HoloPokemonFamilyId V0124_FAMILY_JYNX = 124;
    HoloPokemonFamilyId V0125_FAMILY_ELECTABUZZ = 125;
    HoloPokemonFamilyId V0126_FAMILY_MAGMAR = 126;
    HoloPokemonFamilyId V0127_FAMILY_PINSIR = 127;
    HoloPokemonFamilyId V0128_FAMILY_TAUROS = 128;
    HoloPokemonFamilyId V0129_FAMILY_MAGIKARP = 129;
    HoloPokemonFamilyId V0131_FAMILY_LAPRAS = 131;
    HoloPokemonFamilyId V0132_FAMILY_DITTO = 132;
    HoloPokemonFamilyId V0133_FAMILY_EEVEE = 133;
    HoloPokemonFamilyId V0137_FAMILY_PORYGON = 137;
    HoloPokemonFamilyId V0138_FAMILY_OMANYTE = 138;
    HoloPokemonFamilyId V0140_FAMILY_KABUTO = 140;
    HoloPokemonFamilyId V0142_FAMILY_AERODACTYL = 142;
    HoloPokemonFamilyId V0143_FAMILY_SNORLAX = 143;
    HoloPokemonFamilyId V0144_FAMILY_ARTICUNO = 144;
    HoloPokemonFamilyId V0145_FAMILY_ZAPDOS = 145;
    HoloPokemonFamilyId V0146_FAMILY_MOLTRES = 146;
    HoloPokemonFamilyId V0147_FAMILY_DRATINI = 147;
    HoloPokemonFamilyId V0150_FAMILY_MEWTWO = 150;
    HoloPokemonFamilyId V0151_FAMILY_MEW = 151;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonMove {
    // Fields:
    int value__;
    HoloPokemonMove MOVE_UNSET = 0;
    HoloPokemonMove V0001_MOVE_THUNDER_SHOCK = 1;
    HoloPokemonMove V0002_MOVE_QUICK_ATTACK = 2;
    HoloPokemonMove V0003_MOVE_SCRATCH = 3;
    HoloPokemonMove V0004_MOVE_EMBER = 4;
    HoloPokemonMove V0005_MOVE_VINE_WHIP = 5;
    HoloPokemonMove V0006_MOVE_TACKLE = 6;
    HoloPokemonMove V0007_MOVE_RAZOR_LEAF = 7;
    HoloPokemonMove V0008_MOVE_TAKE_DOWN = 8;
    HoloPokemonMove V0009_MOVE_WATER_GUN = 9;
    HoloPokemonMove V0010_MOVE_BITE = 10;
    HoloPokemonMove V0011_MOVE_POUND = 11;
    HoloPokemonMove V0012_MOVE_DOUBLE_SLAP = 12;
    HoloPokemonMove V0013_MOVE_WRAP = 13;
    HoloPokemonMove V0014_MOVE_HYPER_BEAM = 14;
    HoloPokemonMove V0015_MOVE_LICK = 15;
    HoloPokemonMove V0016_MOVE_DARK_PULSE = 16;
    HoloPokemonMove V0017_MOVE_SMOG = 17;
    HoloPokemonMove V0018_MOVE_SLUDGE = 18;
    HoloPokemonMove V0019_MOVE_METAL_CLAW = 19;
    HoloPokemonMove V0020_MOVE_VICE_GRIP = 20;
    HoloPokemonMove V0021_MOVE_FLAME_WHEEL = 21;
    HoloPokemonMove V0022_MOVE_MEGAHORN = 22;
    HoloPokemonMove V0023_MOVE_WING_ATTACK = 23;
    HoloPokemonMove V0024_MOVE_FLAMETHROWER = 24;
    HoloPokemonMove V0025_MOVE_SUCKER_PUNCH = 25;
    HoloPokemonMove V0026_MOVE_DIG = 26;
    HoloPokemonMove V0027_MOVE_LOW_KICK = 27;
    HoloPokemonMove V0028_MOVE_CROSS_CHOP = 28;
    HoloPokemonMove V0029_MOVE_PSYCHO_CUT = 29;
    HoloPokemonMove V0030_MOVE_PSYBEAM = 30;
    HoloPokemonMove V0031_MOVE_EARTHQUAKE = 31;
    HoloPokemonMove V0032_MOVE_STONE_EDGE = 32;
    HoloPokemonMove V0033_MOVE_ICE_PUNCH = 33;
    HoloPokemonMove V0034_MOVE_HEART_STAMP = 34;
    HoloPokemonMove V0035_MOVE_DISCHARGE = 35;
    HoloPokemonMove V0036_MOVE_FLASH_CANNON = 36;
    HoloPokemonMove V0037_MOVE_PECK = 37;
    HoloPokemonMove V0038_MOVE_DRILL_PECK = 38;
    HoloPokemonMove V0039_MOVE_ICE_BEAM = 39;
    HoloPokemonMove V0040_MOVE_BLIZZARD = 40;
    HoloPokemonMove V0041_MOVE_AIR_SLASH = 41;
    HoloPokemonMove V0042_MOVE_HEAT_WAVE = 42;
    HoloPokemonMove V0043_MOVE_TWINEEDLE = 43;
    HoloPokemonMove V0044_MOVE_POISON_JAB = 44;
    HoloPokemonMove V0045_MOVE_AERIAL_ACE = 45;
    HoloPokemonMove V0046_MOVE_DRILL_RUN = 46;
    HoloPokemonMove V0047_MOVE_PETAL_BLIZZARD = 47;
    HoloPokemonMove V0048_MOVE_MEGA_DRAIN = 48;
    HoloPokemonMove V0049_MOVE_BUG_BUZZ = 49;
    HoloPokemonMove V0050_MOVE_POISON_FANG = 50;
    HoloPokemonMove V0051_MOVE_NIGHT_SLASH = 51;
    HoloPokemonMove V0052_MOVE_SLASH = 52;
    HoloPokemonMove V0053_MOVE_BUBBLE_BEAM = 53;
    HoloPokemonMove V0054_MOVE_SUBMISSION = 54;
    HoloPokemonMove V0055_MOVE_KARATE_CHOP = 55;
    HoloPokemonMove V0056_MOVE_LOW_SWEEP = 56;
    HoloPokemonMove V0057_MOVE_AQUA_JET = 57;
    HoloPokemonMove V0058_MOVE_AQUA_TAIL = 58;
    HoloPokemonMove V0059_MOVE_SEED_BOMB = 59;
    HoloPokemonMove V0060_MOVE_PSYSHOCK = 60;
    HoloPokemonMove V0061_MOVE_ROCK_THROW = 61;
    HoloPokemonMove V0062_MOVE_ANCIENT_POWER = 62;
    HoloPokemonMove V0063_MOVE_ROCK_TOMB = 63;
    HoloPokemonMove V0064_MOVE_ROCK_SLIDE = 64;
    HoloPokemonMove V0065_MOVE_POWER_GEM = 65;
    HoloPokemonMove V0066_MOVE_SHADOW_SNEAK = 66;
    HoloPokemonMove V0067_MOVE_SHADOW_PUNCH = 67;
    HoloPokemonMove V0068_MOVE_SHADOW_CLAW = 68;
    HoloPokemonMove V0069_MOVE_OMINOUS_WIND = 69;
    HoloPokemonMove V0070_MOVE_SHADOW_BALL = 70;
    HoloPokemonMove V0071_MOVE_BULLET_PUNCH = 71;
    HoloPokemonMove V0072_MOVE_MAGNET_BOMB = 72;
    HoloPokemonMove V0073_MOVE_STEEL_WING = 73;
    HoloPokemonMove V0074_MOVE_IRON_HEAD = 74;
    HoloPokemonMove V0075_MOVE_PARABOLIC_CHARGE = 75;
    HoloPokemonMove V0076_MOVE_SPARK = 76;
    HoloPokemonMove V0077_MOVE_THUNDER_PUNCH = 77;
    HoloPokemonMove V0078_MOVE_THUNDER = 78;
    HoloPokemonMove V0079_MOVE_THUNDERBOLT = 79;
    HoloPokemonMove V0080_MOVE_TWISTER = 80;
    HoloPokemonMove V0081_MOVE_DRAGON_BREATH = 81;
    HoloPokemonMove V0082_MOVE_DRAGON_PULSE = 82;
    HoloPokemonMove V0083_MOVE_DRAGON_CLAW = 83;
    HoloPokemonMove V0084_MOVE_DISARMING_VOICE = 84;
    HoloPokemonMove V0085_MOVE_DRAINING_KISS = 85;
    HoloPokemonMove V0086_MOVE_DAZZLING_GLEAM = 86;
    HoloPokemonMove V0087_MOVE_MOONBLAST = 87;
    HoloPokemonMove V0088_MOVE_PLAY_ROUGH = 88;
    HoloPokemonMove V0089_MOVE_CROSS_POISON = 89;
    HoloPokemonMove V0090_MOVE_SLUDGE_BOMB = 90;
    HoloPokemonMove V0091_MOVE_SLUDGE_WAVE = 91;
    HoloPokemonMove V0092_MOVE_GUNK_SHOT = 92;
    HoloPokemonMove V0093_MOVE_MUD_SHOT = 93;
    HoloPokemonMove V0094_MOVE_BONE_CLUB = 94;
    HoloPokemonMove V0095_MOVE_BULLDOZE = 95;
    HoloPokemonMove V0096_MOVE_MUD_BOMB = 96;
    HoloPokemonMove V0097_MOVE_FURY_CUTTER = 97;
    HoloPokemonMove V0098_MOVE_BUG_BITE = 98;
    HoloPokemonMove V0099_MOVE_SIGNAL_BEAM = 99;
    HoloPokemonMove V0100_MOVE_X_SCISSOR = 100;
    HoloPokemonMove V0101_MOVE_FLAME_CHARGE = 101;
    HoloPokemonMove V0102_MOVE_FLAME_BURST = 102;
    HoloPokemonMove V0103_MOVE_FIRE_BLAST = 103;
    HoloPokemonMove V0104_MOVE_BRINE = 104;
    HoloPokemonMove V0105_MOVE_WATER_PULSE = 105;
    HoloPokemonMove V0106_MOVE_SCALD = 106;
    HoloPokemonMove V0107_MOVE_HYDRO_PUMP = 107;
    HoloPokemonMove V0108_MOVE_PSYCHIC = 108;
    HoloPokemonMove V0109_MOVE_PSYSTRIKE = 109;
    HoloPokemonMove V0110_MOVE_ICE_SHARD = 110;
    HoloPokemonMove V0111_MOVE_ICY_WIND = 111;
    HoloPokemonMove V0112_MOVE_FROST_BREATH = 112;
    HoloPokemonMove V0113_MOVE_ABSORB = 113;
    HoloPokemonMove V0114_MOVE_GIGA_DRAIN = 114;
    HoloPokemonMove V0115_MOVE_FIRE_PUNCH = 115;
    HoloPokemonMove V0116_MOVE_SOLAR_BEAM = 116;
    HoloPokemonMove V0117_MOVE_LEAF_BLADE = 117;
    HoloPokemonMove V0118_MOVE_POWER_WHIP = 118;
    HoloPokemonMove V0119_MOVE_SPLASH = 119;
    HoloPokemonMove V0120_MOVE_ACID = 120;
    HoloPokemonMove V0121_MOVE_AIR_CUTTER = 121;
    HoloPokemonMove V0122_MOVE_HURRICANE = 122;
    HoloPokemonMove V0123_MOVE_BRICK_BREAK = 123;
    HoloPokemonMove V0124_MOVE_CUT = 124;
    HoloPokemonMove V0125_MOVE_SWIFT = 125;
    HoloPokemonMove V0126_MOVE_HORN_ATTACK = 126;
    HoloPokemonMove V0127_MOVE_STOMP = 127;
    HoloPokemonMove V0128_MOVE_HEADBUTT = 128;
    HoloPokemonMove V0129_MOVE_HYPER_FANG = 129;
    HoloPokemonMove V0130_MOVE_SLAM = 130;
    HoloPokemonMove V0131_MOVE_BODY_SLAM = 131;
    HoloPokemonMove V0132_MOVE_REST = 132;
    HoloPokemonMove V0133_MOVE_STRUGGLE = 133;
    HoloPokemonMove V0134_MOVE_SCALD_BLASTOISE = 134;
    HoloPokemonMove V0135_MOVE_HYDRO_PUMP_BLASTOISE = 135;
    HoloPokemonMove V0136_MOVE_WRAP_GREEN = 136;
    HoloPokemonMove V0137_MOVE_WRAP_PINK = 137;
    HoloPokemonMove V0200_MOVE_FURY_CUTTER_FAST = 200;
    HoloPokemonMove V0201_MOVE_BUG_BITE_FAST = 201;
    HoloPokemonMove V0202_MOVE_BITE_FAST = 202;
    HoloPokemonMove V0203_MOVE_SUCKER_PUNCH_FAST = 203;
    HoloPokemonMove V0204_MOVE_DRAGON_BREATH_FAST = 204;
    HoloPokemonMove V0205_MOVE_THUNDER_SHOCK_FAST = 205;
    HoloPokemonMove V0206_MOVE_SPARK_FAST = 206;
    HoloPokemonMove V0207_MOVE_LOW_KICK_FAST = 207;
    HoloPokemonMove V0208_MOVE_KARATE_CHOP_FAST = 208;
    HoloPokemonMove V0209_MOVE_EMBER_FAST = 209;
    HoloPokemonMove V0210_MOVE_WING_ATTACK_FAST = 210;
    HoloPokemonMove V0211_MOVE_PECK_FAST = 211;
    HoloPokemonMove V0212_MOVE_LICK_FAST = 212;
    HoloPokemonMove V0213_MOVE_SHADOW_CLAW_FAST = 213;
    HoloPokemonMove V0214_MOVE_VINE_WHIP_FAST = 214;
    HoloPokemonMove V0215_MOVE_RAZOR_LEAF_FAST = 215;
    HoloPokemonMove V0216_MOVE_MUD_SHOT_FAST = 216;
    HoloPokemonMove V0217_MOVE_ICE_SHARD_FAST = 217;
    HoloPokemonMove V0218_MOVE_FROST_BREATH_FAST = 218;
    HoloPokemonMove V0219_MOVE_QUICK_ATTACK_FAST = 219;
    HoloPokemonMove V0220_MOVE_SCRATCH_FAST = 220;
    HoloPokemonMove V0221_MOVE_TACKLE_FAST = 221;
    HoloPokemonMove V0222_MOVE_POUND_FAST = 222;
    HoloPokemonMove V0223_MOVE_CUT_FAST = 223;
    HoloPokemonMove V0224_MOVE_POISON_JAB_FAST = 224;
    HoloPokemonMove V0225_MOVE_ACID_FAST = 225;
    HoloPokemonMove V0226_MOVE_PSYCHO_CUT_FAST = 226;
    HoloPokemonMove V0227_MOVE_ROCK_THROW_FAST = 227;
    HoloPokemonMove V0228_MOVE_METAL_CLAW_FAST = 228;
    HoloPokemonMove V0229_MOVE_BULLET_PUNCH_FAST = 229;
    HoloPokemonMove V0230_MOVE_WATER_GUN_FAST = 230;
    HoloPokemonMove V0231_MOVE_SPLASH_FAST = 231;
    HoloPokemonMove V0232_MOVE_WATER_GUN_FAST_BLASTOISE = 232;
    HoloPokemonMove V0233_MOVE_MUD_SLAP_FAST = 233;
    HoloPokemonMove V0234_MOVE_ZEN_HEADBUTT_FAST = 234;
    HoloPokemonMove V0235_MOVE_CONFUSION_FAST = 235;
    HoloPokemonMove V0236_MOVE_POISON_STING_FAST = 236;
    HoloPokemonMove V0237_MOVE_BUBBLE_FAST = 237;
    HoloPokemonMove V0238_MOVE_FEINT_ATTACK_FAST = 238;
    HoloPokemonMove V0239_MOVE_STEEL_WING_FAST = 239;
    HoloPokemonMove V0240_MOVE_FIRE_FANG_FAST = 240;
    HoloPokemonMove V0241_MOVE_ROCK_SMASH_FAST = 241;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class MoveSettingsProto {
    // Fields:
    int UniqueIdFieldNumber = 1;
    int AnimationIdFieldNumber = 2;
    int TypeFieldNumber = 3;
    int PowerFieldNumber = 4;
    int AccuracyChanceFieldNumber = 5;
    int CriticalChanceFieldNumber = 6;
    int HealScalarFieldNumber = 7;
    int StaminaLossScalarFieldNumber = 8;
    int TrainerLevelMinFieldNumber = 9;
    int TrainerLevelMaxFieldNumber = 10;
    int VfxNameFieldNumber = 11;
    int DurationMsFieldNumber = 12;
    int DamageWindowStartMsFieldNumber = 13;
    int DamageWindowEndMsFieldNumber = 14;
    int EnergyDeltaFieldNumber = 15;
    Generic _parser;
    HoloPokemonMove uniqueId_;
    int animationId_;
    HoloPokemonType type_;
    float power_;
    float accuracyChance_;
    float criticalChance_;
    float healScalar_;
    float staminaLossScalar_;
    int trainerLevelMin_;
    int trainerLevelMax_;
    String vfxName_;
    int durationMs_;
    int damageWindowStartMs_;
    int damageWindowEndMs_;
    int energyDelta_;
    Generic <>f__am$cache10;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MoveSettingsProto Clone(...);
    HoloPokemonMove get_UniqueId(...);
    void set_UniqueId(...);
    int get_AnimationId(...);
    void set_AnimationId(...);
    HoloPokemonType get_Type(...);
    void set_Type(...);
    float get_Power(...);
    void set_Power(...);
    float get_AccuracyChance(...);
    void set_AccuracyChance(...);
    float get_CriticalChance(...);
    void set_CriticalChance(...);
    float get_HealScalar(...);
    void set_HealScalar(...);
    float get_StaminaLossScalar(...);
    void set_StaminaLossScalar(...);
    int get_TrainerLevelMin(...);
    void set_TrainerLevelMin(...);
    int get_TrainerLevelMax(...);
    void set_TrainerLevelMax(...);
    String get_VfxName(...);
    void set_VfxName(...);
    int get_DurationMs(...);
    void set_DurationMs(...);
    int get_DamageWindowStartMs(...);
    void set_DamageWindowStartMs(...);
    int get_DamageWindowEndMs(...);
    void set_DamageWindowEndMs(...);
    int get_EnergyDelta(...);
    void set_EnergyDelta(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MoveSettingsProto <_parser>m__175(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MoveSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ItemSettingsProto {
    // Fields:
    int UniqueIdFieldNumber = 1;
    int ItemTypeFieldNumber = 2;
    int CategoryFieldNumber = 3;
    int DropFreqFieldNumber = 4;
    int DropTrainerLevelFieldNumber = 5;
    int PokeballFieldNumber = 6;
    int PotionFieldNumber = 7;
    int ReviveFieldNumber = 8;
    int BattleFieldNumber = 9;
    int FoodFieldNumber = 10;
    int InventoryUpgradeFieldNumber = 11;
    int XpBoostFieldNumber = 12;
    int IncenseFieldNumber = 13;
    int EggIncubatorFieldNumber = 14;
    int FortModifierFieldNumber = 15;
    Generic _parser;
    Item uniqueId_;
    HoloItemType itemType_;
    HoloItemCategory category_;
    float dropFreq_;
    int dropTrainerLevel_;
    PokeBallAttributesProto pokeball_;
    PotionAttributesProto potion_;
    ReviveAttributesProto revive_;
    BattleAttributesProto battle_;
    FoodAttributesProto food_;
    InventoryUpgradeAttributesProto inventoryUpgrade_;
    ExperienceBoostAttributesProto xpBoost_;
    IncenseAttributesProto incense_;
    EggIncubatorAttributesProto eggIncubator_;
    FortModifierAttributesProto fortModifier_;
    Generic <>f__am$cache10;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ItemSettingsProto Clone(...);
    Item get_UniqueId(...);
    void set_UniqueId(...);
    HoloItemType get_ItemType(...);
    void set_ItemType(...);
    HoloItemCategory get_Category(...);
    void set_Category(...);
    float get_DropFreq(...);
    void set_DropFreq(...);
    int get_DropTrainerLevel(...);
    void set_DropTrainerLevel(...);
    PokeBallAttributesProto get_Pokeball(...);
    void set_Pokeball(...);
    PotionAttributesProto get_Potion(...);
    void set_Potion(...);
    ReviveAttributesProto get_Revive(...);
    void set_Revive(...);
    BattleAttributesProto get_Battle(...);
    void set_Battle(...);
    FoodAttributesProto get_Food(...);
    void set_Food(...);
    InventoryUpgradeAttributesProto get_InventoryUpgrade(...);
    void set_InventoryUpgrade(...);
    ExperienceBoostAttributesProto get_XpBoost(...);
    void set_XpBoost(...);
    IncenseAttributesProto get_Incense(...);
    void set_Incense(...);
    EggIncubatorAttributesProto get_EggIncubator(...);
    void set_EggIncubator(...);
    FortModifierAttributesProto get_FortModifier(...);
    void set_FortModifier(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ItemSettingsProto <_parser>m__171(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ItemSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class Item {
    // Fields:
    int value__;
    Item ITEM_UNKNOWN = 0;
    Item ITEM_POKE_BALL = 1;
    Item ITEM_GREAT_BALL = 2;
    Item ITEM_ULTRA_BALL = 3;
    Item ITEM_MASTER_BALL = 4;
    Item ITEM_POTION = 101;
    Item ITEM_SUPER_POTION = 102;
    Item ITEM_HYPER_POTION = 103;
    Item ITEM_MAX_POTION = 104;
    Item ITEM_REVIVE = 201;
    Item ITEM_MAX_REVIVE = 202;
    Item ITEM_LUCKY_EGG = 301;
    Item ITEM_INCENSE_ORDINARY = 401;
    Item ITEM_INCENSE_SPICY = 402;
    Item ITEM_INCENSE_COOL = 403;
    Item ITEM_INCENSE_FLORAL = 404;
    Item ITEM_TROY_DISK = 501;
    Item ITEM_X_ATTACK = 602;
    Item ITEM_X_DEFENSE = 603;
    Item ITEM_X_MIRACLE = 604;
    Item ITEM_RAZZ_BERRY = 701;
    Item ITEM_BLUK_BERRY = 702;
    Item ITEM_NANAB_BERRY = 703;
    Item ITEM_WEPAR_BERRY = 704;
    Item ITEM_PINAP_BERRY = 705;
    Item ITEM_SPECIAL_CAMERA = 801;
    Item ITEM_INCUBATOR_BASIC_UNLIMITED = 901;
    Item ITEM_INCUBATOR_BASIC = 902;
    Item ITEM_POKEMON_STORAGE_UPGRADE = 1001;
    Item ITEM_ITEM_STORAGE_UPGRADE = 1002;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloItemType {
    // Fields:
    int value__;
    HoloItemType ITEM_TYPE_NONE = 0;
    HoloItemType ITEM_TYPE_POKEBALL = 1;
    HoloItemType ITEM_TYPE_POTION = 2;
    HoloItemType ITEM_TYPE_REVIVE = 3;
    HoloItemType ITEM_TYPE_MAP = 4;
    HoloItemType ITEM_TYPE_BATTLE = 5;
    HoloItemType ITEM_TYPE_FOOD = 6;
    HoloItemType ITEM_TYPE_CAMERA = 7;
    HoloItemType ITEM_TYPE_DISK = 8;
    HoloItemType ITEM_TYPE_INCUBATOR = 9;
    HoloItemType ITEM_TYPE_INCENSE = 10;
    HoloItemType ITEM_TYPE_XP_BOOST = 11;
    HoloItemType ITEM_TYPE_INVENTORY_UPGRADE = 12;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloItemCategory {
    // Fields:
    int value__;
    HoloItemCategory ITEM_CATEGORY_NONE = 0;
    HoloItemCategory ITEM_CATEGORY_POKEBALL = 1;
    HoloItemCategory ITEM_CATEGORY_FOOD = 2;
    HoloItemCategory ITEM_CATEGORY_MEDICINE = 3;
    HoloItemCategory ITEM_CATEGORY_BOOST = 4;
    HoloItemCategory ITEM_CATEGORY_UTILITES = 5;
    HoloItemCategory ITEM_CATEGORY_CAMERA = 6;
    HoloItemCategory ITEM_CATEGORY_DISK = 7;
    HoloItemCategory ITEM_CATEGORY_INCUBATOR = 8;
    HoloItemCategory ITEM_CATEGORY_INCENSE = 9;
    HoloItemCategory ITEM_CATEGORY_XP_BOOST = 10;
    HoloItemCategory ITEM_CATEGORY_INVENTORY_UPGRADE = 11;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokeBallAttributesProto {
    // Fields:
    int ItemEffectFieldNumber = 1;
    int CaptureMultiFieldNumber = 2;
    int CaptureMultiEffectFieldNumber = 3;
    int ItemEffectModFieldNumber = 4;
    Generic _parser;
    HoloItemEffect itemEffect_;
    float captureMulti_;
    float captureMultiEffect_;
    float itemEffectMod_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokeBallAttributesProto Clone(...);
    HoloItemEffect get_ItemEffect(...);
    void set_ItemEffect(...);
    float get_CaptureMulti(...);
    void set_CaptureMulti(...);
    float get_CaptureMultiEffect(...);
    void set_CaptureMultiEffect(...);
    float get_ItemEffectMod(...);
    void set_ItemEffectMod(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokeBallAttributesProto <_parser>m__163(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokeBallAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloItemEffect {
    // Fields:
    int value__;
    HoloItemEffect ITEM_EFFECT_NONE = 0;
    HoloItemEffect ITEM_EFFECT_CAP_NO_FLEE = 1000;
    HoloItemEffect ITEM_EFFECT_CAP_NO_MOVEMENT = 1002;
    HoloItemEffect ITEM_EFFECT_CAP_NO_THREAT = 1003;
    HoloItemEffect ITEM_EFFECT_CAP_TARGET_MAX = 1004;
    HoloItemEffect ITEM_EFFECT_CAP_TARGET_SLOW = 1005;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_NIGHT = 1006;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_TRAINER = 1007;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = 1008;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_LEGEND = 1009;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_HEAVY = 1010;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_REPEAT = 1011;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = 1012;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_ALWAYS = 1013;
    HoloItemEffect ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = 1014;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PotionAttributesProto {
    // Fields:
    int StaPercentFieldNumber = 1;
    int StaAmountFieldNumber = 2;
    Generic _parser;
    float staPercent_;
    int staAmount_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PotionAttributesProto Clone(...);
    float get_StaPercent(...);
    void set_StaPercent(...);
    int get_StaAmount(...);
    void set_StaAmount(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PotionAttributesProto <_parser>m__164(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PotionAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ReviveAttributesProto {
    // Fields:
    int StaPercentFieldNumber = 1;
    Generic _parser;
    float staPercent_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ReviveAttributesProto Clone(...);
    float get_StaPercent(...);
    void set_StaPercent(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ReviveAttributesProto <_parser>m__165(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ReviveAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class BattleAttributesProto {
    // Fields:
    int StaPercentFieldNumber = 1;
    int AtkPercentFieldNumber = 2;
    int DefPercentFieldNumber = 3;
    int DurationSFieldNumber = 4;
    Generic _parser;
    float staPercent_;
    float atkPercent_;
    float defPercent_;
    float durationS_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BattleAttributesProto Clone(...);
    float get_StaPercent(...);
    void set_StaPercent(...);
    float get_AtkPercent(...);
    void set_AtkPercent(...);
    float get_DefPercent(...);
    void set_DefPercent(...);
    float get_DurationS(...);
    void set_DurationS(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BattleAttributesProto <_parser>m__166(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BattleAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FoodAttributesProto {
    // Fields:
    int ItemEffectFieldNumber = 1;
    int ItemEffectPercentFieldNumber = 2;
    int GrowthPercentFieldNumber = 3;
    Generic _parser;
    Generic _repeated_itemEffect_codec;
    Generic itemEffect_;
    Generic _repeated_itemEffectPercent_codec;
    Generic itemEffectPercent_;
    float growthPercent_;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FoodAttributesProto Clone(...);
    Generic get_ItemEffect(...);
    Generic get_ItemEffectPercent(...);
    float get_GrowthPercent(...);
    void set_GrowthPercent(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FoodAttributesProto <_parser>m__167(...);
    int <_repeated_itemEffect_codec>m__168(...);
    HoloItemEffect <_repeated_itemEffect_codec>m__169(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FoodAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventoryUpgradeAttributesProto {
    // Fields:
    int AdditionalStorageFieldNumber = 1;
    int UpgradeTypeFieldNumber = 2;
    Generic _parser;
    int additionalStorage_;
    InventoryUpgradeType upgradeType_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryUpgradeAttributesProto Clone(...);
    int get_AdditionalStorage(...);
    void set_AdditionalStorage(...);
    InventoryUpgradeType get_UpgradeType(...);
    void set_UpgradeType(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryUpgradeAttributesProto <_parser>m__16A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryUpgradeAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventoryUpgradeType {
    // Fields:
    int value__;
    InventoryUpgradeType UPGRADE_UNSET = 0;
    InventoryUpgradeType INCREASE_ITEM_STORAGE = 1;
    InventoryUpgradeType INCREASE_POKEMON_STORAGE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class ExperienceBoostAttributesProto {
    // Fields:
    int XpMultiplierFieldNumber = 1;
    int BoostDurationMsFieldNumber = 2;
    Generic _parser;
    float xpMultiplier_;
    int boostDurationMs_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ExperienceBoostAttributesProto Clone(...);
    float get_XpMultiplier(...);
    void set_XpMultiplier(...);
    int get_BoostDurationMs(...);
    void set_BoostDurationMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ExperienceBoostAttributesProto <_parser>m__16B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ExperienceBoostAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class IncenseAttributesProto {
    // Fields:
    int IncenseLifetimeSecondsFieldNumber = 1;
    int PokemonTypeFieldNumber = 2;
    int PokemonIncenseTypeProbabilityFieldNumber = 3;
    int StandingTimeBetweenEncountersSecFieldNumber = 4;
    int MovingTimeBetweenEncounterSecFieldNumber = 5;
    int DistanceRequiredForShorterIntervalMetersFieldNumber = 6;
    int PokemonAttractedLengthSecFieldNumber = 7;
    Generic _parser;
    int incenseLifetimeSeconds_;
    Generic _repeated_pokemonType_codec;
    Generic pokemonType_;
    float pokemonIncenseTypeProbability_;
    int standingTimeBetweenEncountersSec_;
    int movingTimeBetweenEncounterSec_;
    int distanceRequiredForShorterIntervalMeters_;
    int pokemonAttractedLengthSec_;
    Generic <>f__am$cache9;
    Generic <>f__am$cacheA;
    Generic <>f__am$cacheB;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    IncenseAttributesProto Clone(...);
    int get_IncenseLifetimeSeconds(...);
    void set_IncenseLifetimeSeconds(...);
    Generic get_PokemonType(...);
    float get_PokemonIncenseTypeProbability(...);
    void set_PokemonIncenseTypeProbability(...);
    int get_StandingTimeBetweenEncountersSec(...);
    void set_StandingTimeBetweenEncountersSec(...);
    int get_MovingTimeBetweenEncounterSec(...);
    void set_MovingTimeBetweenEncounterSec(...);
    int get_DistanceRequiredForShorterIntervalMeters(...);
    void set_DistanceRequiredForShorterIntervalMeters(...);
    int get_PokemonAttractedLengthSec(...);
    void set_PokemonAttractedLengthSec(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    IncenseAttributesProto <_parser>m__16D(...);
    int <_repeated_pokemonType_codec>m__16E(...);
    HoloPokemonType <_repeated_pokemonType_codec>m__16F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ IncenseAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EggIncubatorAttributesProto {
    // Fields:
    int IncubatorTypeFieldNumber = 1;
    int UsesFieldNumber = 2;
    int DistanceMultiplierFieldNumber = 3;
    Generic _parser;
    EggIncubatorType incubatorType_;
    int uses_;
    float distanceMultiplier_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EggIncubatorAttributesProto Clone(...);
    EggIncubatorType get_IncubatorType(...);
    void set_IncubatorType(...);
    int get_Uses(...);
    void set_Uses(...);
    float get_DistanceMultiplier(...);
    void set_DistanceMultiplier(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EggIncubatorAttributesProto <_parser>m__16C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EggIncubatorAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EggIncubatorType {
    // Fields:
    int value__;
    EggIncubatorType INCUBATOR_UNSET = 0;
    EggIncubatorType INCUBATOR_DISTANCE = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class FortModifierAttributesProto {
    // Fields:
    int ModifierLifetimeSecondsFieldNumber = 1;
    int TroyDiskNumPokemonSpawnedFieldNumber = 2;
    Generic _parser;
    int modifierLifetimeSeconds_;
    int troyDiskNumPokemonSpawned_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortModifierAttributesProto Clone(...);
    int get_ModifierLifetimeSeconds(...);
    void set_ModifierLifetimeSeconds(...);
    int get_TroyDiskNumPokemonSpawned(...);
    void set_TroyDiskNumPokemonSpawned(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortModifierAttributesProto <_parser>m__170(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortModifierAttributesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Gym
class BattlePrepUIController {
    // Fields:
    String OpenBool = "Open";
    String RemainOpenTrigger = "RemainOpen";
    PokemonPickerUIController pokemonPickerPrefab;
    Factory pokemonPickerFactory;
    GymState gymState;
    ApproachService approachService;
    IPokemonInventoryGuiService pokemonInventoryGuiService;
    GameMasterData gameMaster;
    Transform pokemonPickerGrid;
    Sprite trainSprite;
    Image battleBtn;
    Animator anim;
    RectTransform pickerUI;
    Image pickerTab;
    cmod_reqd teamColor;
    cmod_reqd attackerPokemonTeamIds;
    cmod_reqd pokemonPickers;
    ToggleArButton arButton;
    Generic <>f__am$cache10;
    Generic <>f__am$cache11;

    // Methods:
    void .ctor(...);
    PokemonProto get_enemyPokemon(...);
    void Init(...);
    void Open(...);
    void Close(...);
    void CreatePickers(...);
    void RefreshPickers(...);
    void Shuffle(...);
    void Battle(...);
    void SwapPokemon(...);
    void SwapPokemenIntoSlot(...);
    cmod_reqd GetPokemon(...);
    void OptimizeAttackers(...);
    cmod_reqd OptimizedPokemonTeam(...);
    HoloPokemonType GetDominantEnemyType(...);
    boolean <SwapPokemon>m__59(...);
    boolean <OptimizedPokemonTeam>m__5C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Gym
class PokemonPickerUIController {
    // Fields:
    Image pokemonImage;
    Text nameText;
    Text cpText;
    Text cpLabel;
    Image healthBar;
    Color highHealthColor;
    Color mediumHealthColor;
    Color lowHealthColor;
    II18n i18n;
    int slotNumber;

    // Methods:
    void .ctor(...);
    void Init(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokemonPickerUIController Create(...);
    /*[05]*/ PokemonPickerUIController Create(...);
}

// Namespace: Niantic.Holoholo.Gym
class ToggleArButton {
    // Fields:
    IArService arService;
    Image image;
    Sprite ar_sprite_on;
    Sprite ar_sprite_off;
    boolean battleMode;
    AudioSource clickSound;
    GameObject root;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void Refresh(...);
    void SetSprite(...);
    void Toggle(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.AR
class IArService {
    // Methods:
    void add_OnToggleAr(...);
    void remove_OnToggleAr(...);
    boolean get_BattleArMode(...);
    boolean get_EncounterArMode(...);
    boolean get_IsAvailable(...);
    void ToggleAR(...);
}

// Namespace: Holoholo.Rpc
class PokemonProto {
    // Fields:
    int IdFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    int CpFieldNumber = 3;
    int StaminaFieldNumber = 4;
    int MaxStaminaFieldNumber = 5;
    int Move1FieldNumber = 6;
    int Move2FieldNumber = 7;
    int DeployedFortIdFieldNumber = 8;
    int OwnerNameFieldNumber = 9;
    int IsEggFieldNumber = 10;
    int EggKmWalkedTargetFieldNumber = 11;
    int EggKmWalkedStartFieldNumber = 12;
    int OriginFieldNumber = 14;
    int HeightMFieldNumber = 15;
    int WeightKgFieldNumber = 16;
    int IndividualAttackFieldNumber = 17;
    int IndividualDefenseFieldNumber = 18;
    int IndividualStaminaFieldNumber = 19;
    int CpMultiplierFieldNumber = 20;
    int PokeballFieldNumber = 21;
    int CapturedS2CellIdFieldNumber = 22;
    int BattlesAttackedFieldNumber = 23;
    int BattlesDefendedFieldNumber = 24;
    int EggIncubatorIdFieldNumber = 25;
    int CreationTimeMsFieldNumber = 26;
    int NumUpgradesFieldNumber = 27;
    int AdditionalCpMultiplierFieldNumber = 28;
    int FavoriteFieldNumber = 29;
    int NicknameFieldNumber = 30;
    int FromFortFieldNumber = 31;
    Generic _parser;
    ulong id_;
    int pokemonId_;
    int cp_;
    int stamina_;
    int maxStamina_;
    int move1_;
    int move2_;
    String deployedFortId_;
    String ownerName_;
    boolean isEgg_;
    double eggKmWalkedTarget_;
    double eggKmWalkedStart_;
    PokemonCreateContext origin_;
    float heightM_;
    float weightKg_;
    int individualAttack_;
    int individualDefense_;
    int individualStamina_;
    float cpMultiplier_;
    Item pokeball_;
    long capturedS2CellId_;
    int battlesAttacked_;
    int battlesDefended_;
    String eggIncubatorId_;
    long creationTimeMs_;
    int numUpgrades_;
    float additionalCpMultiplier_;
    boolean favorite_;
    String nickname_;
    boolean fromFort_;
    Generic <>f__am$cache1F;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonProto Clone(...);
    ulong get_Id(...);
    void set_Id(...);
    int get_PokemonId(...);
    void set_PokemonId(...);
    int get_Cp(...);
    void set_Cp(...);
    int get_Stamina(...);
    void set_Stamina(...);
    int get_MaxStamina(...);
    void set_MaxStamina(...);
    int get_Move1(...);
    void set_Move1(...);
    int get_Move2(...);
    void set_Move2(...);
    String get_DeployedFortId(...);
    void set_DeployedFortId(...);
    String get_OwnerName(...);
    void set_OwnerName(...);
    boolean get_IsEgg(...);
    void set_IsEgg(...);
    double get_EggKmWalkedTarget(...);
    void set_EggKmWalkedTarget(...);
    double get_EggKmWalkedStart(...);
    void set_EggKmWalkedStart(...);
    PokemonCreateContext get_Origin(...);
    void set_Origin(...);
    float get_HeightM(...);
    void set_HeightM(...);
    float get_WeightKg(...);
    void set_WeightKg(...);
    int get_IndividualAttack(...);
    void set_IndividualAttack(...);
    int get_IndividualDefense(...);
    void set_IndividualDefense(...);
    int get_IndividualStamina(...);
    void set_IndividualStamina(...);
    float get_CpMultiplier(...);
    void set_CpMultiplier(...);
    Item get_Pokeball(...);
    void set_Pokeball(...);
    long get_CapturedS2CellId(...);
    void set_CapturedS2CellId(...);
    int get_BattlesAttacked(...);
    void set_BattlesAttacked(...);
    int get_BattlesDefended(...);
    void set_BattlesDefended(...);
    String get_EggIncubatorId(...);
    void set_EggIncubatorId(...);
    long get_CreationTimeMs(...);
    void set_CreationTimeMs(...);
    int get_NumUpgrades(...);
    void set_NumUpgrades(...);
    float get_AdditionalCpMultiplier(...);
    void set_AdditionalCpMultiplier(...);
    boolean get_Favorite(...);
    void set_Favorite(...);
    String get_Nickname(...);
    void set_Nickname(...);
    boolean get_FromFort(...);
    void set_FromFort(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonProto <_parser>m__19C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonCreateContext {
    // Fields:
    int value__;
    PokemonCreateContext CREATE_CONTEXT_WILD = 0;
    PokemonCreateContext CREATE_CONTEXT_EGG = 1;
    PokemonCreateContext CREATE_CONTEXT_EVOLVE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Gym
class PickTeamUIController {
    // Fields:
    IRpcService rpcService;
    IUserPromptsService userPrompts;
    IInputEventService inputEventService;
    IConversationService conversationService;
    GameMasterData gameMasterData;
    IConversation currentConversataion;
    GameObject chooseTeamScreen;
    cmod_reqd teamsCg;
    cmod_reqd teamLogos;
    GameObject confirmButton;
    float unselectedAlpha;
    AudioClip selectSfx;
    int selectedTeam;
    Action OnTeamPicked;
    Action OnRejected;

    // Methods:
    void .ctor(...);
    void add_OnTeamPicked(...);
    void remove_OnTeamPicked(...);
    void add_OnRejected(...);
    void remove_OnRejected(...);
    void Initialize(...);
    void HandleDismiss(...);
    IEnumerator PlayIntro(...);
    IEnumerator PlayTeamLeaderIntro(...);
    IEnumerator PlayConversation(...);
    IEnumerator PlayAnimation(...);
    IEnumerator WaitUntilConversationEnd(...);
    void ClickSetTeamButton(...);
    void OnTeamButtonPressed(...);
    void ConfirmChoice(...);
    void SelectTeam(...);
    void SetTeamResponse(...);
    void <SelectTeam>m__5F(...);
    void <SelectTeam>m__60(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class IConversationService {
    // Methods:
    IConversation get_ActiveConversation(...);
    IConversation PresentConversation(...);
    IConversation PresentConversations(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class IConversation {
    // Methods:
    IUserTask get_AfterConversationTask(...);
    void set_AfterConversationTask(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class IUserTask {
    // Methods:
    void add_ShowingTitle(...);
    void remove_ShowingTitle(...);
    void add_TaskCompleted(...);
    void remove_TaskCompleted(...);
    String get_ShortTitle(...);
    float get_TimeTillFadeTitle(...);
    void Activate(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ApproachUIController Create(...);
    /*[05]*/ ApproachUIController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BattlePrepUIController Create(...);
    /*[05]*/ BattlePrepUIController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PickTeamUIController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PickTeamUIController Create(...);
    /*[05]*/ PickTeamUIController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class GuiController {
    // Fields:
    GuiLayer layer;
    int depth;
    boolean overrideSortingOrder;
    int customSortingOrder;
    BackButtonResponse backButtonResponse;
    UnityEvent customBackButtonEvent;
    boolean transitionsBlockInput;
    IGuiLayerService guiLayerService;
    IInputEventService inputEventService;
    IReceipt layerRegistrationReceipt;
    IReceipt backButtonListenerReceipt;
    boolean destroyed;
    boolean dismissed;
    cmod_reqd transitionComponents;
    Action <>f__am$cacheE;

    // Methods:
    void .ctor(...);
    GuiLayer get_Layer(...);
    int get_Depth(...);
    Generic get_SortingOrder(...);
    Canvas get_Canvas(...);
    boolean get_IsVisible(...);
    void set_IsVisible(...);
    boolean get_IsDestroyed(...);
    void PostInject(...);
    void OnDestroy(...);
    void Initialize(...);
    void Dismiss(...);
    IPromise DismissWithPromise(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void VisibilityUpdated(...);
    void Destroy(...);
    IPromise PlayTransitions(...);
    void <PostInject>m__A(...);
    void <PostInject>m__B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class BackButtonResponse {
    // Fields:
    int value__;
    BackButtonResponse Nothing = 0;
    BackButtonResponse Dismiss = 1;
    BackButtonResponse Block = 2;
    BackButtonResponse Event = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class IGuiLayerService {
    // Methods:
    IReceipt RegisterGui(...);
    void UnregisterGui(...);
    int GuiCount(...);
    void ShowLayers(...);
    void HideLayers(...);
    boolean IsVisible(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymApproachStateInput {
    // Fields:
    IInputLayerStack inputLayerStack;
    FlickGesture flickGesture;
    TouchScriptInputLayer inputLayer;
    IReceipt inputReceipt;
    Generic ChangeDefenders;

    // Methods:
    void .ctor(...);
    void add_ChangeDefenders(...);
    void remove_ChangeDefenders(...);
    void Awake(...);
    void Start(...);
    void OnDestroy(...);
    void OnFlick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.GameInput
class IInputLayerStack {
    // Methods:
    void add_LayerChanged(...);
    void remove_LayerChanged(...);
    IInputLayer get_CurrentLayer(...);
    Generic get_Layers(...);
    IReceipt PushLayer(...);
}

// Namespace: Niantic.Holoholo.GameInput
class IInputLayer {
    // Methods:
    String get_Name(...);
    void OnStart(...);
    void OnStop(...);
}

// Namespace: TouchScript.Gestures
class FlickGesture {
    // Fields:
    String FLICK_MESSAGE = "OnFlick";
    Generic flickedInvoker;
    float flickTime;
    float minDistance;
    float movementThreshold;
    GestureDirection direction;
    boolean moving;
    Vector2 movementBuffer;
    boolean isActive;
    Generic deltaSequence;
    Vector2 <ScreenFlickVector>k__BackingField;
    float <ScreenFlickTime>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_Flicked(...);
    void remove_Flicked(...);
    float get_FlickTime(...);
    void set_FlickTime(...);
    float get_MinDistance(...);
    void set_MinDistance(...);
    float get_MovementThreshold(...);
    void set_MovementThreshold(...);
    GestureDirection get_Direction(...);
    void set_Direction(...);
    Vector2 get_ScreenFlickVector(...);
    void set_ScreenFlickVector(...);
    float get_ScreenFlickTime(...);
    void set_ScreenFlickTime(...);
    void LateUpdate(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void onRecognized(...);
    void reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: 
class GestureDirection {
    // Fields:
    int value__;
    GestureDirection Any = 0;
    GestureDirection Horizontal = 1;
    GestureDirection Vertical = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.GameInput
class TouchScriptInputLayer {
    // Fields:
    CameraLayerBase cameraLayer;

    // Methods:
    void .ctor(...);
    void Awake(...);
    String get_Name(...);
    void OnStart(...);
    void OnStop(...);
    void EnsureCameraLayer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void OnStart(...);
    /*[06]*/ void OnStop(...);
}

// Namespace: TouchScript.Layers
class CameraLayerBase {
    // Fields:
    LayerMask layerMask;
    Camera _camera;

    // Methods:
    void .ctor(...);
    LayerMask get_LayerMask(...);
    void set_LayerMask(...);
    Vector3 get_WorldProjectionNormal(...);
    LayerHitResult Hit(...);
    void Awake(...);
    void setName(...);
    ProjectionParams createProjectionParams(...);
    void updateCamera(...);
    LayerHitResult castRay(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
    /*[16]*/ void updateCamera(...);
}

// Namespace: 
class LayerHitResult {
    // Fields:
    int value__;
    LayerHitResult Error = 0;
    LayerHitResult Hit = 1;
    LayerHitResult Miss = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Layers
class ProjectionParams {
    // Methods:
    void .ctor(...);
    Vector3 ProjectTo(...);
    Vector2 ProjectFrom(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 ProjectTo(...);
    /*[05]*/ Vector2 ProjectFrom(...);
}

// Namespace: Niantic.Holoholo.Gym
class ApproachCameraController {
    // Fields:
    ICameraRig cameraRig;
    GymState gymState;
    ApproachService approachService;
    AnimationDefinition introAnimation;
    AnimationDefinition changePlatformAnimation;
    float cameraDownOffset;
    float cameraUpOffset;
    GymApproachPlatform currentPlatform;
    float currentT;
    boolean allowInteraction;
    Coroutine animationCoroutine;
    AnimationDefinition currentAnimation;
    Vector3 startPosition;
    Quaternion startRotation;
    Vector3 targetPosition;
    Quaternion targetRotation;
    int currentPlatformIndex;
    Action OnComplete;

    // Methods:
    void .ctor(...);
    void add_OnComplete(...);
    void remove_OnComplete(...);
    int get_CurrentPlatformIndex(...);
    void set_CurrentPlatformIndex(...);
    void Reset(...);
    void Init(...);
    void OnStart(...);
    void OnStop(...);
    void AnimateToPlatform(...);
    IEnumerator AnimateCamera(...);
    void ChangePlatform(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: 
class AnimationDefinition {
    // Fields:
    float duration;
    AnimationCurve lateralTranslationCurve;
    AnimationCurve verticalTranslationCurve;
    AnimationCurve rotationCurve;
    AnimationCurve cameraLookInfluenceCurve;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymApproachPlatform {
    // Fields:
    HoloCharacter Character;
    EnumScaleMode scaleMode;
    AnimationCurve pokemonScaleCurve;
    Text ownerName;
    Text ownerLevel;
    Text cpLabel;
    Text pokemonNameLabel;
    GameObject PokemonStatsRoot;
    Text pokemonBattlesLabel;
    GameObject crown;
    Transform avatarNode;
    GameObject frontPlate;
    GameObject playerNamePlate;
    GameObject blobShadow;
    float outlineAmount;
    Material outlineMaterial;
    GymTeamColorUI gymTeamColor;
    Transform CameraPosition;
    ApproachService approachService;
    ILocationProvider locationProvider;
    IRpcService rpc;
    IAvatarService avatar;
    IPokemonInventoryGuiService pokemonInventoryGuiService;
    GymState gymState;
    IPokemonBoundsService pokemonBoundsService;
    GameObject defenderAvatar;
    PlayerAvatarProto defenderAvatarProto;
    PokemonProto <Pokemon>k__BackingField;
    GymApproachPlatform <NextPlatform>k__BackingField;
    GymApproachPlatform <PrevPlatform>k__BackingField;

    // Methods:
    void .ctor(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    GymApproachPlatform get_NextPlatform(...);
    void set_NextPlatform(...);
    GymApproachPlatform get_PrevPlatform(...);
    void set_PrevPlatform(...);
    void Init(...);
    void Refresh(...);
    void DrawAvatarOutline(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class HoloCharacter {
    // Fields:
    Kind kind;
    int kindIdx;
    PokemonSettingsProto currPokemonSettings;
    float scaleFactor;
    EnumScaleMode scaleMode;
    boolean useScaleGMT;
    float originScale;
    float boundScaled;
    float boundVerticalOffset;
    Vector3 characterOffset;
    IAssetLoadRequest assetLoadRequest;
    Action OnAssetWasInstantiated;
    GameObject <Asset>k__BackingField;
    PokemonModel <ViewModel>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnAssetWasInstantiated(...);
    void remove_OnAssetWasInstantiated(...);
    GameObject get_Asset(...);
    void set_Asset(...);
    PokemonModel get_ViewModel(...);
    void set_ViewModel(...);
    int get_ViewID(...);
    GameObject get_ViewFBX(...);
    Transform get_ViewWaist(...);
    boolean get_Ready(...);
    Kind get_characterKind(...);
    int get_PokemonId(...);
    float get_ScaleFactor(...);
    EnumScaleMode get_ScaleMode(...);
    float get_OriginScale(...);
    void set_OriginScale(...);
    float get_BoundScaled(...);
    float get_BoundVerticalOffset(...);
    void set_BoundVerticalOffset(...);
    void SetBoundScale(...);
    float GetBoundVerticalShift(...);
    void set_CharacterOffset(...);
    void OnDestroy(...);
    void ShowAsset(...);
    void CreateFromPrefab(...);
    HoloCharacter Create(...);
    void LoadEgg(...);
    void LoadIncubator(...);
    void LoadPokemon(...);
    void CopyFrom(...);
    void OnAssetLoaded(...);
    void ParticleAtChild(...);
    GameObject ParticleAt(...);
    GameObject createParticleFromPrefab(...);
    void OnDrawGizmos(...);
    void DestroyAsset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Kind {
    // Fields:
    int value__;
    Kind UNKNOWN = 0;
    Kind POKEMON = 1;
    Kind EGG = 2;
    Kind INCUBATOR = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class EnumScaleMode {
    // Fields:
    int value__;
    EnumScaleMode BRB = 0;
    EnumScaleMode Maya = 1;
    EnumScaleMode MayaWCurve = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Assets
class IAssetLoadRequest {
    // Methods:
    void add_OnLoaded(...);
    void remove_OnLoaded(...);
    String get_BundleName(...);
    String get_AssetName(...);
    GameObject get_Asset(...);
    boolean get_Done(...);
    void Cancel(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class PokemonModel {
    // Fields:
    int ViewID;
    Transform Origin;
    Transform Waist;
    Transform Head;
    GameObject ViewFBX;
    cmod_reqd customCollisionTransforms;
    Transform emitterfx;
    String emissionpath;

    // Methods:
    void .ctor(...);
    cmod_reqd get_CustomCollisionTransforms(...);
    Transform get_EmitterFX(...);
    void set_EmitterFX(...);
    String get_EmissionPath(...);
    void set_EmissionPath(...);
    void Awake(...);
    int IdFromModelName(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymTeamColorUI {
    // Fields:
    cmod_reqd teamColor;
    cmod_reqd gymMaterial;
    MeshRenderer meshRenderer;
    Text playerNameText;
    Image playerNameMarker;
    Text playerLevelText;
    Image leaderCrown;
    ParticleSystem backgroundVfx;
    ParticleSystem avatarVfx;
    GymState gymState;

    // Methods:
    void .ctor(...);
    void Start(...);
    void SetTeamColors(...);
    Color GetTeamColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class IPokemonBoundsService {
    // Methods:
    float get_MinimumPokemonHeightM(...);
    float get_MaximumPokemonHeightM(...);
    float get_MinimumCylinderHeightM(...);
    float get_MaximumCylinderHeightM(...);
    float get_MinimumCylinderHeightW(...);
    float get_MaximumCylinderHeightW(...);
    float get_MinimumFloatingPokemonHeightM(...);
    float get_MaximumFloatingPokemonHeightM(...);
    float get_MinimumCameraHeightM(...);
    float get_MaximumCameraHeightM(...);
    boolean IsPokemonFloatingType(...);
    float PokemonCylinderHeightOffGroundM(...);
    float PokemonCylinderHeightM(...);
    float PokemonHeightM(...);
    float PokemonScale(...);
    float NormalizedHeightM(...);
    float NormalizedCylinderHeightM(...);
    float NormalizedCylinderHeightW(...);
    float NormalizedFlyingHeight(...);
    float BoundScale(...);
    float BoundScale(...);
    float BoundScale(...);
    float BoundVerticalShift(...);
    float BoundVerticalShift(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymBattleState {
    // Fields:
    ArGymBattleState arGymBattleStatePrefab;
    PlayerBattlePokemon playerBattlePokemonPrefab;
    EnemyBattlePokemon enemyBattlePokemonPrefab;
    FriendlyBattlePokemon friendlyBattlePokemonPrefab;
    BattleFrameObservableService battleFrameObservableServicePrefab;
    FriendlyBattlePokemonPool friendlyBattlePokemonPoolPrefab;
    BattleCameraController battleCameraControllerPrefab;
    BattleGestureHandler battleGestureHandlerPrefab;
    GymBattleUI gymBattleUIPrefab;
    TapHighlight tapHighlightPrefab;
    GymState gymState;
    ICameraRig cameraRig;
    IInputLayerStack inputLayerStack;
    BattleCameraController battleCameraController;
    IBehaviourService behaviourService;
    IBundleManager bundleManager;
    Generic prefabFactory;
    IArService arService;
    IFriendlyBattlePokemonPool friendlyBattlePokemonPool;
    IBattleTransforms battleTransforms;
    Factory tapHighlightFactory;
    Factory battleUIFactory;
    Music battleMusic;
    float delayBeforeSpawningPlayer;
    float delayBeforeSpawningEnemy;
    float delayBeforeResults;
    cmod_reqd friendlyPokemonAngularOffsets;
    BattleGestureHandler battleGestureHandler;
    IInputLayer inputLayer;
    IReceipt inputReceipt;
    ITapHighlight tapHighlight;
    IBattleFrameObservableService battleFrameObservableService;
    IReceipt frameObservationReceipt;
    GymBattleUI gymBattleUI;
    Generic friendlyBattlePokemon;
    Transform cameraPointOldParent;
    Vector3 cameraPointOldPosition;
    Quaternion cameraPointOldRotation;
    int totalPrestigeChange;
    int totalPokemonDefeated;
    int totalExpAwarded;
    int roundNumber;
    Generic bundleRequests;
    PlayerBattlePokemon <playerBattlePokemon>k__BackingField;
    EnemyBattlePokemon <enemyBattlePokemon>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_FriendlyPokemonCount(...);
    PlayerBattlePokemon get_playerBattlePokemon(...);
    void set_playerBattlePokemon(...);
    EnemyBattlePokemon get_enemyBattlePokemon(...);
    void set_enemyBattlePokemon(...);
    Generic get_FriendlyBattlePokemon(...);
    void EnterState(...);
    void ExitState(...);
    void InstantiateBattlePokemon(...);
    void InitializeBattlePokemon(...);
    void ObserveBattleFrames(...);
    void StartGymBattle(...);
    IEnumerator StartGymBattleWhenReady(...);
    IEnumerator PreloadBundlesForBattle(...);
    IEnumerator PreloadBundleForPokemon(...);
    IEnumerator RequestNextBattleWhenReady(...);
    IEnumerator EndBattleWhenReady(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Gym
class ArGymBattleState {
    // Fields:
    ArGroundPlane arGroundPlanePrefab;
    ArGroundPlane arGroundPlane;
    WebCamProjector webcamProjector;
    WorldMapRenderer worldMapRenderer;
    IBehaviourService behaviourService;
    GymBattleState battleState;
    GymState gymState;
    IBattleTransforms battleTransforms;
    BattleCameraController battleCameraController;
    Generic prefabFactory;
    GameObject mapRoot;
    GameObject groundQuad;
    LayerMask mapCameraMask;
    LayerMask gymCameraMask;
    LayerMask prevMapMask;
    LayerMask prevGymCameraMask;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: 
class ArGroundPlane {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.WebCam
class WebCamProjector {
    // Fields:
    WebCamResolution resolution;
    int fps;
    GameObject surface;
    WebCamTexture webCamTexture;
    Coroutine playCoroutine;
    boolean wasPlaying;
    Matrix4x4 <TextureMatrix>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_IsPlaying(...);
    WebCamResolution get_Resolution(...);
    void set_Resolution(...);
    int get_FPS(...);
    void set_FPS(...);
    Matrix4x4 get_TextureMatrix(...);
    void set_TextureMatrix(...);
    void OnEnable(...);
    void OnDisable(...);
    void SettingsChanged(...);
    void Play(...);
    IEnumerator DoPlay(...);
    void Stop(...);
    void Pause(...);
    Texture2D TakePhoto(...);
    Texture2D ToTexture2D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class WebCamResolution {
    // Fields:
    int value__;
    WebCamResolution Res1980x1080 = 0;
    WebCamResolution Res1280x720 = 1;
    WebCamResolution Res640x360 = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleTransforms {
    // Methods:
    Transform get_Root(...);
    Transform get_PokemonRoot(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleCameraController {
    // Fields:
    GyroTracker gyro;
    IArService arService;
    GymState gymState;
    GameMasterData gameMasterData;
    float tweenSpeed;
    float shakeOffset;
    boolean instant;
    float leanDegrees;
    float leanTime;
    float currentLeanDegrees;
    Coroutine leanCoroutine;
    float damageShakeAmp;
    float dodgeShakeAmp;
    float specialShakeAmp;
    Vector3 targetPokemonOffset;
    CameraShake cameraShake;
    Coroutine animationCoroutine;
    Quaternion gyroRotationBase;
    PokemonSettingsProto targetPokemonSettings;
    Transform <Target>k__BackingField;

    // Methods:
    void .ctor(...);
    Transform get_Target(...);
    void set_Target(...);
    void set_TargetPokemon(...);
    void Start(...);
    void Init(...);
    void OnStart(...);
    void OnStop(...);
    IEnumerator AnimateCamera(...);
    void MoveInstant(...);
    void CameraShake(...);
    void DoCameraLean(...);
    void ResetCameraLean(...);
    IEnumerator CameraLean(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Holoholo.Encounter
class GyroTracker {
    // Fields:
    Gyroscope gyro;
    Quaternion zRot;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_Enabled(...);
    Quaternion get_Rotation(...);
    float get_Heading(...);
    void OnEnable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraShake {
    // Fields:
    float amp;
    float rate;
    float decay;
    float epsilon;
    Coroutine oscillationRoutine;
    BattleCameraController cameraController;

    // Methods:
    void .ctor(...);
    void Oscillate(...);
    void ResetOscillation(...);
    IEnumerator UpdateOscillation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class PlayerBattlePokemon {
    // Fields:
    AnimationCurve introHeightCurve;
    float dodgeDistance;
    float introTime;
    float landAnimOffset;
    DodgeType NextDodgeType;
    Action OnPokemonFaint;

    // Methods:
    void .ctor(...);
    void add_OnPokemonFaint(...);
    void remove_OnPokemonFaint(...);
    void ObserveBattleFrame(...);
    DodgeType GetDodgeType(...);
    IEnumerator PerformDodge(...);
    void TakeDamage(...);
    void Faint(...);
    IEnumerator PerformIntro(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Update(...);
    /*[05]*/ void ObserveBattleFrame(...);
    /*[06]*/ IEnumerator PerformIntro(...);
    /*[07]*/ void TakeDamage(...);
    /*[08]*/ void Faint(...);
    /*[09]*/ DodgeType GetDodgeType(...);
    /*[10]*/ void OnOpponentDodge(...);
    /*[11]*/ IEnumerator PerformDodge(...);
    /*[12]*/ void PlayAnimation(...);
}

// Namespace: 
class DodgeType {
    // Fields:
    int value__;
    DodgeType Left = 0;
    DodgeType Right = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class EnemyBattlePokemon {
    // Fields:
    AnimationCurve introHeightCurve;
    AnimationCurve dodgeHeightCurve;
    float dodgeHeightM;
    float introTime;
    float landAnimOffset;
    float waitTimeBeforeTurn;
    float turnTime;
    float imposingDefenderScale;
    Coroutine retargetCoroutine;

    // Methods:
    void .ctor(...);
    void OnOpponentDodge(...);
    IEnumerator PerformDodge(...);
    IEnumerator WaitForRetarget(...);
    IEnumerator Retarget(...);
    void ObserveBattleFrame(...);
    IEnumerator PerformIntro(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Update(...);
    /*[05]*/ void ObserveBattleFrame(...);
    /*[06]*/ IEnumerator PerformIntro(...);
    /*[07]*/ void TakeDamage(...);
    /*[08]*/ void Faint(...);
    /*[09]*/ DodgeType GetDodgeType(...);
    /*[10]*/ void OnOpponentDodge(...);
    /*[11]*/ IEnumerator PerformDodge(...);
    /*[12]*/ void PlayAnimation(...);
}

// Namespace: Niantic.Holoholo.Battle
class FriendlyBattlePokemon {
    // Fields:
    IFriendlyBattlePokemonPool friendlyPokemonPool;

    // Methods:
    void .ctor(...);
    void ObserveBattleFrame(...);
    IEnumerator PerformDodge(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Update(...);
    /*[05]*/ void ObserveBattleFrame(...);
    /*[06]*/ IEnumerator PerformIntro(...);
    /*[07]*/ void TakeDamage(...);
    /*[08]*/ void Faint(...);
    /*[09]*/ DodgeType GetDodgeType(...);
    /*[10]*/ void OnOpponentDodge(...);
    /*[11]*/ IEnumerator PerformDodge(...);
    /*[12]*/ void PlayAnimation(...);
}

// Namespace: Niantic.Holoholo.Battle
class IFriendlyBattlePokemonPool {
    // Methods:
    boolean get_AllPokemonIdle(...);
    void Init(...);
    String GetPlayerNameAssignedToPokemon(...);
    void AssignPlayers(...);
    void MarkPokemonAvailableForReassignment(...);
    void Clear(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleFrameObservableService {
    // Fields:
    float QUEUE_ACTION_WINDOW_MS = 1000.000000;
    BattleLogObservableService battleLogObservableServicePrefab;
    BattleServerConnectionService battleServerConnectionServicePrefab;
    BattleDamageService battleDamageServicePrefab;
    BattleTimingService battleTimingServicePrefab;
    IBattleLogObservableService battleLogObservableService;
    IBattleServerConnectionService battleServerConnectionService;
    IBattleDamageService battleDamageService;
    IBattleTimingService battleTimingService;
    GameMasterData gameMasterData;
    II18n ii18n;
    IInputEventService inputEventService;
    float friendlyPokemonRosterUpdateFrequency;
    float friendlyPokemonActionUpdateFrequency;
    IReceipt logObservationReceipt;
    long battleEndServerTimeMs;
    BattleFrame battleFrame;
    BattleLog mostRecentLog;
    boolean frameDirty;
    boolean forceUpdate;
    Generic localQueuedAction;
    Generic localQueuedActionPromise;
    PokemonInfo serverActivePokemonUpdate;
    PokemonInfo serverDefenderPokemonUpdate;
    float previousFrameTimeRemaining;
    int maximumVisualizedFriendlyPokemonCount;
    float lastFriendlyPokemonRosterUpdateTime;
    float lastFriendlyPokemonActionUpdateTime;

    // Methods:
    void .ctor(...);
    boolean get_BattleActive(...);
    float get_TimeRemaining(...);
    void Init(...);
    void Update(...);
    Generic StartGymBattle(...);
    Generic NextGymBattle(...);
    boolean TryAttack(...);
    boolean TrySpecialAttack(...);
    boolean TryDodge(...);
    void TrySurrender(...);
    boolean TrySwap(...);
    void ClearData(...);
    void Destroy(...);
    boolean TryAttack(...);
    Generic TryQueueLocalAction(...);
    boolean CanAffordMove(...);
    void SwapResponseReceived(...);
    void ProcessBattleLog(...);
    boolean CheckLogForBattleStatusAndResults(...);
    void CheckLogForFaintedDefenderPokemon(...);
    void CheckLogForFaintedPlayerPokemon(...);
    void AssignLocalPlayerPokemon(...);
    void AssignPlayerPokemon(...);
    void UpdateActivePokemonActions(...);
    void TryExecuteQueuedAction(...);
    void AssignNewPokemonActions(...);
    void OnServerActivePokemonUpdated(...);
    void OnServerDefendingPokemonUpdated(...);
    void ReconcileServerActivePokemon(...);
    void ReconcileServerDefenderPokemon(...);
    void AssignFriendlyPlayers(...);
    void UpdateFriendlyPlayer(...);
    void <StartGymBattle>m__62(...);
    void <TryQueueLocalAction>m__64(...);
    void <TryQueueLocalAction>m__65(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ boolean get_BattleActive(...);
    /*[07]*/ float get_TimeRemaining(...);
    /*[08]*/ Generic StartGymBattle(...);
    /*[09]*/ Generic NextGymBattle(...);
    /*[10]*/ boolean TryAttack(...);
    /*[11]*/ boolean TrySpecialAttack(...);
    /*[12]*/ boolean TryDodge(...);
    /*[13]*/ void TrySurrender(...);
    /*[14]*/ boolean TrySwap(...);
    /*[15]*/ Generic TryQueueLocalAction(...);
    /*[16]*/ void ClearData(...);
    /*[17]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleLogObservableService {
    // Fields:
    Generic verifiedActions;
    Generic predictedActions;
    int localPlayerIndex;

    // Methods:
    void .ctor(...);
    int get_LocalPlayerIndex(...);
    void AddPredictedAction(...);
    boolean RemovePredictedActions(...);
    void AddVerifiedActions(...);
    void Clear(...);
    void Destroy(...);
    void RefreshLog(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ int get_LocalPlayerIndex(...);
    /*[07]*/ void AddPredictedAction(...);
    /*[08]*/ boolean RemovePredictedActions(...);
    /*[09]*/ void AddVerifiedActions(...);
    /*[10]*/ void Clear(...);
    /*[11]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleServerConnectionService {
    // Fields:
    IRpcHandler rpcHandler;
    IBattleLogObservableService battleLogService;
    ILocationProvider locationProvider;
    float serverUpdateInterval;
    boolean useClientSidePrediction;
    long lastUpdateReceivedServerTimeMs;
    long lastUpdateSentLocalTimeMs;
    long lastUpdateReceivedLocalTimeMs;
    Coroutine submitPendingActionsCoroutine;
    Generic queuedActions;
    Generic outstandingAttackSubmissions;
    BattleActionProto lastRetrievedAction;
    String gymId;
    String battleId;
    int playerAttackerIndex;
    Generic ActivePokemonUpdated;
    Generic DefenderPokemonUpdated;
    long <BattleEndServerTimeMs>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_ActivePokemonUpdated(...);
    void remove_ActivePokemonUpdated(...);
    void add_DefenderPokemonUpdated(...);
    void remove_DefenderPokemonUpdated(...);
    long get_CurrentServerTimeMs(...);
    long get_CurrentLocalTimeMs(...);
    long get_BattleEndServerTimeMs(...);
    void set_BattleEndServerTimeMs(...);
    void Awake(...);
    Generic StartGymBattle(...);
    void SubmitBattleAction(...);
    void RequestServerUpdate(...);
    void ForceRequestServerUpdate(...);
    void Destroy(...);
    void RequestServerUpdate(...);
    IEnumerator SubmitPendingActions(...);
    AttackGymProto BuildAttackProtoFromPendingActions(...);
    void AttackGymCallback(...);
    void Reset(...);
    void <StartGymBattle>m__6A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_ActivePokemonUpdated(...);
    /*[05]*/ void remove_ActivePokemonUpdated(...);
    /*[06]*/ void add_DefenderPokemonUpdated(...);
    /*[07]*/ void remove_DefenderPokemonUpdated(...);
    /*[08]*/ long get_BattleEndServerTimeMs(...);
    /*[09]*/ long get_CurrentServerTimeMs(...);
    /*[10]*/ Generic StartGymBattle(...);
    /*[11]*/ void SubmitBattleAction(...);
    /*[12]*/ void RequestServerUpdate(...);
    /*[13]*/ void ForceRequestServerUpdate(...);
    /*[14]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleLogObservableService {
    // Methods:
    int get_LocalPlayerIndex(...);
    void AddPredictedAction(...);
    boolean RemovePredictedActions(...);
    void AddVerifiedActions(...);
    void Clear(...);
    void Destroy(...);
}

// Namespace: Holoholo.Rpc
class BattleActionProto {
    // Fields:
    int TypeFieldNumber = 1;
    int ActionStartMsFieldNumber = 2;
    int DurationMsFieldNumber = 3;
    int EnergyDeltaFieldNumber = 5;
    int AttackerIndexFieldNumber = 6;
    int TargetIndexFieldNumber = 7;
    int ActivePokemonIdFieldNumber = 8;
    int JoinedPlayerFieldNumber = 9;
    int BattleResultsFieldNumber = 10;
    int DamageWindowStartMsFieldNumber = 11;
    int DamageWindowEndMsFieldNumber = 12;
    int QuitPlayerFieldNumber = 13;
    int TargetPokemonIdFieldNumber = 14;
    Generic _parser;
    ActionType type_;
    long actionStartMs_;
    int durationMs_;
    int energyDelta_;
    int attackerIndex_;
    int targetIndex_;
    ulong activePokemonId_;
    BattleParticipantProto joinedPlayer_;
    BattleResultsProto battleResults_;
    long damageWindowStartMs_;
    long damageWindowEndMs_;
    BattleParticipantProto quitPlayer_;
    ulong targetPokemonId_;
    Generic <>f__am$cacheE;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BattleActionProto Clone(...);
    ActionType get_Type(...);
    void set_Type(...);
    long get_ActionStartMs(...);
    void set_ActionStartMs(...);
    int get_DurationMs(...);
    void set_DurationMs(...);
    int get_EnergyDelta(...);
    void set_EnergyDelta(...);
    int get_AttackerIndex(...);
    void set_AttackerIndex(...);
    int get_TargetIndex(...);
    void set_TargetIndex(...);
    ulong get_ActivePokemonId(...);
    void set_ActivePokemonId(...);
    BattleParticipantProto get_JoinedPlayer(...);
    void set_JoinedPlayer(...);
    BattleResultsProto get_BattleResults(...);
    void set_BattleResults(...);
    long get_DamageWindowStartMs(...);
    void set_DamageWindowStartMs(...);
    long get_DamageWindowEndMs(...);
    void set_DamageWindowEndMs(...);
    BattleParticipantProto get_QuitPlayer(...);
    void set_QuitPlayer(...);
    ulong get_TargetPokemonId(...);
    void set_TargetPokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BattleActionProto <_parser>m__68(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BattleActionProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class ActionType {
    // Fields:
    int value__;
    ActionType UNSET = 0;
    ActionType ATTACK = 1;
    ActionType DODGE = 2;
    ActionType SPECIAL_ATTACK = 3;
    ActionType SWAP_POKEMON = 4;
    ActionType FAINT = 5;
    ActionType PLAYER_JOIN = 6;
    ActionType PLAYER_QUIT = 7;
    ActionType VICTORY = 8;
    ActionType DEFEAT = 9;
    ActionType TIMED_OUT = 10;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class BattleParticipantProto {
    // Fields:
    int ActivePokemonFieldNumber = 1;
    int TrainerPublicProfileFieldNumber = 2;
    int ReservePokemonFieldNumber = 3;
    int DefeatedPokemonFieldNumber = 4;
    Generic _parser;
    PokemonInfo activePokemon_;
    PlayerPublicProfileProto trainerPublicProfile_;
    Generic _repeated_reservePokemon_codec;
    Generic reservePokemon_;
    Generic _repeated_defeatedPokemon_codec;
    Generic defeatedPokemon_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BattleParticipantProto Clone(...);
    PokemonInfo get_ActivePokemon(...);
    void set_ActivePokemon(...);
    PlayerPublicProfileProto get_TrainerPublicProfile(...);
    void set_TrainerPublicProfile(...);
    Generic get_ReservePokemon(...);
    Generic get_DefeatedPokemon(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BattleParticipantProto <_parser>m__196(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BattleParticipantProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonInfo {
    // Fields:
    int PokemonFieldNumber = 1;
    int CurrentHealthFieldNumber = 2;
    int CurrentEnergyFieldNumber = 3;
    Generic _parser;
    PokemonProto pokemon_;
    int currentHealth_;
    int currentEnergy_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonInfo Clone(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    int get_CurrentHealth(...);
    void set_CurrentHealth(...);
    int get_CurrentEnergy(...);
    void set_CurrentEnergy(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonInfo <_parser>m__197(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonInfo Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerPublicProfileProto {
    // Fields:
    int NameFieldNumber = 1;
    int LevelFieldNumber = 2;
    int AvatarFieldNumber = 3;
    Generic _parser;
    String name_;
    int level_;
    PlayerAvatarProto avatar_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerPublicProfileProto Clone(...);
    String get_Name(...);
    void set_Name(...);
    int get_Level(...);
    void set_Level(...);
    PlayerAvatarProto get_Avatar(...);
    void set_Avatar(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerPublicProfileProto <_parser>m__1A9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerPublicProfileProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class BattleResultsProto {
    // Fields:
    int GymStateFieldNumber = 1;
    int AttackersFieldNumber = 2;
    int PlayerXpAwardedFieldNumber = 3;
    int NextDefenderPokemonIdFieldNumber = 4;
    int GymPointsDeltaFieldNumber = 5;
    Generic _parser;
    GymStateProto gymState_;
    Generic _repeated_attackers_codec;
    Generic attackers_;
    Generic _repeated_playerXpAwarded_codec;
    Generic playerXpAwarded_;
    long nextDefenderPokemonId_;
    int gymPointsDelta_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BattleResultsProto Clone(...);
    GymStateProto get_GymState(...);
    void set_GymState(...);
    Generic get_Attackers(...);
    Generic get_PlayerXpAwarded(...);
    long get_NextDefenderPokemonId(...);
    void set_NextDefenderPokemonId(...);
    int get_GymPointsDelta(...);
    void set_GymPointsDelta(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BattleResultsProto <_parser>m__198(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BattleResultsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GymStateProto {
    // Fields:
    int FortMapDataFieldNumber = 1;
    int GymMembershipFieldNumber = 2;
    Generic _parser;
    PokemonFortProto fortMapData_;
    Generic _repeated_gymMembership_codec;
    Generic gymMembership_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GymStateProto Clone(...);
    PokemonFortProto get_FortMapData(...);
    void set_FortMapData(...);
    Generic get_GymMembership(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GymStateProto <_parser>m__190(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GymStateProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonFortProto {
    // Fields:
    int FortIdFieldNumber = 1;
    int LastModifiedMsFieldNumber = 2;
    int LatitudeFieldNumber = 3;
    int LongitudeFieldNumber = 4;
    int TeamFieldNumber = 5;
    int GuardPokemonIdFieldNumber = 6;
    int GuardPokemonLevelFieldNumber = 7;
    int EnabledFieldNumber = 8;
    int FortTypeFieldNumber = 9;
    int GymPointsFieldNumber = 10;
    int IsInBattleFieldNumber = 11;
    int ActiveFortModifierFieldNumber = 12;
    int ActivePokemonFieldNumber = 13;
    int CooldownCompleteMsFieldNumber = 14;
    int SponsorFieldNumber = 15;
    int RenderingTypeFieldNumber = 16;
    Generic _parser;
    String fortId_;
    long lastModifiedMs_;
    double latitude_;
    double longitude_;
    int team_;
    int guardPokemonId_;
    int guardPokemonLevel_;
    boolean enabled_;
    FortType fortType_;
    long gymPoints_;
    boolean isInBattle_;
    Generic _repeated_activeFortModifier_codec;
    Generic activeFortModifier_;
    MapPokemonProto activePokemon_;
    long cooldownCompleteMs_;
    Sponsor sponsor_;
    RenderingType renderingType_;
    Generic <>f__am$cache12;
    Generic <>f__am$cache13;
    Generic <>f__am$cache14;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonFortProto Clone(...);
    String get_FortId(...);
    void set_FortId(...);
    long get_LastModifiedMs(...);
    void set_LastModifiedMs(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    int get_Team(...);
    void set_Team(...);
    int get_GuardPokemonId(...);
    void set_GuardPokemonId(...);
    int get_GuardPokemonLevel(...);
    void set_GuardPokemonLevel(...);
    boolean get_Enabled(...);
    void set_Enabled(...);
    FortType get_FortType(...);
    void set_FortType(...);
    long get_GymPoints(...);
    void set_GymPoints(...);
    boolean get_IsInBattle(...);
    void set_IsInBattle(...);
    Generic get_ActiveFortModifier(...);
    MapPokemonProto get_ActivePokemon(...);
    void set_ActivePokemon(...);
    long get_CooldownCompleteMs(...);
    void set_CooldownCompleteMs(...);
    Sponsor get_Sponsor(...);
    void set_Sponsor(...);
    RenderingType get_RenderingType(...);
    void set_RenderingType(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonFortProto <_parser>m__7F(...);
    int <_repeated_activeFortModifier_codec>m__80(...);
    Item <_repeated_activeFortModifier_codec>m__81(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonFortProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortType {
    // Fields:
    int value__;
    FortType GYM = 0;
    FortType CHECKPOINT = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class MapPokemonProto {
    // Fields:
    int SpawnpointIdFieldNumber = 1;
    int EncounterIdFieldNumber = 2;
    int PokedexTypeIdFieldNumber = 3;
    int ExpirationTimeMsFieldNumber = 4;
    int LatitudeFieldNumber = 5;
    int LongitudeFieldNumber = 6;
    Generic _parser;
    String spawnpointId_;
    ulong encounterId_;
    int pokedexTypeId_;
    long expirationTimeMs_;
    double latitude_;
    double longitude_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MapPokemonProto Clone(...);
    String get_SpawnpointId(...);
    void set_SpawnpointId(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    int get_PokedexTypeId(...);
    void set_PokedexTypeId(...);
    long get_ExpirationTimeMs(...);
    void set_ExpirationTimeMs(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MapPokemonProto <_parser>m__1B9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MapPokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Sponsor {
    // Fields:
    int value__;
    Sponsor UNSET = 0;
    Sponsor MCDONALDS = 1;
    Sponsor POKEMON_STORE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class RenderingType {
    // Fields:
    int value__;
    RenderingType DEFAULT = 0;
    RenderingType INTERNAL_TEST = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class AttackGymProto {
    // Fields:
    int GymIdFieldNumber = 1;
    int BattleIdFieldNumber = 2;
    int AttackerActionsFieldNumber = 3;
    int LastRetrievedActionFieldNumber = 4;
    int PlayerLatDegreesFieldNumber = 5;
    int PlayerLngDegreesFieldNumber = 6;
    Generic _parser;
    String gymId_;
    String battleId_;
    Generic _repeated_attackerActions_codec;
    Generic attackerActions_;
    BattleActionProto lastRetrievedAction_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AttackGymProto Clone(...);
    String get_GymId(...);
    void set_GymId(...);
    String get_BattleId(...);
    void set_BattleId(...);
    Generic get_AttackerActions(...);
    BattleActionProto get_LastRetrievedAction(...);
    void set_LastRetrievedAction(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AttackGymProto <_parser>m__193(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AttackGymProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleDamageService {
    // Fields:
    GameMasterData gameMasterData;

    // Methods:
    void .ctor(...);
    int CalculateDamage(...);
    void Destroy(...);
    float GetSameTypeAttackMultiplier(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ int CalculateDamage(...);
    /*[05]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleTimingService {
    // Fields:
    IBattleServerConnectionService serverConnectionService;

    // Methods:
    void .ctor(...);
    float TimeUntilActionBegins(...);
    float TimeUntilAttackLands(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float TimeUntilActionBegins(...);
    /*[05]*/ float TimeUntilAttackLands(...);
    /*[06]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleServerConnectionService {
    // Methods:
    void add_ActivePokemonUpdated(...);
    void remove_ActivePokemonUpdated(...);
    void add_DefenderPokemonUpdated(...);
    void remove_DefenderPokemonUpdated(...);
    long get_BattleEndServerTimeMs(...);
    long get_CurrentServerTimeMs(...);
    Generic StartGymBattle(...);
    void SubmitBattleAction(...);
    void RequestServerUpdate(...);
    void ForceRequestServerUpdate(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleDamageService {
    // Methods:
    int CalculateDamage(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleTimingService {
    // Methods:
    float TimeUntilActionBegins(...);
    float TimeUntilAttackLands(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleFrame {
    // Fields:
    PlayerFrame LocalPlayer;
    Generic FriendlyPlayers;
    Generic VisualizedFriendlyPlayers;
    PokemonFrame EnemyPokemon;
    long ServerTimeMs;
    BattleStatus BattleStatus;
    BattleResultsProto BattleResults;
    int ExpAwarded;
    GameMasterData gameMaster;

    // Methods:
    void .ctor(...);
    boolean get_BattleComplete(...);
    int get_PlayerCount(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PlayerFrame {
    // Fields:
    long SWAP_DURATION_MS = 1000;
    Generic Pokemon;
    int ActivePokemonIndex;
    long lastSwapMs;
    int <PlayerIndex>k__BackingField;
    String <Name>k__BackingField;

    // Methods:
    void .ctor(...);
    PokemonFrame get_ActivePokemon(...);
    int get_PlayerIndex(...);
    void set_PlayerIndex(...);
    String get_Name(...);
    void set_Name(...);
    boolean get_IsSwapping(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokemonFrame {
    // Fields:
    BattleFrame parentFrame;
    int health;
    int energy;
    FrameAction QueuedAction;
    boolean QueuedActionActive;
    PokemonProto <Pokemon>k__BackingField;

    // Methods:
    void .ctor(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    int get_Health(...);
    void set_Health(...);
    int get_Energy(...);
    void set_Energy(...);
    boolean get_IsDodging(...);
    FrameAction get_CurrentAction(...);
    void Faint(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FrameAction {
    // Fields:
    ActionType Type;
    int EnergyDelta;
    long StartTimeMs;
    long DurationMs;
    PokemonFrame Target;
    AttackOutcome AttackOutcome;
    long DamageWindowStartMs;
    long DamageWindowEndMs;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ActionType {
    // Fields:
    int value__;
    ActionType Attack = 0;
    ActionType SpecialAttack = 1;
    ActionType Dodge = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class AttackOutcome {
    // Fields:
    int value__;
    AttackOutcome Unset = 0;
    AttackOutcome NotVeryEffective = 1;
    AttackOutcome Normal = 2;
    AttackOutcome SuperEffective = 3;
    AttackOutcome Missed = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleStatus {
    // Fields:
    int value__;
    BattleStatus Unset = 0;
    BattleStatus Active = 1;
    BattleStatus Victory = 2;
    BattleStatus Defeat = 3;
    BattleStatus TimedOut = 4;
    BattleStatus Quit = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleLog {
    // Fields:
    Generic actions;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    int get_Count(...);
    int GetPlayerIndex(...);
    BattleActionProto get_Item(...);
    void Set(...);
    Generic GetEnumerator(...);
    String ToString(...);
    int <Set>m__69(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ Generic GetEnumerator(...);
}

// Namespace: Niantic.Holoholo.Battle
class FriendlyBattlePokemonPool {
    // Fields:
    Generic availablePokemon;
    Generic activePokemon;
    Generic pokemonAssignments;

    // Methods:
    void .ctor(...);
    int get_ActiveAssignmentCount(...);
    boolean get_AllPokemonIdle(...);
    void Init(...);
    FriendlyBattlePokemon GetPokemonAssignedToPlayerName(...);
    String GetPlayerNameAssignedToPokemon(...);
    void AssignPlayers(...);
    void AssignPlayer(...);
    void MarkPokemonAvailableForReassignment(...);
    void Clear(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_AllPokemonIdle(...);
    /*[05]*/ void Init(...);
    /*[06]*/ String GetPlayerNameAssignedToPokemon(...);
    /*[07]*/ void AssignPlayers(...);
    /*[08]*/ void MarkPokemonAvailableForReassignment(...);
    /*[09]*/ void Clear(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleGestureHandler {
    // Fields:
    IBattleFrameObservableService battleFrameObservableService;
    IBehaviourService behaviourService;
    BattleCameraController battleCamera;
    float specialAttackChargeHoldTime;
    TapGesture tapGesture;
    BattleFlickGesture horizontalFlickGesture;
    BattleFlickGesture verticalFlickGesture;
    LongPressGesture longPressGesture;
    ReleaseGesture releaseGesture;
    PlayerBattlePokemon playerBattlePokemon;
    Coroutine chargeSpecialAttackCoroutine;
    Action OnSuccessfulAttack;
    Generic OnDodge;

    // Methods:
    void .ctor(...);
    void add_OnSuccessfulAttack(...);
    void remove_OnSuccessfulAttack(...);
    void add_OnDodge(...);
    void remove_OnDodge(...);
    TapGesture get_TapGesture(...);
    BattleFlickGesture get_HorizontalFlickGesture(...);
    BattleFlickGesture get_VerticalFlickGesture(...);
    LongPressGesture get_LongPressGesture(...);
    ReleaseGesture get_ReleaseGesture(...);
    float get_SpecialAttackCharge(...);
    void set_SpecialAttackCharge(...);
    PlayerBattlePokemon get_PlayerBattlePokemon(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnTapped(...);
    void OnFlicked(...);
    void OnLongPress(...);
    void OnRelease(...);
    IEnumerator ChargeSpecialAttack(...);
    void <OnTapped>m__66(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
}

// Namespace: Niantic.Holoholo.Battle
class IBattleFrameObservableService {
    // Methods:
    boolean get_BattleActive(...);
    float get_TimeRemaining(...);
    Generic StartGymBattle(...);
    Generic NextGymBattle(...);
    boolean TryAttack(...);
    boolean TrySpecialAttack(...);
    boolean TryDodge(...);
    void TrySurrender(...);
    boolean TrySwap(...);
    Generic TryQueueLocalAction(...);
    void ClearData(...);
    void Destroy(...);
}

// Namespace: TouchScript.Gestures
class TapGesture {
    // Fields:
    String TAP_MESSAGE = "OnTap";
    Generic tappedInvoker;
    int numberOfTapsRequired;
    float timeLimit;
    float distanceLimit;
    float distanceLimitInPixelsSquared;
    boolean isActive;
    int tapsDone;
    Vector2 startPosition;
    Vector2 totalMovement;

    // Methods:
    void .ctor(...);
    void add_Tapped(...);
    void remove_Tapped(...);
    int get_NumberOfTapsRequired(...);
    void set_NumberOfTapsRequired(...);
    float get_TimeLimit(...);
    void set_TimeLimit(...);
    float get_DistanceLimit(...);
    void set_DistanceLimit(...);
    void OnEnable(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void onRecognized(...);
    void reset(...);
    boolean shouldCacheTouchPosition(...);
    IEnumerator wait(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleFlickGesture {
    // Fields:
    String FLICK_MESSAGE = "OnFlick";
    Generic flickedInvoker;
    GestureDirection direction;
    float minDistance;
    Vector2 movementBuffer;
    boolean isActive;
    float sqrMovementThreshold;
    Vector2 <ScreenFlickVector>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_Flicked(...);
    void remove_Flicked(...);
    Vector2 get_ScreenFlickVector(...);
    void set_ScreenFlickVector(...);
    float get_MinDistance(...);
    void set_MinDistance(...);
    void Start(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void onRecognized(...);
    void reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: TouchScript.Gestures
class LongPressGesture {
    // Fields:
    String LONG_PRESS_MESSAGE = "OnLongPress";
    Generic longPressedInvoker;
    float timeToPress;
    float distanceLimit;
    float distanceLimitInPixelsSquared;
    Vector2 totalMovement;

    // Methods:
    void .ctor(...);
    void add_LongPressed(...);
    void remove_LongPressed(...);
    float get_TimeToPress(...);
    void set_TimeToPress(...);
    float get_DistanceLimit(...);
    void set_DistanceLimit(...);
    void OnEnable(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void onRecognized(...);
    void reset(...);
    IEnumerator wait(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: TouchScript.Gestures
class ReleaseGesture {
    // Fields:
    String RELEASE_MESSAGE = "OnRelease";
    Generic releasedInvoker;
    boolean ignoreChildren;

    // Methods:
    void .ctor(...);
    void add_Released(...);
    void remove_Released(...);
    boolean get_IgnoreChildren(...);
    void set_IgnoreChildren(...);
    boolean ShouldReceiveTouch(...);
    boolean CanPreventGesture(...);
    boolean CanBePreventedByGesture(...);
    void touchEnded(...);
    void onRecognized(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: Niantic.Holoholo.Battle
class GymBattleUI {
    // Fields:
    SwapButton swapButtonPrefab;
    NubEnergy energyNubPrefab;
    BattleNameplate playerNameplate;
    BattleNameplate enemyNameplate;
    BattleCountdown battleCountdown;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Battle
class SwapButton {
    // Fields:
    PokemonProto pokemon;
    Image pokemonIcon;
    Image healthBar;
    Text cpAmount;
    Text pkmnName;
    GameObject faintedOverlay;
    GameObject activePokemonBackground;
    Color highHealthColor;
    Color mediumHealthColor;
    Color lowHealthColor;
    Color cpColor;
    Color cpFaintedColor;
    IBattleFrameObservableService battleFrameService;
    Button button;
    SwapUI swapUi;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void Init(...);
    void Refresh(...);
    void Swap(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class SwapUI {
    // Fields:
    String OpenBool = "Open";
    IBehaviourService behaviourService;
    BattleGestureHandler battleGestureHandler;
    IBattleFrameObservableService battleFrameService;
    Animator anim;
    Transform gridContent;
    GameObject openSwapButton;
    IReceipt frameObservableReceipt;
    BattleFrame currentFrame;
    Generic swapButtons;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void OnFlick(...);
    void HideGesture(...);
    void Init(...);
    void Clear(...);
    void Open(...);
    void Close(...);
    void ProcessBattleFrame(...);
    void SetEnabled(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class NubEnergy {
    // Fields:
    String PULSE = "isActive";
    ProgressBar progressBar;
    Animator animator;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void SetFill(...);
    void SetFillMax(...);
    void SetEmpty(...);
    void RefreshPulse(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleNameplate {
    // Fields:
    PokemonHealthBar healthBar;
    NubbedEnergyBar energyBar;
    Text nameLabel;
    Text healthLabel;
    Text cpLabel;
    BattleToast toast;
    Image dodgeCooldownIndicator;
    float dodgeIndicatorFlashTime;
    AnimationCurve dodgeIndicatorFlashCurve;
    CanvasGroup nameplateCanvasGroup;
    Color dodgeIndicatorDefaultColor;
    Color dodgeIndicatorSuccessColor;
    Color dodgeIndicatorRejectionColor;
    Coroutine dodgeIndicatorColorRoutine;
    Coroutine dodgeIndicatorFillRoutine;
    BattleGestureHandler gestureHandler;
    BattlePokemon battlePokemon;
    int maxHealth;

    // Methods:
    void .ctor(...);
    void Init(...);
    void OnDestroy(...);
    void OnPokemonChange(...);
    void OnHealthChange(...);
    void OnDodge(...);
    IEnumerator RefillDodgeCooldownIndicator(...);
    void SetHealth(...);
    void OnEnergyChange(...);
    void OnToastEvent(...);
    void OnDodgeAttempt(...);
    IEnumerator FlashDodgeIndicatorColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokemonHealthBar {
    // Fields:
    Image immediateBar;
    Image delayBar;
    GameObject flashBar;
    float delayTime;
    float lerpTime;
    float flashTime;
    int flashCount;
    Color fullColor;
    Color warningColor;
    Color dangerColor;
    float warningThreshold;
    float dangerThreshold;
    float currValue;
    Coroutine lerpRoutine;
    HealthBarState state;

    // Methods:
    void .ctor(...);
    void SetFill(...);
    IEnumerator FlashBar(...);
    IEnumerator WaitAndLerp(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class HealthBarState {
    // Fields:
    int value__;
    HealthBarState IDLE = 0;
    HealthBarState DELAY = 1;
    HealthBarState LERP = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class NubbedEnergyBar {
    // Fields:
    IBehaviourService behaviourService;
    cmod_reqd nubs;
    int energyPerNub;

    // Methods:
    void .ctor(...);
    void Init(...);
    void SetEnergy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleToast {
    // Fields:
    float SPEED_SCALE_BASE = 1.100000;
    Text text;
    Animator anim;
    Coroutine playingCoroutine;
    Generic queuedToasts;

    // Methods:
    void .ctor(...);
    void Play(...);
    IEnumerator PlayAllQueuedToasts(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattlePokemon {
    // Fields:
    float ALIGN_VFX_DURATION = 0.150000;
    EnumScaleMode scaleMode;
    AnimationCurve pokemonScaleCurve;
    float boundingScale;
    SoundController soundController;
    BlobShadow shadow;
    GameMasterData gameMasterData;
    IBattleTransforms battleTransforms;
    BattleCameraController battleCameraController;
    IBattleFrameObservableService battleFrameObservableService;
    IBattleTimingService battleTimingService;
    IPokemonBoundsService pokemonBoundsService;
    II18n i18n;
    float quickAttackNormalizedStartTime;
    HoloCharacter character;
    float dodgeLandAnimationStartPoint;
    float dodgeAnimationDuration;
    Color takeDamageFlashColor;
    float takeDamageFlashDuration;
    StateData stateData;
    Generic sequence;
    SequenceData sequenceData;
    int sequenceIndex;
    float sequenceWait;
    int currentAttack;
    IReceipt battleFrameObservationReceipt;
    FrameAction currentFrameAction;
    FrameAction currentQueuedAction;
    boolean initialHealthSet;
    Coroutine dodgeCoroutine;
    Coroutine changePokemonCoroutine;
    boolean attackStatusNotified;
    int energy;
    int health;
    Generic OnPokemonChange;
    Generic OnHealthChange;
    Generic OnEnergyChange;
    Generic OnToastEvent;
    Generic OnDodge;
    Generic AttackQueued;
    Action AttackDodged;
    AttackAffector <AttackAffector>k__BackingField;
    boolean <Alive>k__BackingField;
    BattlePokemon <Opponent>k__BackingField;
    PokemonProto <PokemonProto>k__BackingField;
    PokemonState <State>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnPokemonChange(...);
    void remove_OnPokemonChange(...);
    void add_OnHealthChange(...);
    void remove_OnHealthChange(...);
    void add_OnEnergyChange(...);
    void remove_OnEnergyChange(...);
    void add_OnToastEvent(...);
    void remove_OnToastEvent(...);
    void add_OnDodge(...);
    void remove_OnDodge(...);
    void add_AttackQueued(...);
    void remove_AttackQueued(...);
    void add_AttackDodged(...);
    void remove_AttackDodged(...);
    void PostInject(...);
    AttackAffector get_AttackAffector(...);
    void set_AttackAffector(...);
    boolean get_Alive(...);
    void set_Alive(...);
    int get_Energy(...);
    void set_Energy(...);
    int get_Health(...);
    void set_Health(...);
    boolean get_IsIdle(...);
    boolean get_IsOutOfCombat(...);
    int get_MaxHealth(...);
    int get_MaxEnergy(...);
    int get_SpecialAttackEnergyDelta(...);
    BattlePokemon get_Opponent(...);
    void set_Opponent(...);
    PokemonProto get_PokemonProto(...);
    void set_PokemonProto(...);
    PokemonState get_State(...);
    void set_State(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void Update(...);
    void Init(...);
    void ResetState(...);
    void OnAssetLoaded(...);
    IEnumerator InitShadow(...);
    boolean IsSequenceComplete(...);
    void ObserveBattleFrame(...);
    void ProcessPokemonFrame(...);
    void SignalAttack(...);
    IEnumerator PerformIntro(...);
    void ChangeState(...);
    void InitState(...);
    boolean SeqToSysMessage(...);
    boolean SeqComplete(...);
    boolean SeqSynch(...);
    void Attack(...);
    void SpecialAttack(...);
    void TakeDamage(...);
    void Faint(...);
    void ReturnToPokeball(...);
    void Dodge(...);
    DodgeType GetDodgeType(...);
    void OnOpponentDodge(...);
    IEnumerator PerformDodge(...);
    void ChangePokemon(...);
    IEnumerator PerformChangePokemon(...);
    void PlaySequence(...);
    void UpdateSequence(...);
    void PlayAttackAnimation(...);
    void PlayAnimation(...);
    void SetAttackMode(...);
    AttackAffector GetAffector(...);
    BattlePokemon GetPokemon(...);
    GameObject GetActor(...);
    void CreateSound(...);
    void CreateParticlePokemon(...);
    void CreateParticlePokemon(...);
    void CreateParticle(...);
    Vector3 GetCharTrans(...);
    Vector3 GetCharTrans(...);
    void AlignVFXFaceToFace(...);
    Transform GetNamedTrans(...);
    Transform GetHeadTrans(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Update(...);
    /*[05]*/ void ObserveBattleFrame(...);
    /*[06]*/ IEnumerator PerformIntro(...);
    /*[07]*/ void TakeDamage(...);
    /*[08]*/ void Faint(...);
    /*[09]*/ DodgeType GetDodgeType(...);
    /*[10]*/ void OnOpponentDodge(...);
    /*[11]*/ void PlayAnimation(...);
}

// Namespace: 
class SoundController {
    // Fields:
    AudioSource defaultAudioSource;

    // Methods:
    void .ctor(...);
    void Start(...);
    void PlayPokemonVoice(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BlobShadow {
    // Fields:
    float GROUND_HEIGHT_BUFFER = 0.001000;
    float BALL_TARGET_SCALE = 0.025000;
    float BALL_DROP_SIZE_MULTIPLIER = 0.200000;
    float BLOB_ALPHA_BASE = 0.400000;
    float groundHeight;
    float scaleMultiplier;
    float scaleJumpSizeMultiplier;
    float scaleJumpTintMultiplier;
    Renderer meshRenderer;
    float targetRadius;
    float targetScale;
    boolean ballDropMode;
    Transform shadowTarget;
    Renderer myRenderer;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Awake(...);
    void LateUpdate(...);
    void SetPokemonRadius(...);
    void Enable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class StateData {
    // Fields:
    Stage stage;
    boolean init;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Stage {
    // Fields:
    int value__;
    Stage Wait = 0;
    Stage Present = 1;
    Stage Attack = 2;
    Stage Faint = 3;
    Stage Outro = 4;
    Stage Ding = 5;
    Stage Returning = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class SequenceData {
    // Fields:
    BattlePokemon attacker;
    BattlePokemon defender;
    int atkMove;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class AttackAffector {
    // Fields:
    float SQUISH_TIME_DIVIDEND = 0.120000;
    float SCALE_VERT_EPSILON = 0.000100;
    float SCALE_VERT_POWER = 0.330000;
    float COLOR_CHANGE_LERP_TIME = 1.000000;
    float scaleTo;
    float scaleRate;
    float squishDuration;
    float squishTime;
    GameObject alignVFX;
    Vector3 alignVFXCharOffs;
    Quaternion alignVFXCharRot;
    GameObject alignVFXTrg;
    float alignVFXDuration;
    GameObject faintVFXObject;
    GameObject faintBallObject;
    float faintVFXTime;
    HoloCharacter character;
    Coroutine silhouetteRoutine;
    FxPriority fxPriorityCurrent;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Reset(...);
    void Reset(...);
    void Update(...);
    void UpdateScale(...);
    void ScaleTo(...);
    void SinkTo(...);
    void Squish(...);
    void Spin(...);
    void HideActor(...);
    void HideBG(...);
    void Silhouette(...);
    void Silhouette(...);
    void ScaleCharacterTo(...);
    void SinkCharacterTo(...);
    void SquishCharacter(...);
    void SpinCharacter(...);
    void HideCharacter(...);
    void HideBackground(...);
    IEnumerator fogColorUpdate(...);
    FxPriority get_FxPriorityCurrent(...);
    void set_FxPriorityCurrent(...);
    void SilhouetteCharacter(...);
    IEnumerator CharacterColorUpdate(...);
    void ResetSilhouetteRoutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FxPriority {
    // Fields:
    int value__;
    FxPriority Neutral = 0;
    FxPriority Tap = 1;
    FxPriority Sequence = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class PokemonState {
    // Fields:
    int value__;
    PokemonState Idle = 0;
    PokemonState Dodge = 1;
    PokemonState Attacking = 2;
    PokemonState Damage = 3;
    PokemonState Sequence = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleCountdown {
    // Fields:
    String USERNAME_SHOW_TRIGGER = "ShowUsernames";
    II18n i18n;
    IColorUtil colorUtil;
    GymState gymState;
    Text wordsLabel;
    Image goImage;
    Text localUserLabel;
    Text enemyUserLabel;
    CanvasGroup alphaGroup;
    Animator usernameAnimator;
    float wordsAnimTime;
    AnimationCurve wordsAlphaCurve;
    AnimationCurve wordsSizeCurve;
    float goOutTime;
    AnimationCurve goAlphaInCurve;
    AnimationCurve goAlphaOutCurve;
    AnimationCurve goSizeInCurve;
    AnimationCurve goSizeOutCurve;
    Promise countdownPromise;
    boolean goGoing;

    // Methods:
    void .ctor(...);
    IPromise ShowVictory(...);
    IPromise ShowRoundDetails(...);
    IEnumerator WordFadeInOut(...);
    void ShowGo(...);
    IEnumerator GoIn(...);
    void HideGo(...);
    IEnumerator GoOut(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IColorUtil {
    // Methods:
    TeamColors get_DefaultTeamColors(...);
}

// Namespace: Niantic.Holoholo.UI
class TeamColors {
    // Fields:
    Color neutralColor;
    Color blueColor;
    Color redColor;
    Color yellowColor;

    // Methods:
    void .ctor(...);
    Color GetTeamColor(...);
    Color GetTeamColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class Promise {
    // Fields:
    Action thenFuncs;
    Generic errorFuncs;
    Action finallyFuncs;
    boolean completeCalled;
    boolean errorCalled;
    String errorValue;

    // Methods:
    void .ctor(...);
    boolean get_Completed(...);
    void Complete(...);
    void Error(...);
    IPromise Error(...);
    IPromise Then(...);
    IPromise Finally(...);
    CustomYieldInstruction get_Yield(...);
    boolean <get_Yield>m__EA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise Then(...);
    /*[05]*/ IPromise Error(...);
    /*[06]*/ IPromise Finally(...);
    /*[07]*/ CustomYieldInstruction get_Yield(...);
}

// Namespace: Niantic.Holoholo.Battle
class TapHighlight {
    // Fields:
    Color tappedColor;
    float tappedDuration;
    cmod_reqd longPressedColors;
    float longPressedPulseFrequency;
    float longPressedPulseAmplitude;
    Color longReleasedColor;
    float longReleasedDuration;
    boolean isLongPressed;
    Coroutine pulseRoutine;
    IBehaviourService behaviourService;
    BattleGestureHandler battleGestureHandler;
    IBattleFrameObservableService battleFrameService;
    PlayerBattlePokemon playerPokemon;

    // Methods:
    void .ctor(...);
    void PostInject(...);
    void OnDestroy(...);
    void Tapped(...);
    void LongPressed(...);
    void PulseCharacterColor(...);
    void Released(...);
    void Highlight(...);
    IEnumerator HighLightPulse(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Highlight(...);
    /*[05]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Assets
class IBundleManager {
    // Methods:
    String PokemonAssetName(...);
    IBundleRequest RequestAssetBundle(...);
    void CleanAssetBundleCache(...);
    void ClearDiskCache(...);
}

// Namespace: Niantic.Holoholo.Assets
class IBundleRequest {
    // Methods:
    String get_Name(...);
    boolean get_IsDone(...);
    AssetBundle get_AssetBundle(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ITapHighlight Create(...);
    /*[05]*/ ITapHighlight Create(...);
}

// Namespace: Niantic.Holoholo.Battle
class ITapHighlight {
    // Methods:
    void Highlight(...);
    void Destroy(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GymBattleUI Create(...);
    /*[05]*/ GymBattleUI Create(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymResolveState {
    // Fields:
    ResolveUIController resolveUIPrefab;
    WorldMapState worldMapState;
    Generic prefabFactory;
    IBehaviourService behaviourService;
    ICameraRig cameraRig;
    GymState gymState;
    BattleStatus resultStatus;
    ResolveUIController resolveGui;
    long <PrestigeChange>k__BackingField;
    int <NumberPokemonDefeated>k__BackingField;
    int <ExpAwarded>k__BackingField;

    // Methods:
    void .ctor(...);
    long get_PrestigeChange(...);
    void set_PrestigeChange(...);
    int get_NumberPokemonDefeated(...);
    void set_NumberPokemonDefeated(...);
    int get_ExpAwarded(...);
    void set_ExpAwarded(...);
    void ExitState(...);
    void Init(...);
    void Leave(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Gym
class ResolveUIController {
    // Fields:
    StarStamp starStampPrefab;
    GymState gymState;
    GymResolveState gymResolve;
    IImageDownloadService imageDownloadService;
    IBehaviourService behaviourService;
    IXpAwardService xpAwardService;
    II18n ii18n;
    Image background;
    Text gymName;
    Text gymLevel;
    Image prestigeMeter;
    Text prestigeText;
    RawImage gymPhoto;
    Text pokemonDefeatedLabel;
    Text pokemonDefeatedText;
    Text xpGainedLabel;
    Text xpGainedText;
    Text prestigeChangedLabel;
    Text prestigeChangedText;
    Text resultText;
    RectTransform starHolder;
    cmod_reqd teamColor;
    float delayPerStar;
    float prestigeLerpDuration;
    int xp;
    Generic stars;

    // Methods:
    void .ctor(...);
    void Init(...);
    void MakeStars(...);
    void LeaveButtonPressed(...);
    IEnumerator ScrollPrestige(...);
    void <Init>m__7A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class StarStamp {
    // Fields:
    String PLAY_KEY = "Play";
    Animator anim;

    // Methods:
    void .ctor(...);
    void Play(...);
    IEnumerator WaitAndPlay(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IXpAwardService {
    // Methods:
    void AwardXp(...);
    void DisplayAwardedXp(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymAsset {
    // Fields:
    Transform BattleRoot;
    Transform PokemonRoot;
    Transform CameraPosition;
    Transform LogoRoot;
    GameObject Logo;
    Generic prefabFactory;
    GymProximityController gymProximityController;
    float characterDistance;
    float startingHeight;
    float startingDegrees;
    float climbingHeight;
    float climbingDegrees;
    SkinnedMeshRenderer gymMesh;
    SkinnedMeshRenderer logoMesh;
    SkinnedMeshRenderer topperMesh;
    cmod_reqd teamMaterials;
    cmod_reqd vfxColor;
    cmod_reqd vfxParticle;
    GymProximityController proximityController;
    Promise logoShrinkPromise;
    Generic <Trainers>k__BackingField;

    // Methods:
    void .ctor(...);
    Generic get_Trainers(...);
    void set_Trainers(...);
    GymProximityController get_ProximityController(...);
    void SetTeam(...);
    void UpdateMembers(...);
    void ShowProxmityAnimation(...);
    void AddPlatform(...);
    void SyncPlatformCount(...);
    void CleanupMembers(...);
    IPromise LogoShrinkPromise(...);
    void LogoShrunk(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymProximityController {
    // Fields:
    String IN_RANGE = "inRange";
    GameObject pulseRing;
    ProximityTrigger proximityTrigger;
    Animator topperAnimator;
    cmod_reqd topperLightFX;
    int team;

    // Methods:
    void .ctor(...);
    void SetTeam(...);
    void OnEnable(...);
    void OnDisable(...);
    void ProximityWakeUp(...);
    void ProximityGoToSleep(...);
    void Sync(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Player
class ProximityTrigger {
    // Fields:
    UnityEvent onEnterProximity;
    UnityEvent onExitProximity;
    String filterByTag;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnTriggerEnter(...);
    void OnTriggerExit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class MapGym {
    // Fields:
    GymAnimationController AnimationController;
    GymInBattleFX gymInBattleFxPrefab;
    Vector3 guardPokemonOffset;
    float guardPokemonScale;
    float baseShowGuardTime;
    float showGuardTimeVariance;
    float baseShowLogoTime;
    float showLogoTimeVariance;
    IPoiDirectoryService poiDirectoryService;
    IRpcHandler rpcHandler;
    ILocationProvider locationProvider;
    WorldMapRenderer worldMapRenderer;
    IMapAvatar mapAvatar;
    Factory gymAssetFactory;
    MapExploreState mapExploreState;
    Factory inBattleFxFactory;
    GymInBattleFX inBattleFx;
    float affectorRadiusSqr;
    IReceipt inspectionReceipt;
    Coroutine guardAnimationCoroutine;
    HoloCharacter guardCharacter;
    GymLevelSettingsProto <LevelSettings>k__BackingField;
    GymAsset <GymAsset>k__BackingField;
    PokemonFortProto <GymData>k__BackingField;

    // Methods:
    void .ctor(...);
    MapObjectPosition get_MapPosition(...);
    GymLevelSettingsProto get_LevelSettings(...);
    void set_LevelSettings(...);
    GymAsset get_GymAsset(...);
    void set_GymAsset(...);
    PokemonFortProto get_GymData(...);
    void set_GymData(...);
    boolean get_IsNeutral(...);
    boolean get_IsFriendly(...);
    boolean get_IsEnemy(...);
    int get_Level(...);
    int get_DisplayLevel(...);
    float get_LevelProgress(...);
    String get_LevelProgressString(...);
    int get_Slots(...);
    Transform get_PoiTransform(...);
    String get_PoiId(...);
    PoiType get_Type(...);
    LatLng get_Location(...);
    void Initialize(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnDestroy(...);
    boolean PlayerIsInRange(...);
    void OnTap(...);
    void UpdateData(...);
    void RefreshDetailsFromServer(...);
    IEnumerator GuardAnimation(...);
    void ShowGuardPokemon(...);
    void ShowLogo(...);
    float GetNextShowGuardTime(...);
    float GetNextShowLogoTime(...);
    void <RefreshDetailsFromServer>m__7E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ Transform get_PoiTransform(...);
    /*[06]*/ String get_PoiId(...);
    /*[07]*/ PoiType get_Type(...);
    /*[08]*/ LatLng get_Location(...);
    /*[09]*/ void UpdateData(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymAnimationController {
    // Fields:
    int tier;
    float transitionSpeed;
    Coroutine prestigeAnimation;
    cmod_reqd gymLevels;
    GymLevelSettingsProto gymLevelSettings;
    float prestigeChangeRate;
    Animator gymAnimator;
    GymAsset gymAsset;
    boolean initialized;
    long <Prestige>k__BackingField;
    long <DisplayPrestige>k__BackingField;
    int <Level>k__BackingField;

    // Methods:
    void .ctor(...);
    long get_Prestige(...);
    void set_Prestige(...);
    long get_DisplayPrestige(...);
    void set_DisplayPrestige(...);
    int get_Level(...);
    void set_Level(...);
    int get_LevelTier(...);
    int get_Tier(...);
    void set_Tier(...);
    float get_TransitionSpeed(...);
    void set_TransitionSpeed(...);
    GymLevel get_CurrentLevel(...);
    void OnEnable(...);
    void Initialize(...);
    void SetPrestige(...);
    void ForceNeutral(...);
    IPromise PlayLogoShrinkGrow(...);
    void UpdateAnimatorTier(...);
    void UpdateAnimatorTransitionSpeed(...);
    void ExpandTiers(...);
    void AnimatePrestige(...);
    IEnumerator RunPrestigeAnimation(...);
    void SetCurrentClipTime(...);
    IEnumerator CheckForLevelChange(...);
    IEnumerator LevelUp(...);
    IEnumerator LevelDown(...);
    IEnumerator QueueTierTransitionAnimation(...);
    void Sync(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class GymLevel {
    // Fields:
    int <FirstLevel>k__BackingField;
    int <LastLevel>k__BackingField;
    long <GymPointsStart>k__BackingField;
    long <GymPointsEnd>k__BackingField;
    int <LevelNumber>k__BackingField;
    int <TierNumber>k__BackingField;

    // Methods:
    int get_FirstLevel(...);
    void set_FirstLevel(...);
    int get_LastLevel(...);
    void set_LastLevel(...);
    long get_GymPointsStart(...);
    void set_GymPointsStart(...);
    long get_GymPointsEnd(...);
    void set_GymPointsEnd(...);
    int get_LevelNumber(...);
    void set_LevelNumber(...);
    int get_TierNumber(...);
    void set_TierNumber(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class GymInBattleFX {
    // Fields:
    ParticleSystem vfx;

    // Methods:
    void .ctor(...);
    void Start(...);
    IEnumerator TimerLoop(...);
    void Restart(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class IPoiDirectoryService {
    // Methods:
    void add_PoiAdded(...);
    void remove_PoiAdded(...);
    void add_PoiRemoved(...);
    void remove_PoiRemoved(...);
    void AddPokestop(...);
    void AddGym(...);
    void RemovePokestop(...);
    void RemoveGym(...);
    Generic get_ActivePokestops(...);
    Generic get_ActiveGyms(...);
    IMapPokestop GetPokestop(...);
    IMapPoi GetGym(...);
    IMapPoi GetPoi(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class IMapPokestop {
    // Methods:
    void Initialize(...);
    IPokestopDiskManager get_DiskManager(...);
    Generic BuildCameraLookAt(...);
    MapPokestopInteractive StartInteractiveMode(...);
    void CompleteInteractiveMode(...);
    void SetCooldownTime(...);
    boolean get_IsCoolingDown(...);
    boolean IsPlayerInRange(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class IPokestopDiskManager {
    // Methods:
    int get_ActiveDiskCount(...);
    Generic get_ActiveDisks(...);
    Generic ActivateDisk(...);
    void EnterInteractionState(...);
    void ExitInteractionState(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class MapPokestopInteractive {
    // Fields:
    String IN_RANGE = "inRange";
    Rigidbody spinner;
    float initialSpinnerTorqueAmount;
    float spinGetItemsThreshold;
    float maxSpinSpeed;
    float cooldownSpinLimit;
    Material coinFaceMaterial;
    cmod_reqd pokestopRenderers;
    float snapBackTime;
    float checkRangeFrequency;
    Animator animator;
    Action ItemsAwarded;
    IMapPokestop <Pokestop>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_ItemsAwarded(...);
    void remove_ItemsAwarded(...);
    IMapPokestop get_Pokestop(...);
    void set_Pokestop(...);
    Rigidbody get_Spinner(...);
    Color get_PokestopColor(...);
    void set_PokestopColor(...);
    boolean get_IsCoolingDown(...);
    void Start(...);
    void Init(...);
    void OnDestroy(...);
    void Rotate(...);
    void Spin(...);
    IEnumerator MonitorSpin(...);
    void SetImage(...);
    void ClearImage(...);
    void ResetRotation(...);
    IEnumerator LerpRotationBack(...);
    IEnumerator CheckPlayerRange(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise TransitionOut(...);
    /*[05]*/ Color get_PokestopColor(...);
    /*[06]*/ void set_PokestopColor(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapPoi {
    // Methods:
    Transform get_PoiTransform(...);
    String get_PoiId(...);
    PoiType get_Type(...);
    LatLng get_Location(...);
    void UpdateData(...);
}

// Namespace: Niantic.Holoholo.Map
class PoiType {
    // Fields:
    int value__;
    PoiType Pokestop = 0;
    PoiType Gym = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GymAsset Create(...);
    /*[05]*/ GymAsset Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GymInBattleFX Create(...);
    /*[05]*/ GymInBattleFX Create(...);
}

// Namespace: Niantic.Holoholo.Map
class MapObjectPosition {
    // Fields:
    boolean SpawnWithRandomHeading;
    LatLng location;
    float heading;
    IMapController mapController;

    // Methods:
    void .ctor(...);
    float get_Heading(...);
    void set_Heading(...);
    LatLng get_Location(...);
    void set_Location(...);
    void Awake(...);
    void Setup(...);
    void OnDestroy(...);
    void OnWorldScaleOrOriginChanged(...);
    Vector3 GetEarthPosition(...);
    void ComputePosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnWorldScaleOrOriginChanged(...);
    /*[05]*/ void ComputePosition(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapController {
    // Methods:
    void add_OnWorldScaleOrOriginChanged(...);
    void remove_OnWorldScaleOrOriginChanged(...);
    void FlyTo(...);
    LatLng GetWorldLocation(...);
    Vector3 GetMapPosition(...);
    boolean GetGroundPosition(...);
    boolean GetGroundLocation(...);
    LookAtCamera get_LookAtCamera(...);
    boolean get_GPSLock(...);
    void set_GPSLock(...);
    boolean get_IsAnimating(...);
    Camera get_MapCamera(...);
    boolean get_CompassLock(...);
    void set_CompassLock(...);
    MapConfig get_Config(...);
    void set_Config(...);
    float get_WorldScale(...);
}

// Namespace: Niantic.Holoholo.Geometry
class LookAtCamera {
    // Fields:
    LatLng target;
    double heading;
    double tilt;
    double range;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class MapConfig {
    // Fields:
    boolean labelsEnabled;
    double defaultRange;
    double minRange;
    double maxRange;
    AnimationCurve targetShiftCurve;
    AnimationCurve tiltCurve;
    AnimationCurve heightAdjustCurve;
    MapConfig Default;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    float get_minTilt(...);
    float get_maxTilt(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class GymBattleTransforms {
    // Fields:
    GymState gymState;

    // Methods:
    void .ctor(...);
    Transform get_Root(...);
    Transform get_PokemonRoot(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Transform get_Root(...);
    /*[05]*/ Transform get_PokemonRoot(...);
    /*[06]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo
class IPoiDetailsService {
    // Methods:
    void RequestPokestopDetails(...);
    Generic RequestGymDetails(...);
}

// Namespace: Holoholo.Rpc
class GymMembershipProto {
    // Fields:
    int PokemonFieldNumber = 1;
    int TrainerPublicProfileFieldNumber = 2;
    Generic _parser;
    PokemonProto pokemon_;
    PlayerPublicProfileProto trainerPublicProfile_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GymMembershipProto Clone(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    PlayerPublicProfileProto get_TrainerPublicProfile(...);
    void set_TrainerPublicProfile(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GymMembershipProto <_parser>m__195(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GymMembershipProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo
class PoiDetails {
    // Fields:
    String name;
    String description;
    String imageUrl;
    PoiType type;
    LatLng location;
    GymStateProto gymState;
    Generic modifiers;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class ProxyCamera {
    // Fields:
    boolean sceneFog;
    Camera thisCamera;
    Camera <SourceCamera>k__BackingField;
    Transform <SourceAnchor>k__BackingField;
    Transform <Anchor>k__BackingField;

    // Methods:
    void .ctor(...);
    Camera get_SourceCamera(...);
    void set_SourceCamera(...);
    Transform get_SourceAnchor(...);
    void set_SourceAnchor(...);
    Transform get_Anchor(...);
    void set_Anchor(...);
    Camera get_Camera(...);
    void OnPreRender(...);
    void OnPostRender(...);
    void LateUpdate(...);
    Vector3 WorldPositionToProxyPosition(...);
    Quaternion WorldRotationToProxyRotation(...);
    Vector3 ProxyPositionToWorldPosition(...);
    Quaternion ProxyRotationToWorldRotation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopState {
    // Fields:
    MapPokestop mapPokestopPrefab;
    PokestopApproachState approachState;
    PokestopInteractionState interactionState;
    PokestopResolveState resolveState;
    MapExploreState mapExploreState;
    ICameraRig cameraRig;
    IRpcService rpcService;
    IBehaviourService behaviourService;
    IPoiDetailsService poiDetailsService;
    IImageDownloadService imageDownloadService;
    IInputLayerStack inputLayerStack;
    IReceipt diskObservationReceipt;
    IReceipt inputLayerReceipt;
    Action PlayerReceivedItems;
    Action PlayerInteractionStarted;
    Action PlayerInteractionEnded;
    IMapPokestop <MapPokestop>k__BackingField;
    PoiDetails <PokestopDetails>k__BackingField;
    Texture <PokestopImage>k__BackingField;
    Vector3 <CameraPosAtStart>k__BackingField;
    Vector3 <CameraForwardAtStart>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_PlayerReceivedItems(...);
    void remove_PlayerReceivedItems(...);
    void add_PlayerInteractionStarted(...);
    void remove_PlayerInteractionStarted(...);
    void add_PlayerInteractionEnded(...);
    void remove_PlayerInteractionEnded(...);
    IMapPokestop get_MapPokestop(...);
    void set_MapPokestop(...);
    PoiDetails get_PokestopDetails(...);
    void set_PokestopDetails(...);
    Texture get_PokestopImage(...);
    void set_PokestopImage(...);
    Vector3 get_CameraPosAtStart(...);
    void set_CameraPosAtStart(...);
    Vector3 get_CameraForwardAtStart(...);
    void set_CameraForwardAtStart(...);
    void EnterState(...);
    void ExitState(...);
    void NotifyReceivedItems(...);
    void NotifyInteractionStarted(...);
    void NotifyInteractionEnded(...);
    void SetupPokestop(...);
    void RequestPokestopDetails(...);
    void PokestopDetailsResponse(...);
    void DownloadImage(...);
    void ApproachComplete(...);
    void InteractionComplete(...);
    void ResolveComplete(...);
    void <SetupPokestop>m__AA(...);
    void <DownloadImage>m__AB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class MapPokestop {
    // Fields:
    MapPokestopFar mapPokestopFarPrefab;
    Factory farModeFactory;
    MapPokestopNear mapPokestopNearPrefab;
    Factory nearModeFactory;
    MapPokestopInteractive mapPokestopInteractivePrefab;
    Factory interactiveModeFactory;
    PokestopDiskManager pokestopDiskManagerPrefab;
    Factory diskManagerFactory;
    PokestopDiskManager diskManager;
    FortProtoObservableService protoObservableServicePrefab;
    FortProtoObservableService protoObservableService;
    IPoiInspectionService poiInspector;
    ISfidaService sfidaService;
    GlobalSettings globalSettings;
    ILocationProvider locationProvider;
    IPoiDirectoryService poiDirectoryService;
    float initialCooldownLerpTime;
    Texture2D cooldownRamp;
    float colorUpdateInterval;
    float colorUpdateIntervalJitter;
    cmod_reqd cooldownRampCached;
    Color currentColor;
    Color lastColor;
    MapObjectPosition mapObjectPosition;
    long cooldownEndTimestamp;
    long cooldownStartTimestamp;
    Coroutine initialColorLerpRoutine;
    Action OnItemsAwarded;
    MapPokestopMode <ActiveMode>k__BackingField;
    String <PoiId>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnItemsAwarded(...);
    void remove_OnItemsAwarded(...);
    boolean get_ColorChangedThisFrame(...);
    MapPokestopMode get_ActiveMode(...);
    void set_ActiveMode(...);
    void ItemsHaveBeenAwarded(...);
    String get_PoiId(...);
    void set_PoiId(...);
    Transform get_PoiTransform(...);
    PoiType get_Type(...);
    LatLng get_Location(...);
    IPokestopDiskManager get_DiskManager(...);
    Generic BuildCameraLookAt(...);
    void Initialize(...);
    void OnDestroy(...);
    cmod_opt GoToMode(...);
    void ProximityWakeUp(...);
    void ProximityGoToSleep(...);
    MapPokestopInteractive StartInteractiveMode(...);
    void CompleteInteractiveMode(...);
    boolean IsPlayerInRange(...);
    boolean get_IsCoolingDown(...);
    Color CooldownColor(...);
    IEnumerator MonitorColor(...);
    void SetCooldownTime(...);
    IEnumerator InitialColorLerp(...);
    Color get_ReadyColor(...);
    void UpdateData(...);
    void <ProximityGoToSleep>m__A2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Transform get_PoiTransform(...);
    /*[05]*/ String get_PoiId(...);
    /*[06]*/ PoiType get_Type(...);
    /*[07]*/ LatLng get_Location(...);
    /*[08]*/ void UpdateData(...);
    /*[09]*/ void Initialize(...);
    /*[10]*/ IPokestopDiskManager get_DiskManager(...);
    /*[11]*/ Generic BuildCameraLookAt(...);
    /*[12]*/ MapPokestopInteractive StartInteractiveMode(...);
    /*[13]*/ void CompleteInteractiveMode(...);
    /*[14]*/ void SetCooldownTime(...);
    /*[15]*/ boolean get_IsCoolingDown(...);
    /*[16]*/ boolean IsPlayerInRange(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class MapPokestopFar {
    // Fields:
    TapGesture tapGesture;
    AudioSource selectionSound;
    IMapExploreState mapExploreState;
    Renderer pokestopRenderer;
    IMapPokestop <Pokestop>k__BackingField;

    // Methods:
    void .ctor(...);
    IMapPokestop get_Pokestop(...);
    void set_Pokestop(...);
    Color get_PokestopColor(...);
    void set_PokestopColor(...);
    void Setup(...);
    void OnDestroy(...);
    void HandleTapped(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise TransitionOut(...);
    /*[05]*/ Color get_PokestopColor(...);
    /*[06]*/ void set_PokestopColor(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    MapPokestopFar Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ MapPokestopFar Create(...);
    /*[05]*/ MapPokestopFar Create(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class MapPokestopNear {
    // Fields:
    TapGesture tapGesture;
    Animator animator;
    IMapExploreState mapExploreState;
    ICameraRig cameraRig;
    IPoiInspectionService poiInspector;
    AudioSource openSound;
    AudioSource closeSound;
    Renderer pokestopRenderer;
    IReceipt diskObservationReceipt;
    IMapPokestop <Pokestop>k__BackingField;

    // Methods:
    void .ctor(...);
    IMapPokestop get_Pokestop(...);
    void set_Pokestop(...);
    Color get_PokestopColor(...);
    void set_PokestopColor(...);
    void Setup(...);
    void OnDestroy(...);
    void HandleTapped(...);
    IPromise TransitionOut(...);
    void SetModdedStatus(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise TransitionOut(...);
    /*[05]*/ Color get_PokestopColor(...);
    /*[06]*/ void set_PokestopColor(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    MapPokestopNear Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ MapPokestopNear Create(...);
    /*[05]*/ MapPokestopNear Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    MapPokestopInteractive Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ MapPokestopInteractive Create(...);
    /*[05]*/ MapPokestopInteractive Create(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskManager {
    // Fields:
    int MaxActiveDisks = 1;
    IItemFactory itemFactory;
    IRpcHandler rpcHandler;
    ILocationProvider locationProvider;
    GameMasterData gameMasterData;
    Generic activeDisks;
    IReceipt protoObservationReceipt;
    boolean interactionStateActive;
    FortProtoObservableService <ProtoObservableService>k__BackingField;
    IMapPokestop <Pokestop>k__BackingField;
    Generic <>f__am$cache9;

    // Methods:
    void .ctor(...);
    FortProtoObservableService get_ProtoObservableService(...);
    void set_ProtoObservableService(...);
    IMapPokestop get_Pokestop(...);
    void set_Pokestop(...);
    int get_ActiveDiskCount(...);
    Generic get_ActiveDisks(...);
    void Initialize(...);
    void OnDestroy(...);
    Generic ActivateDisk(...);
    void HandleUseActionResponse(...);
    void ObserveFortProto(...);
    void SetActiveDisks(...);
    void UpdateActiveDisks(...);
    void EnterInteractionState(...);
    void ExitInteractionState(...);
    Item <HandleUseActionResponse>m__A6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ int get_ActiveDiskCount(...);
    /*[07]*/ Generic get_ActiveDisks(...);
    /*[08]*/ Generic ActivateDisk(...);
    /*[09]*/ void EnterInteractionState(...);
    /*[10]*/ void ExitInteractionState(...);
}

// Namespace: Niantic.Holoholo.Items
class IItemFactory {
    // Methods:
    cmod_opt Create(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class FortProtoObservableService {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ void Set(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokestopDiskManager Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopDiskManager Create(...);
    /*[05]*/ PokestopDiskManager Create(...);
}

// Namespace: Niantic.Holoholo.Sfida
class ISfidaService {
    // Methods:
    boolean get_IsConnected(...);
    Generic get_SpawnedPokemon(...);
    boolean Connect(...);
    void Disconnect(...);
    cmod_reqd FindPairableDevices(...);
    void SetVisible(...);
    void AddActivePokestop(...);
    void RemoveDeactivePokestop(...);
    void AddActivePokemon(...);
    void RemoveDeactivePokemon(...);
    void StartDowsePokemon(...);
    void StopDowsePokemon(...);
    void ProximityDowsePokemon(...);
    void FoundDowsePokemon(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class MapPokestopMode {
    // Fields:
    Transform cameraLookAtTarget;
    Transform cameraTarget;

    // Methods:
    void .ctor(...);
    Transform get_CameraLookAtTarget(...);
    Transform get_CameraTarget(...);
    IPromise TransitionOut(...);
    Color get_PokestopColor(...);
    void set_PokestopColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise TransitionOut(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopApproachState {
    // Fields:
    float cameraDownSwoop;
    PokestopState pokestopState;
    ICameraRig cameraRig;
    AudioSource zoomInSFX;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    ICameraController BuildCameraAnimation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class ICameraController {
    // Methods:
    void OnStart(...);
    void OnStop(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopInteractionState {
    // Fields:
    AwardItemBubble awardItemBubblePrefab;
    PokestopSpinnerInteractionState spinnerInteractionStatePrefab;
    PokestopDiskInteractionState diskInteractionStatePrefab;
    PokestopState pokestopState;
    IBehaviourService behaviourService;
    IItemSpriteLookup itemSpriteLookup;
    IXpAwardService xpAwardService;
    ICameraRig cameraRig;
    Generic xpEarned;
    Coroutine showImageRoutine;
    IReceipt diskObservationReceipt;
    MapPokestopInteractive <InteractivePokestop>k__BackingField;

    // Methods:
    void .ctor(...);
    MapPokestopInteractive get_InteractivePokestop(...);
    void set_InteractivePokestop(...);
    void EnterState(...);
    void ExitState(...);
    IEnumerator SetImageWhenLoaded(...);
    void AddXp(...);
    void CancelDiskInteraction(...);
    void GoToDiskInteractionState(...);
    void InteractionComplete(...);
    void <EnterState>m__9A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class AwardItemBubble {
    // Fields:
    float SMOOTH_TRANSITION_FACTOR = 3.000000;
    Renderer imageIconRoot;
    Renderer itemIconRenderer;
    float wobbleSpeed;
    AnimationCurve wobbleSpeedCurve;
    float wobbleSize;
    AnimationCurve wobbleSizeCurve;
    float floatSpeed;
    AnimationCurve floatSpeedCurve;
    float animateInTime;
    AnimationCurve animateInPosCurve;
    AnimationCurve animateInScaleCurve;
    AnimationCurve scaleCurve;
    float bubbleLifeTime;
    boolean popped;
    String itemName;
    Sprite itemSprite;
    float lingerDuration;
    AnimationCurve lingerScaleCurve;
    Vector3 spawnPositionJitter;
    float popSoundPitchJitter;
    ParticleSystem bubblePopFx;
    AudioSource spawnSound;
    AudioSource popSound;
    ICameraRig cameraRig;
    IToastService toastService;
    boolean materialInstanceCreated;
    Action OnPopped;

    // Methods:
    void .ctor(...);
    void add_OnPopped(...);
    void remove_OnPopped(...);
    boolean get_IsPopped(...);
    void OnDestroy(...);
    void SetData(...);
    void Initialize(...);
    IEnumerator AnimateIn(...);
    IEnumerator AnimateBubble(...);
    void Pop(...);
    IEnumerator DelayPop(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IToastService {
    // Methods:
    IToastReceipt Pokemon(...);
    IToastReceipt OneLine(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItemCandy(...);
    void RewardItemStardust(...);
}

// Namespace: Niantic.Holoholo.UI
class IToastReceipt {
    // Methods:
    void add_ToastDismissed(...);
    void remove_ToastDismissed(...);
    void DismissToast(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopSpinnerInteractionState {
    // Fields:
    PokestopSpinnerGestureHandler gestureHandlerPrefab;
    PokestopSpinnerInteractionGuiController guiControllerPrefab;
    float spawnItemsFromBottom;
    float bubbleDepth;
    float bubbleDelay;
    Sprite eggSprite;
    Factory bubbleFactory;
    PokestopState pokestopState;
    PokestopInteractionState interactionState;
    IToastService toastService;
    IItemSpriteLookup itemSpriteLookup;
    Factory gestureHandlerFactory;
    ICameraRig cameraRig;
    II18n ii18n;
    ILocationProvider locationProvider;
    IRpcService rpcService;
    Factory guiControllerFactory;
    Generic spawnedBubbles;
    Coroutine bubblesRoutine;
    boolean hasAwardedItems;
    PokestopSpinnerGestureHandler gestureHandler;
    PokestopSpinnerInteractionGuiController guiController;
    Generic <>f__am$cache16;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void AwardItems(...);
    IEnumerator RetrieveItemRewards(...);
    cmod_reqd PositionAndShuffleItems(...);
    IEnumerator AnimateItemBubbles(...);
    void <ExitState>m__9F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopSpinnerGestureHandler {
    // Fields:
    float spinModifier;
    int swipeAttemptsBeforeWarningToast;
    ICameraRig cameraRig;
    IToastService toastService;
    IInputLayerStack inputLayerStack;
    PokestopInteractionState interactionState;
    ScreenTransformGesture transformGesture;
    PressGesture pressGesture;
    TouchScriptInputLayer inputLayer;
    int currentCooldownSwipes;
    float prevAngleDelta;
    boolean controllingSpinner;
    IReceipt inputLayerReceipt;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void Start(...);
    void OnDestroy(...);
    void OnPressed(...);
    void OnTransformed(...);
    void OnTransformCompleted(...);
    boolean HandleSwipeOnBubble(...);
    float GetSpinAngleRad(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Gestures
class ScreenTransformGesture {
    // Methods:
    void .ctor(...);
    void ApplyTransform(...);
    float doRotation(...);
    float doScaling(...);
    Vector3 doOnePointTranslation(...);
    Vector3 doTwoPointTranslation(...);
    Vector2 scaleAndRotate(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ float get_MinScreenPointsDistance(...);
    /*[32]*/ void set_MinScreenPointsDistance(...);
    /*[33]*/ float doRotation(...);
    /*[34]*/ float doScaling(...);
    /*[35]*/ Vector3 doOnePointTranslation(...);
    /*[36]*/ Vector3 doTwoPointTranslation(...);
    /*[37]*/ int getNumPoints(...);
    /*[38]*/ boolean relevantTouches1(...);
    /*[39]*/ boolean relevantTouches2(...);
    /*[40]*/ Vector2 getPointScreenPosition(...);
    /*[41]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[47]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[48]*/ void ApplyTransform(...);
    /*[49]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[50]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[51]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[52]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[53]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[54]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: TouchScript.Gestures
class PressGesture {
    // Fields:
    String PRESS_MESSAGE = "OnPress";
    Generic pressedInvoker;
    boolean ignoreChildren;

    // Methods:
    void .ctor(...);
    void add_Pressed(...);
    void remove_Pressed(...);
    boolean get_IgnoreChildren(...);
    void set_IgnoreChildren(...);
    boolean ShouldReceiveTouch(...);
    boolean CanPreventGesture(...);
    boolean CanBePreventedByGesture(...);
    void touchBegan(...);
    void onRecognized(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopSpinnerInteractionGuiController {
    // Fields:
    Text titleText;
    Text descriptionText;
    cmod_reqd diskIcons;
    AudioClip diskInteractionSound;
    AudioClip closeSound;
    GameObject outOfRangeBox;
    float checkRangeFrequency;
    IPoiDetailsService poiDetailsService;
    IPoiInspectionService poiInspectionService;
    PokestopState pokestopState;
    PokestopInteractionState pokestopInteractionState;
    Coroutine awaitDetailsRoutine;
    IReceipt diskObservationReceipt;
    Generic modifierDetailProtos;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void Start(...);
    void HandleDestroy(...);
    void ClickExit(...);
    void GoToFullscreen(...);
    void DiskIconClicked(...);
    IEnumerator WaitForDetails(...);
    void RefreshDiskIcons(...);
    IEnumerator CheckPlayerRange(...);
    void <Initialize>m__9C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ AwardItemBubble Create(...);
    /*[05]*/ AwardItemBubble Create(...);
}

// Namespace: Niantic.Holoholo.Items
class IItemSpriteLookup {
    // Methods:
    Sprite GetSprite(...);
    Sprite GetAltSprite(...);
    Sprite GetSprite(...);
    Sprite GetCurrencySprite(...);
    void RegisterItem(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopSpinnerGestureHandler Create(...);
    /*[05]*/ PokestopSpinnerGestureHandler Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopSpinnerInteractionGuiController Create(...);
    /*[05]*/ PokestopSpinnerInteractionGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskInteractionState {
    // Fields:
    PokestopDiskInteractionGuiController guiControllerPrefab;
    PokestopDiskConfirmationState diskConfirmationStatePrefab;
    Factory guiControllerFactory;
    PokestopInteractionState interactionState;
    PokestopDiskInteractionGuiController guiController;
    ClientFortModifierProto diskProto;

    // Methods:
    void .ctor(...);
    void ExitState(...);
    void Initialize(...);
    void ConfirmDiskSelection(...);
    void DiskConfirmationCanceled(...);
    void Close(...);
    cmod_opt SetActiveSubstate(...);
    void ClearSubstate(...);
    void CreateGui(...);
    void DismissGui(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskInteractionGuiController {
    // Fields:
    PokestopDiskPickerButton diskPickerButtonPrefab;
    CanvasGroup diskInventoryCanvasGroup;
    Transform diskInventoryRoot;
    Text slotTitleText;
    Text slotDescriptionText;
    PokestopDiskSlotController slotImageController;
    Transform slotPlayerNameRoot;
    Text slotPlayerNameText;
    Text outOfDisksText;
    float inventoryDisabledAlpha;
    AudioClip selectSound;
    AudioClip closeSound;
    Factory diskPickerButtonFactory;
    PokestopState pokestopState;
    PokestopDiskInteractionState diskInteractionState;
    IPlayerProximityService playerProximityService;
    GlobalSettings globalSettings;
    GameMasterData gameMasterData;
    II18n ii18n;
    Coroutine transitionRoutine;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void Close(...);
    void NewDiskClicked(...);
    void EnableDiskInventory(...);
    boolean <Initialize>m__98(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskPickerButton {
    // Fields:
    Image icon;
    Text countText;
    IItemSpriteLookup itemSpriteLookup;
    Item diskItem;
    Generic Clicked;

    // Methods:
    void .ctor(...);
    void add_Clicked(...);
    void remove_Clicked(...);
    void Initialize(...);
    void Click(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskSlotController {
    // Fields:
    Generic diskItem;
    Image slotImage;
    IItemSpriteLookup itemSpriteLookup;
    Generic Clicked;

    // Methods:
    void .ctor(...);
    void add_Clicked(...);
    void remove_Clicked(...);
    void SetDisk(...);
    void Click(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokestopDiskPickerButton Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopDiskPickerButton Create(...);
    /*[05]*/ PokestopDiskPickerButton Create(...);
}

// Namespace: Niantic.Holoholo.Map
class IPlayerProximityService {
    // Methods:
    void add_LocationUpdated(...);
    void remove_LocationUpdated(...);
    IReceipt WhenInRange(...);
    IReceipt WhenOutOfRange(...);
    float DistanceM(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskConfirmationState {
    // Fields:
    PokestopDiskConfirmationGuiController guiControllerPrefab;
    Factory guiControllerFactory;
    PokestopState pokestopState;
    PokestopInteractionState interactionState;
    PokestopDiskInteractionState diskInteractionState;
    IInputEventService inputEventService;
    IUserPromptsService userPromptsService;
    PokestopDiskConfirmationGuiController guiController;

    // Methods:
    void .ctor(...);
    void ExitState(...);
    void Initialize(...);
    void Confirmed(...);
    void Canceled(...);
    void HandleActivateDiskResponse(...);
    void <Confirmed>m__97(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopDiskConfirmationGuiController {
    // Fields:
    Text diskTitle;
    Text diskDescription;
    PokestopDiskPickerButton diskPickerButton;
    AudioClip closeSound;
    AudioClip confirmationSound;
    PokestopDiskConfirmationState diskConfirmationState;
    II18n ii18n;
    Coroutine transitionRoutine;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Initialize(...);
    void Close(...);
    void Confirmed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokestopDiskConfirmationGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopDiskConfirmationGuiController Create(...);
    /*[05]*/ PokestopDiskConfirmationGuiController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokestopDiskInteractionGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokestopDiskInteractionGuiController Create(...);
    /*[05]*/ PokestopDiskInteractionGuiController Create(...);
}

// Namespace: Holoholo.Rpc
class ClientFortModifierProto {
    // Fields:
    int ModifierTypeFieldNumber = 1;
    int ExpirationTimeMsFieldNumber = 2;
    int DeployingPlayerCodenameFieldNumber = 3;
    Generic _parser;
    Item modifierType_;
    long expirationTimeMs_;
    String deployingPlayerCodename_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ClientFortModifierProto Clone(...);
    Item get_ModifierType(...);
    void set_ModifierType(...);
    long get_ExpirationTimeMs(...);
    void set_ExpirationTimeMs(...);
    String get_DeployingPlayerCodename(...);
    void set_DeployingPlayerCodename(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ClientFortModifierProto <_parser>m__99(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ClientFortModifierProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopResolveState {
    // Fields:
    float cameraDownSwoop;
    PokestopState pokestopState;
    ICameraRig cameraRig;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    ICameraController BuildCameraAnimation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class WildPokemonEncounterState {
    // Fields:
    EncounterApproachState approachStatePrefab;
    EncounterInteractionState interactionStatePrefab;
    HealthyGyroClassifier healthyGyroClassifierPrefab;
    ICameraRig cameraRig;
    IMapAvatar mapAvatar;
    WorldMapState worldMapState;
    MapExploreState mapExploreState;
    WorldMapRenderer worldMapRenderer;
    Generic prefabFactory;
    Music encounterMusic;
    Generic PokeballThrown;
    Generic PokeballHit;
    Action EncounterStarted;
    Action EncounterSceneLoaded;
    Generic EncounterComplete;
    boolean <OnlyShowFirstTimeUserGui>k__BackingField;
    MapPokemon <MapPokemon>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_PokeballThrown(...);
    void remove_PokeballThrown(...);
    void add_PokeballHit(...);
    void remove_PokeballHit(...);
    void add_EncounterStarted(...);
    void remove_EncounterStarted(...);
    void add_EncounterSceneLoaded(...);
    void remove_EncounterSceneLoaded(...);
    void add_EncounterComplete(...);
    void remove_EncounterComplete(...);
    boolean get_OnlyShowFirstTimeUserGui(...);
    void set_OnlyShowFirstTimeUserGui(...);
    MapPokemon get_MapPokemon(...);
    void set_MapPokemon(...);
    void ExitState(...);
    void SetupEncounter(...);
    void BeginEncounterApproach(...);
    void ApproachComplete(...);
    void EncounterError(...);
    void NotifyPokeballThrown(...);
    void NotifyPokeballHit(...);
    void EncounterStateComplete(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
    /*[17]*/ void EncounterError(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterApproachState {
    // Fields:
    float swoopDown;
    float turnTime;
    float anglesPerSecond;
    WildPokemonEncounterState encounterState;
    ICameraRig cameraRig;
    IBehaviourService behaviourService;
    IInputEventService inputEventService;
    IArService arService;
    Music encounterMusic;
    MapPokemon mapPokemon;
    IMapAvatar player;
    ICameraController animateCameraToPokemon;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    IEnumerator TurnAnimation(...);
    ICameraController BuildCameraAnimation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Map
class MapPokemon {
    // Fields:
    float minimumTouchRadius;
    float animStartTime;
    Coroutine despawnHandlerCoroutine;
    IMapExploreState mapExploreState;
    ITimeOfDayService timeOfDayService;
    SoundController soundController;
    ISfidaService sfidaService;
    IMapScene mapObjectRoot;
    IRpcHandler rpcHandler;
    IMapEntityService mapEntityService;
    PokemonAnim landAnim;
    Generic upsightDict;
    HoloCharacter holoCharacter;
    PokemonMaterialLerp materialLerp;
    float materialLerpDurationEnterEncounter;
    float materialLerpDurationExitEncounter;
    boolean destroyed;
    Generic <DespawnTime>k__BackingField;

    // Methods:
    void .ctor(...);
    ulong get_EncounterId(...);
    String get_SpawnPointId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    LatLng get_Location(...);
    Transform get_Transform(...);
    GameObject get_GameObject(...);
    HoloCharacter get_HoloCharacter(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    void RunMaterialLerp(...);
    void OnEnable(...);
    void OnDisable(...);
    Generic SendEncounterRequest(...);
    Generic TryCapture(...);
    void PlaySpawnFx(...);
    Generic get_DespawnTime(...);
    void set_DespawnTime(...);
    void SetDespawnTime(...);
    IEnumerator DespawnHandler(...);
    void InitBase(...);
    Coroutine FaceTowardsCoroutine(...);
    IEnumerator FaceTowards(...);
    void CleanupDespawnHandler(...);
    void OnTap(...);
    void LogEncounterMetrics(...);
    void HandleAssetLoaded(...);
    void GenerateTouchColliders(...);
    void OnDestroy(...);
    void OnApplicationQuit(...);
    void Destroy(...);
    void HandleDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_Transform(...);
    /*[06]*/ ulong get_EncounterId(...);
    /*[07]*/ PokemonProto get_Pokemon(...);
    /*[08]*/ int get_PokemonId(...);
    /*[09]*/ LatLng get_Location(...);
    /*[10]*/ String get_SpawnPointId(...);
    /*[11]*/ HoloCharacter get_HoloCharacter(...);
    /*[12]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[13]*/ int get_Cp(...);
    /*[14]*/ Generic SendEncounterRequest(...);
    /*[15]*/ Generic TryCapture(...);
    /*[16]*/ void Destroy(...);
    /*[17]*/ Generic TryCapture(...);
    /*[18]*/ void PlaySpawnFx(...);
    /*[19]*/ void HandleDestroy(...);
}

// Namespace: Niantic.Holoholo.Map
class ITimeOfDayService {
    // Methods:
    DayPeriod get_DayPeriod(...);
    void ApplyTimeOfDay(...);
    void SetMapLightDirection(...);
    void SetEncounterLightDirection(...);
}

// Namespace: Niantic.Holoholo.Map
class DayPeriod {
    // Fields:
    int value__;
    DayPeriod Day = 0;
    DayPeriod Night = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapEntityService {
    // Methods:
    void add_OnNearbyPokemonAdded(...);
    void remove_OnNearbyPokemonAdded(...);
    void add_OnNearbyPokemonRemoved(...);
    void remove_OnNearbyPokemonRemoved(...);
    void UpdateCell(...);
    void RemoveCell(...);
    void UpdatePois(...);
    void AddSpawnPoints(...);
    void UpdateNearbyPokemon(...);
    void UpdateWildPokemon(...);
    void RemoveWildPokemon(...);
}

// Namespace: 
class PokemonAnim {
    // Fields:
    int value__;
    PokemonAnim NONE = 0;
    PokemonAnim IDLE_01 = 1;
    PokemonAnim IDLE_02 = 2;
    PokemonAnim LAND = 3;
    PokemonAnim ATTACK_01 = 4;
    PokemonAnim ATTACK_02 = 5;
    PokemonAnim DAMAGED = 6;
    PokemonAnim STUNNED = 7;
    PokemonAnim LOOP = 8;
    PokemonAnim _MAX = 9;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class PokemonMaterialLerp {
    // Fields:
    GameObject character;
    float duration;
    AnimationCurve lerpCurve;
    cmod_reqd renderers;
    MaterialRendererBlock targetBlock;
    cmod_reqd targetBlocks;
    cmod_reqd sourceBlocks;
    Coroutine lerpCoroutine;

    // Methods:
    void .ctor(...);
    GameObject get_Character(...);
    void set_Character(...);
    float get_Duration(...);
    void set_Duration(...);
    void InitMaterials(...);
    void DoMaterialLerp(...);
    IEnumerator LerpMaterials(...);
    void LerpRenderBlocks(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_Character(...);
    /*[05]*/ void set_Character(...);
    /*[06]*/ float get_Duration(...);
    /*[07]*/ void set_Duration(...);
    /*[08]*/ void DoMaterialLerp(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class MaterialRendererBlock {
    // Fields:
    MaterialPropertyBlock block;
    cmod_reqd matColorProperties;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class CaptureProbabilityProto {
    // Fields:
    int PokeballTypeFieldNumber = 1;
    int CaptureProbabilityFieldNumber = 2;
    int ReticleDifficultyScaleFieldNumber = 12;
    Generic _parser;
    Generic _repeated_pokeballType_codec;
    Generic pokeballType_;
    Generic _repeated_captureProbability_codec;
    Generic captureProbability_;
    double reticleDifficultyScale_;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CaptureProbabilityProto Clone(...);
    Generic get_PokeballType(...);
    Generic get_CaptureProbability(...);
    double get_ReticleDifficultyScale(...);
    void set_ReticleDifficultyScale(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CaptureProbabilityProto <_parser>m__13E(...);
    int <_repeated_pokeballType_codec>m__13F(...);
    Item <_repeated_pokeballType_codec>m__140(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CaptureProbabilityProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterInteractionState {
    // Fields:
    EncounterPokemon encounterPokemonPrefab;
    EncounterIntroState encounterIntroStatePrefab;
    EncounterCaptureState captureStatePrefab;
    EncounterSnapshotState snapshotStatePrefab;
    EncounterArena encounterArenaPrefab;
    IBehaviourService behaviourService;
    WorldMapRenderer worldMapRenderer;
    Generic prefabFactory;
    WildPokemonEncounterState encounterState;
    ICameraRig cameraRig;
    IArService arService;
    ITimeOfDayService timeOfDayService;
    EncounterArena arena;
    Factory screenWipeFactory;
    EncounterParkCameraController parkCameraController;
    EncounterArCameraController arCameraController;
    AudioClip userFledSound;
    float screenWipeDuration;
    Camera previousMainCamera;
    boolean <CanUseBerry>k__BackingField;

    // Methods:
    void .ctor(...);
    EncounterArena get_Arena(...);
    boolean get_CanUseBerry(...);
    void set_CanUseBerry(...);
    void EnterState(...);
    void ExitState(...);
    void HandleToggleAr(...);
    ICameraController GetCameraController(...);
    void BerryUsed(...);
    void PokeballHit(...);
    void HandleIntroComplete(...);
    void HandlePokeballStateChanged(...);
    void HandleCaptureStateComplete(...);
    void <EnterState>m__3F(...);
    void <EnterState>m__40(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterPokemon {
    // Fields:
    EnumScaleMode scaleMode;
    AnimationCurve pokemonScaleCurve;
    BlobShadow shadow;
    GameMasterData gameMaster;
    SoundController soundController;
    ICameraRig cameraRig;
    AnimationCurve jumpCurve;
    Transform offset;
    ParticleSystem landingParticlePrefab;
    ParticleSystem warningParticlePrefab;
    ParticleSystem fleeingParticlePrefab;
    HoloCharacter character;
    cmod_reqd renderers;
    float attackProbability;
    float dodgeProbability;
    boolean canJump;
    float lastUpdateTime;
    CylinderPokemon cyclinder;
    Vector3 pokeballPosition;
    Coroutine stateMachineCoroutine;
    EncounterPokemonState state;
    boolean fled;
    Transform pokeballTransform;
    Action AssetLoaded;
    IMapPokemon <MapPokemon>k__BackingField;
    Transform <Waist>k__BackingField;
    Transform <Head>k__BackingField;
    float <OriginScale>k__BackingField;
    boolean <CanMove>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_AssetLoaded(...);
    void remove_AssetLoaded(...);
    EncounterPokemonState get_CurrentState(...);
    IMapPokemon get_MapPokemon(...);
    void set_MapPokemon(...);
    Transform get_Waist(...);
    void set_Waist(...);
    Transform get_Head(...);
    void set_Head(...);
    float get_OriginScale(...);
    void set_OriginScale(...);
    boolean get_CanMove(...);
    void set_CanMove(...);
    boolean get_IsIdle(...);
    boolean get_IsAttacking(...);
    void SetUpBlobShadow(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void Init(...);
    void HandleAssetInstantiated(...);
    void Flee(...);
    void Dodge(...);
    void Attack(...);
    void EnterPokeball(...);
    void BreakOutPokeball(...);
    void HandleJumpEnd(...);
    void HandleJumpBegin(...);
    void LateUpdate(...);
    IEnumerator RunStateMachine(...);
    Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_AssetLoaded(...);
    /*[05]*/ void remove_AssetLoaded(...);
    /*[06]*/ void Init(...);
    /*[07]*/ EncounterPokemonState get_CurrentState(...);
    /*[08]*/ IMapPokemon get_MapPokemon(...);
    /*[09]*/ Transform get_Waist(...);
    /*[10]*/ Transform get_Head(...);
    /*[11]*/ float get_OriginScale(...);
    /*[12]*/ boolean get_IsAttacking(...);
    /*[13]*/ boolean get_CanMove(...);
    /*[14]*/ void set_CanMove(...);
    /*[15]*/ Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    /*[16]*/ GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);
    /*[17]*/ void Flee(...);
    /*[18]*/ void EnterPokeball(...);
    /*[19]*/ void BreakOutPokeball(...);
    /*[20]*/ Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    /*[21]*/ GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);
}

// Namespace: 
class CylinderPokemon {
    // Fields:
    float radiusM;
    float heightM;
    float groundM;
    float shoulderScale;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterPokemonState {
    // Fields:
    int value__;
    EncounterPokemonState Idle = 0;
    EncounterPokemonState Attack = 1;
    EncounterPokemonState Dodge = 2;
    EncounterPokemonState EnterPokeball = 3;
    EncounterPokemonState InPokeball = 4;
    EncounterPokemonState Breakout = 5;
    EncounterPokemonState Flee = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map
class IMapPokemon {
    // Methods:
    GameObject get_GameObject(...);
    Transform get_Transform(...);
    ulong get_EncounterId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    LatLng get_Location(...);
    String get_SpawnPointId(...);
    HoloCharacter get_HoloCharacter(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    Generic SendEncounterRequest(...);
    Generic TryCapture(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterIntroState {
    // Fields:
    SoundController soundController;
    EncounterArena arena;
    ICameraRig cameraRig;
    IArService arService;
    IInputEventService inputEventService;
    Action onStateCompleted;
    Coroutine monitorIntroRoutine;

    // Methods:
    void .ctor(...);
    IEncounterPokemon get_EncounterPokemon(...);
    EncounterUIController get_UIController(...);
    EncounterView get_EncounterView(...);
    Pokeball get_Pokeball(...);
    Reticle get_Reticle(...);
    void EnterState(...);
    void ExitState(...);
    void StartIntro(...);
    IEnumerator MonitorIntro(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterArena {
    // Fields:
    Reticle reticlePrefab;
    EncounterUIController uiControllerPrefab;
    EncounterView encounterViewPrefab;
    BackgroundController backgroundControllerPrefab;
    Pokeball pokeballPrefab;
    NamePlate namePlatePrefab;
    EncounterToast toastPrefab;
    Generic factory;
    IArService arService;
    Factory encounterUiFactory;
    IEncounterPokemon <EncounterPokemon>k__BackingField;
    Reticle <Reticle>k__BackingField;
    Pokeball <Pokeball>k__BackingField;
    EncounterUIController <UIController>k__BackingField;
    BackgroundController <BackgroundController>k__BackingField;
    EncounterView <EncounterView>k__BackingField;

    // Methods:
    void .ctor(...);
    IEncounterPokemon get_EncounterPokemon(...);
    void set_EncounterPokemon(...);
    Reticle get_Reticle(...);
    void set_Reticle(...);
    Pokeball get_Pokeball(...);
    void set_Pokeball(...);
    EncounterUIController get_UIController(...);
    void set_UIController(...);
    BackgroundController get_BackgroundController(...);
    void set_BackgroundController(...);
    EncounterView get_EncounterView(...);
    void set_EncounterView(...);
    void Setup(...);
    void TearDown(...);
    cmod_opt CreateChild(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class Reticle {
    // Fields:
    Transform innerRing;
    Transform outerRing;
    float targetScaleMin;
    float pokemonDistanceRatio;
    EncounterArena arena;
    ICameraRig cameraRig;
    Collider targetCollider;
    float captureChance;
    boolean <Paused>k__BackingField;

    // Methods:
    void .ctor(...);
    IEncounterPokemon get_encounterPokemon(...);
    float get_TargetSize(...);
    float get_Radius(...);
    Collider get_Collider(...);
    boolean get_Paused(...);
    void set_Paused(...);
    void set_CaptureChance(...);
    float get_CaptureChance(...);
    void LateUpdate(...);
    Vector3 PokeballReticlePosition(...);
    float ReticleScale(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class IEncounterPokemon {
    // Methods:
    void add_AssetLoaded(...);
    void remove_AssetLoaded(...);
    void Init(...);
    EncounterPokemonState get_CurrentState(...);
    IMapPokemon get_MapPokemon(...);
    Transform get_Waist(...);
    Transform get_Head(...);
    float get_OriginScale(...);
    boolean get_IsAttacking(...);
    boolean get_CanMove(...);
    void set_CanMove(...);
    Transform get_transform(...);
    GameObject get_gameObject(...);
    void Flee(...);
    void EnterPokeball(...);
    void BreakOutPokeball(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterUIController {
    // Fields:
    ItemUseConfirmationGuiController itemUseConfirmationGuiPrefab;
    CanvasGroup uiRoot;
    cmod_reqd hiddenUiOnFirstTimeEncounter;
    RectTransform noBallIndicator;
    Text ballCountText;
    EncounterArrows arrows;
    IBehaviourService behaviourService;
    II18n i18n;
    EncounterArena arena;
    WildPokemonEncounterState encounterState;
    EncounterInteractionState interactionState;
    IUserPromptsService userPrompts;
    IItemInventoryGuiService itemInventoryGuiService;
    Factory itemUseConfirmationGuiFactory;
    NamePlate namePlate;
    boolean clickable;
    Action OnRunAway;
    Action OnSnapshotMode;

    // Methods:
    void .ctor(...);
    void add_OnRunAway(...);
    void remove_OnRunAway(...);
    void add_OnSnapshotMode(...);
    void remove_OnSnapshotMode(...);
    IEncounterPokemon get_encounterPokemon(...);
    Pokeball get_pokeball(...);
    void Init(...);
    void ShowIntro(...);
    void ShowCaptureSucceeded(...);
    void ShowPokemonBreakout(...);
    void ShowTargetHitMessage(...);
    void ShowButtons(...);
    void SetBallCount(...);
    EncounterToast Toast(...);
    void ClickRunAway(...);
    void MessagePlate(...);
    void OpenItemBag(...);
    void OpenCamera(...);
    void HandleItemBagDismissed(...);
    void FoodUsedServerCallback(...);
    void <Init>m__42(...);
    void <ShowCaptureSucceeded>m__43(...);
    boolean <OpenItemBag>m__44(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Encounter
class ItemUseConfirmationGuiController {
    // Fields:
    Image itemImage;
    Animator itemAnimator;
    GameObject buttonsContainer;
    GameObject cancelButtonObj;
    ParticleSystem itemUsedParticle;
    AudioClip berrySound;
    IInputEventService inputEventService;
    Coroutine itemUseRoutine;
    Generic confirmationCallback;
    Transform particleSpawnAnchor;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void ClickConfirm(...);
    void ClickCancel(...);
    IEnumerator ItemUseFlowCoroutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void Initialize(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterArrows {
    // Fields:
    GameObject rightArrows;
    GameObject leftArrows;
    float leftRightThreshold;
    Transform target;
    ICameraRig cameraRig;

    // Methods:
    void .ctor(...);
    void SetUp(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Items
class IItemInventoryGuiService {
    // Methods:
    Generic ShowInventory(...);
    void DismissInventory(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IItemUseConfirmationGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IItemUseConfirmationGuiController Create(...);
    /*[05]*/ IItemUseConfirmationGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Encounter
class IItemUseConfirmationGuiController {
    // Methods:
    void Initialize(...);
}

// Namespace: Niantic.Holoholo.Encounter
class NamePlate {
    // Fields:
    Text nameText;
    Text cpText;
    Text messageText;
    GameObject messageHolder;
    GameObject captureIndicator;
    Transform targetTransform;
    CanvasGroup canvasGroup;
    RectTransform rect;
    Coroutine updateUIToTarget;

    // Methods:
    void .ctor(...);
    String get_PokemonName(...);
    void set_PokemonName(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void SetPokemonUI(...);
    void SetMessageUI(...);
    void ChangeCanvasGroupAlpha(...);
    void SetFollowTarget(...);
    IEnumerator DoUpdateUIPostionToTarget(...);
    PokemonProto GetHighestCPPokemon(...);
    String DetermineCPString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class Pokeball {
    // Fields:
    float MISS_RPC_WAIT_TIMEOUT_S;
    State currentStateCache;
    CatchPokemonOutProto catchPokemonOutProto;
    GameObject pokeBallPrefab;
    GameObject greatBallPrefab;
    GameObject ultraBallPrefab;
    GameObject masterBallPrefab;
    Vector3 relativePositionFromCamera;
    float curveBallModifier;
    float minSpinParticleAmount;
    float dragSnapSpeed;
    float reticleCollisionMargin;
    float overshootCorrection;
    Animator animator;
    PokeballEffects effects;
    Rigidbody body;
    Coroutine stateCoroutine;
    boolean isDragging;
    boolean launched;
    int bounceCount;
    Vector2 dragPosition;
    GameObject asset;
    Reticle reticle;
    IEncounterPokemon pokemon;
    Vector3 force;
    ICameraRig cameraRig;
    IBehaviourService behaviourService;
    GameMasterData gameMaster;
    BlobShadow blobShadow;
    boolean started;
    Generic OnStateChanged;
    CaptureProbabilityProto <CaptureProbabilityProto>k__BackingField;
    float <ReticleSize>k__BackingField;
    boolean <HitTarget>k__BackingField;
    boolean <HitInReticle>k__BackingField;
    Item <BallType>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnStateChanged(...);
    void remove_OnStateChanged(...);
    State get_CurrentState(...);
    void set_CurrentState(...);
    CaptureProbabilityProto get_CaptureProbabilityProto(...);
    void set_CaptureProbabilityProto(...);
    void SetCatchPokemonOutProto(...);
    float get_ReticleSize(...);
    void set_ReticleSize(...);
    float get_ServerReticleSize(...);
    float get_SpinAmount(...);
    boolean get_HitTarget(...);
    void set_HitTarget(...);
    boolean get_HitInReticle(...);
    void set_HitInReticle(...);
    Item get_BallType(...);
    void set_BallType(...);
    float get_OvershootCorrection(...);
    void set_OvershootCorrection(...);
    float get_MinSpinParticleAmount(...);
    void set_MinSpinParticleAmount(...);
    float get_DragSnapSpeed(...);
    void set_DragSnapSpeed(...);
    void Setup(...);
    void OnDestroy(...);
    void SetActive(...);
    void Reset(...);
    void Drag(...);
    void EndDrag(...);
    void Launch(...);
    void Spin(...);
    BallHitGrade GetBallHitGrade(...);
    void Start(...);
    void OnEnable(...);
    void SfidaThrow(...);
    void OnTriggerEnter(...);
    void OnCollisionEnter(...);
    void FixedUpdate(...);
    boolean TryHitPokemon(...);
    float GetPerfectThrowSpeed(...);
    Vector3 CorrectLaunchVelocity(...);
    IEnumerator RunStateMachine(...);
    void Reflect(...);
    void ShowReticle(...);
    float GetCaptureChance(...);
    Vector3 ScreenToWorldPoint(...);
    GameObject LoadAsset(...);
    int GetNumShakes(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class State {
    // Fields:
    int value__;
    State None = 0;
    State Spawn = 1;
    State Idle = 2;
    State Drag = 3;
    State Fly = 4;
    State Miss = 5;
    State Hit = 6;
    State Open = 7;
    State Close = 8;
    State Drop = 9;
    State Breakout = 10;
    State Catched = 11;
    State NoPokeball = 12;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class CatchPokemonOutProto {
    // Fields:
    int StatusFieldNumber = 1;
    int MissPercentFieldNumber = 2;
    int CapturedPokemonIdFieldNumber = 3;
    int ScoresFieldNumber = 4;
    Generic _parser;
    Status status_;
    double missPercent_;
    ulong capturedPokemonId_;
    CaptureScoreProto scores_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CatchPokemonOutProto Clone(...);
    Status get_Status(...);
    void set_Status(...);
    double get_MissPercent(...);
    void set_MissPercent(...);
    ulong get_CapturedPokemonId(...);
    void set_CapturedPokemonId(...);
    CaptureScoreProto get_Scores(...);
    void set_Scores(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CatchPokemonOutProto <_parser>m__139(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CatchPokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status CATCH_ERROR = 0;
    Status CATCH_SUCCESS = 1;
    Status CATCH_ESCAPE = 2;
    Status CATCH_FLEE = 3;
    Status CATCH_MISSED = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class CaptureScoreProto {
    // Fields:
    int ActivityTypeFieldNumber = 1;
    int ExpFieldNumber = 2;
    int CandyFieldNumber = 3;
    int StardustFieldNumber = 4;
    Generic _parser;
    Generic _repeated_activityType_codec;
    Generic activityType_;
    Generic _repeated_exp_codec;
    Generic exp_;
    Generic _repeated_candy_codec;
    Generic candy_;
    Generic _repeated_stardust_codec;
    Generic stardust_;
    Generic <>f__am$cache9;
    Generic <>f__am$cacheA;
    Generic <>f__am$cacheB;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CaptureScoreProto Clone(...);
    Generic get_ActivityType(...);
    Generic get_Exp(...);
    Generic get_Candy(...);
    Generic get_Stardust(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CaptureScoreProto <_parser>m__141(...);
    int <_repeated_activityType_codec>m__142(...);
    HoloActivityType <_repeated_activityType_codec>m__143(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CaptureScoreProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloActivityType {
    // Fields:
    int value__;
    HoloActivityType ACTIVITY_UNKNOWN = 0;
    HoloActivityType ACTIVITY_CATCH_POKEMON = 1;
    HoloActivityType ACTIVITY_CATCH_LEGEND_POKEMON = 2;
    HoloActivityType ACTIVITY_FLEE_POKEMON = 3;
    HoloActivityType ACTIVITY_DEFEAT_FORT = 4;
    HoloActivityType ACTIVITY_EVOLVE_POKEMON = 5;
    HoloActivityType ACTIVITY_HATCH_EGG = 6;
    HoloActivityType ACTIVITY_WALK_KM = 7;
    HoloActivityType ACTIVITY_POKEDEX_ENTRY_NEW = 8;
    HoloActivityType ACTIVITY_CATCH_FIRST_THROW = 9;
    HoloActivityType ACTIVITY_CATCH_NICE_THROW = 10;
    HoloActivityType ACTIVITY_CATCH_GREAT_THROW = 11;
    HoloActivityType ACTIVITY_CATCH_EXCELLENT_THROW = 12;
    HoloActivityType ACTIVITY_CATCH_CURVEBALL = 13;
    HoloActivityType ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14;
    HoloActivityType ACTIVITY_CATCH_MILESTONE = 15;
    HoloActivityType ACTIVITY_TRAIN_POKEMON = 16;
    HoloActivityType ACTIVITY_SEARCH_FORT = 17;
    HoloActivityType ACTIVITY_RELEASE_POKEMON = 18;
    HoloActivityType ACTIVITY_HATCH_EGG_SMALL_BONUS = 19;
    HoloActivityType ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20;
    HoloActivityType ACTIVITY_HATCH_EGG_LARGE_BONUS = 21;
    HoloActivityType ACTIVITY_DEFEAT_GYM_DEFENDER = 22;
    HoloActivityType ACTIVITY_DEFEAT_GYM_LEADER = 23;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Encounter
class PokeballEffects {
    // Fields:
    cmod_reqd clips;
    cmod_reqd particles;
    SoundController soundController;

    // Methods:
    void .ctor(...);
    void AnimPlaySound(...);
    ParticleSystem CreateVfx(...);
    void PlaySound(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BallHitGrade {
    // Fields:
    int value__;
    BallHitGrade Miss = 0;
    BallHitGrade Normal = 1;
    BallHitGrade Nice = 2;
    BallHitGrade Great = 3;
    BallHitGrade Excellent = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterToast {
    // Fields:
    Text text;
    Action OnDismiss;

    // Methods:
    void .ctor(...);
    void add_OnDismiss(...);
    void remove_OnDismiss(...);
    String get_Text(...);
    void set_Text(...);
    void Dismiss(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Newtonsoft.Json.Serialization
class Action {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class EncounterView {
    // Fields:
    float minRadForEncounter;
    float maxRadForEncounter;
    float minEncounterViewSize;
    float maxEncounterViewSize;
    float minPokeHeight;
    float maxPokeHeight;
    float cameraHeight;
    float screenBottomAlign;
    Animator cameraRigAnim;
    Transform cameraRigLoc;
    Range1 pitchRange;
    GyroTracker gyro;
    EncounterArena arena;
    Vector3 cameraPosOrig;
    Vector3 cameraPosUse;
    Vector3 cameraFwdOrig;
    Vector3 camDir;
    boolean ballDropMode;
    BattleCameraUpdate introCamera;
    CameraShakeUpdate camShake;
    Vector3 <targetPos>k__BackingField;
    Vector3 <targetFwd>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    BackgroundController get_bgController(...);
    IEncounterPokemon get_encounterPokemon(...);
    Vector3 get_targetPos(...);
    void set_targetPos(...);
    Vector3 get_targetFwd(...);
    void set_targetFwd(...);
    void Init(...);
    void StartIntro(...);
    void ExitIntro(...);
    boolean IntroRunning(...);
    boolean IsWebCamMode(...);
    void Update(...);
    void SetBallDropMode(...);
    Vector3 GetEncounterCamPos(...);
    void ResetCameraPosition(...);
    Vector3 GetTargetPos(...);
    void Awake(...);
    void AdjustBackgroundLocation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Geometry
class Range1 {
    // Fields:
    float min;
    float max;

    // Methods:
    boolean Contains(...);
    boolean ContainsAngleDeg(...);
    float Clamp(...);
    float ClampAngleDeg(...);
    float Angle360(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleCameraUpdate {
    // Fields:
    Generic targets;
    int pokemonID1;
    int pokemonID2;
    Vector3 pos1;
    Vector3 pos2;
    float angle1;
    float angle2;
    float time;
    BattleCameraSequence cameraSequence;
    int cameraStep;
    float startDist;
    float startHgt;
    float startCtr;
    float battleScreenTop;
    float battleScreenBottom;
    boolean mirror;
    boolean setMirror;
    Vector3 startPos;
    Vector3 startFwd;
    Vector3 cameraPosSpeed;
    Vector3 cameraAngSpeed;
    CameraTransform currTransform;
    CameraTransform startTransform;

    // Methods:
    void Init(...);
    boolean Complete(...);
    String CurrCameraName(...);
    boolean CompleteSequence(...);
    void SetPokemon(...);
    void AddTarget(...);
    void ClearTargets(...);
    void Invalidate(...);
    boolean IsActive(...);
    Vector3 DirAng(...);
    CameraTransform FramePokemon(...);
    BattleCameraSequence SetCamera(...);
    boolean CameraValid(...);
    BattleCameraSequence SetCamera(...);
    CameraTransform EndTransform(...);
    CameraTransform Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleCameraSequence {
    // Fields:
    String name;
    Generic sequence;

    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraTransform {
    // Fields:
    Vector3 position;
    Quaternion rotation;

    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraShakeUpdate {
    // Fields:
    int index;
    float time;
    float timeDiv;
    float impactScale;
    float damp;
    Vector3 lastSpeed;
    Vector3 lastOffs;

    // Methods:
    void Set(...);
    void Invalidate(...);
    Vector3 RandomVector3(...);
    Vector3 ClampVector3(...);
    CameraTransform Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class BackgroundController {
    // Fields:
    GameObject park;
    Renderer snapshotPanel;
    WebCamProjector webCam;
    ILocationProvider locationProvider;
    Material snapshotMaterial;
    BackgroundMode bgMode;
    Generic OnBackgroundChanged;

    // Methods:
    void .ctor(...);
    void add_OnBackgroundChanged(...);
    void remove_OnBackgroundChanged(...);
    BackgroundMode get_Mode(...);
    void set_Mode(...);
    void OnDisable(...);
    void Start(...);
    void OnDestroy(...);
    void SetBackgroundMode(...);
    void TakeWebCamSnapshot(...);
    void ResumeWebCam(...);
    void StopWebCam(...);
    void SetGroundColor(...);
    void CleanupMaterial(...);
    void CleanupTexture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BackgroundMode {
    // Fields:
    int value__;
    BackgroundMode WebCam = 0;
    BackgroundMode Park = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ EncounterUIController Create(...);
    /*[05]*/ EncounterUIController Create(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterCaptureState {
    // Fields:
    EncounterSummaryState summaryStatePrefab;
    IRpcService rpcService;
    IUserPromptsService userPrompts;
    ICameraRig cameraRig;
    EncounterInteractionState interactionState;
    WildPokemonEncounterState encounterState;
    EncounterArena arena;
    II18n i18n;
    IIapService iapService;
    Music fanfareMusic;
    Music pokemonCapturedMusic;
    Generic upsightDict;
    boolean shouldPopCameraController;
    CatchPokemonOutProto catchPokemonOutProto;
    OnCaptureCompleteDelegate onCaptureComplete;

    // Methods:
    void .ctor(...);
    Pokeball get_Pokeball(...);
    EncounterView get_EncounterView(...);
    IEncounterPokemon get_EncounterPokemon(...);
    EncounterUIController get_UIController(...);
    BackgroundController get_BGController(...);
    void EnterState(...);
    void ExitState(...);
    void TryCapture(...);
    IEnumerator PlayDropCamera(...);
    void HandleCatchPokemonOutProto(...);
    IEnumerator ProcessPokemonOutProto(...);
    IEnumerator PokemonBreakOut(...);
    IEnumerator PlayBreakOutSequnce(...);
    IEnumerator PokemonFlee(...);
    IEnumerator PokemonCaptured(...);
    IEnumerator WaitForPokeballState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterSummaryState {
    // Fields:
    EncounterSummaryUI summaryUIPrefab;
    SoundController soundController;
    ICameraRig cameraRig;
    Generic factory;
    IPokemonInfoGuiService guiService;
    IPokemonCutsceneService cutsceneService;
    EncounterArena arena;
    IToastService toastService;
    GameMasterData gameMasterData;
    Action onStateCompleted;
    EncounterSummaryUI summaryUI;
    CatchPokemonOutProto catchPokemonOutProto;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void Show(...);
    void ShowCapturedPokemonInfo(...);
    void ShowPokemonInfo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterSummaryUI {
    // Fields:
    ScoreListAdapter scoreList;
    Text candyCountText;
    Text stardustCountText;
    PokemonCandySprite candySprite;
    IPokemonInfoGuiService guiService;
    WildPokemonEncounterState wildPokemonEncounterState;
    IXpAwardService xpAwardService;
    GameMasterData gameMasterData;
    IToastService toastService;
    Action OnDismissed;
    int totalXP;

    // Methods:
    void .ctor(...);
    void Dismiss(...);
    void SetScores(...);
    void ShowXP(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScoreListAdapter {
    // Fields:
    Generic DESCRIPTIONS;
    ScoreItemView itemViewPrefab;
    Text totalExpLabel;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnScoresChanged(...);
    ScoreItemView CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ScoreItemView CreateView(...);
}

// Namespace: 
class ScoreItemView {
    // Fields:
    Text descriptionText;
    Text expText;
    int exp;

    // Methods:
    void .ctor(...);
    void set_Description(...);
    String get_Description(...);
    void set_Exp(...);
    int get_Exp(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonCandySprite {
    // Fields:
    cmod_reqd candyPrimaryImg;
    cmod_reqd candySecondaryImg;
    IPokemonCandySpritesService candyService;

    // Methods:
    void .ctor(...);
    void ColorizeCandy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IPokemonCandySpritesService {
    // Methods:
    CandyColor FamilyColor(...);
}

// Namespace: 
class CandyColor {
    // Fields:
    Color primaryColor;
    Color secondaryColor;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class IPokemonInfoGuiService {
    // Methods:
    void ShowPokemonInfo(...);
    void ShowPokemonInfo(...);
    void DismissPokemonInfo(...);
    void HidePokemonInfo(...);
    void RefreshPokemonInfo(...);
}

// Namespace: Niantic.Holoholo.Cutscenes
class IPokemonCutsceneService {
    // Methods:
    IPokemonCutsceneGuiController get_ActivePokemonCutsceneGui(...);
    IPromise PlayEvolveCutscene(...);
    IPromise PlayEggHatchCutscene(...);
    IPromise PlayNewSpeciesCutscene(...);
}

// Namespace: Niantic.Holoholo.Cutscenes
class IPokemonCutsceneGuiController {
    // Methods:
    IPromise PlayEvolveCutscene(...);
    IPromise PlayNewSpeciesCutscene(...);
    IPromise PlayEggHatchCutscene(...);
    boolean CheckAndTransitionToNewSpeciesCutcene(...);
    void EnableEggHatchedPokemon(...);
    void RefreshEvolvedPokemon(...);
    void AnimatePokemonJump(...);
    void AnimatePokemonAttack2(...);
    void PlayPokemonVoice(...);
    void EvolveAnimationComplete(...);
    void EggHatchAnimationComplete(...);
    void NewSpeciesCaughtAnimationComplete(...);
    void ShowEvolveXp(...);
    void ShowEggHatchXp(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IIapService {
    // Methods:
    Generic get_IapItems(...);
    int get_Coins(...);
    int get_Stardusts(...);
    boolean get_DailyBonusReady(...);
    void Refresh(...);
    Generic Buy(...);
    Generic CheckDailyBonus(...);
    void HoldObserver(...);
    void ReleaseObserver(...);
    void AddCoins(...);
    IReceipt Observe(...);
}

// Namespace: 
class OnCaptureCompleteDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterSnapshotState {
    // Fields:
    TakeScreenShot screenShotPrefab;
    SoundController soundController;
    EncounterArena arena;
    ICameraRig cameraRig;
    IBehaviourService behaviourService;
    TakeScreenShot screenShot;
    Action <OnScreenshotDismissed>k__BackingField;

    // Methods:
    void .ctor(...);
    EncounterUIController get_UIController(...);
    Action get_OnScreenshotDismissed(...);
    void set_OnScreenshotDismissed(...);
    void EnterState(...);
    void ExitState(...);
    void HandleScreenshotDismissed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Encounter
class TakeScreenShot {
    // Fields:
    String FILE_NAME_FORMAT = "IMG_{0:yyyy-MM-dd-HHmmssff}.png";
    ScreenCapturer screenCapturer;
    SnapshotPreview previewPrefab;
    SnapshotSignature signaturePrefab;
    AudioClip shutterSound;
    Action OnDismissed;

    // Methods:
    void .ctor(...);
    void add_OnDismissed(...);
    void remove_OnDismissed(...);
    void Dismiss(...);
    void TakeHiResShot(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Snapshot
class ScreenCapturer {
    // Fields:
    float resolution;
    String filePath;
    LayerMask ignoreLayers;
    Texture2D snapshot;

    // Methods:
    void .ctor(...);
    float get_Resolution(...);
    void set_Resolution(...);
    String get_FilePath(...);
    void set_FilePath(...);
    void Capture(...);
    void Capture(...);
    IEnumerator DoCapture(...);
    void SaveTexture(...);
    IEnumerator WaitAndRefresh(...);
    void SaveTexture(...);
    Texture2D CopyFromRenderTexture(...);
    void RefreshGallery(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Snapshot
class SnapshotPreview {
    // Fields:
    ScreenCapturer screenCapturer;
    cmod_reqd buttons;
    RawImage image;

    // Methods:
    void .ctor(...);
    void SetTexture(...);
    void Show(...);
    void Hide(...);
    void OnEnable(...);
    void ClickSave(...);
    void ClickDiscard(...);
    void OnAnimationEnd(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Snapshot
class SnapshotSignature {
    // Fields:
    Text text;
    Canvas canvas;

    // Methods:
    void .ctor(...);
    void SetText(...);
    void SetCamera(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    ScreenWipeGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ScreenWipeGuiController Create(...);
    /*[05]*/ ScreenWipeGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class ScreenWipeGuiController {
    // Fields:
    RectTransform targetTransform;
    cmod_reqd endPositions;
    AnimationCurve wipeCurve;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    IEnumerator RunWipe(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterParkCameraController {
    // Fields:
    float maxYAngle;
    float startTweenTime;
    GyroTracker gyro;
    IBehaviourService behaviourService;
    EncounterArena arena;
    Coroutine animationCoroutine;
    Vector3 rotationBase;

    // Methods:
    void .ctor(...);
    Vector3 get_userRot(...);
    void OnStart(...);
    void OnStop(...);
    IEnumerator AnimateCamera(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterArCameraController {
    // Fields:
    float GYRO_SIGNAL_SAMPLE_COUNT = 12.000000;
    float cameraHeight;
    float learpSpeed;
    float badGyroDetectionTime;
    GyroTracker gyro;
    IBehaviourService behaviourService;
    EncounterArena arena;
    HealthyGyroClassifier healthyGyroClassifier;
    IUserPromptsService promptService;
    boolean leaveArModePromptShown;
    IArService arService;
    Coroutine animationCoroutine;

    // Methods:
    void .ctor(...);
    void OnStart(...);
    void OnStop(...);
    IEnumerator AnimateCamera(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Holoholo.SignalProcessing
class HealthyGyroClassifier {
    // Fields:
    float healthyVariance;

    // Methods:
    void .ctor(...);
    float Classify(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float Classify(...);
}

// Namespace: Niantic.Holoholo.Map
class WildMapPokemon {
    // Fields:
    GameObject spawnFxPrefab;
    ILocationProvider locationProvider;
    IRpcHandler rpcHandler;
    IToastService toastService;
    IUserPromptsService userPrompts;
    IMapEntityService mapEntityService;
    IEncounterState encounterState;
    WildPokemonProto pokemonProto;
    EncounterOutProto encounterProto;

    // Methods:
    void .ctor(...);
    ulong get_EncounterId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    String get_SpawnPointId(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    boolean get_VisibleOnMap(...);
    void set_VisibleOnMap(...);
    void UpdateData(...);
    Generic SendEncounterRequest(...);
    boolean VerifyProto(...);
    void PlaySpawnFx(...);
    void HandleDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_Transform(...);
    /*[06]*/ ulong get_EncounterId(...);
    /*[07]*/ PokemonProto get_Pokemon(...);
    /*[08]*/ int get_PokemonId(...);
    /*[09]*/ LatLng get_Location(...);
    /*[10]*/ String get_SpawnPointId(...);
    /*[11]*/ HoloCharacter get_HoloCharacter(...);
    /*[12]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[13]*/ int get_Cp(...);
    /*[14]*/ Generic SendEncounterRequest(...);
    /*[15]*/ Generic TryCapture(...);
    /*[16]*/ void Destroy(...);
    /*[17]*/ ulong get_EncounterId(...);
    /*[18]*/ String get_SpawnPointId(...);
    /*[19]*/ PokemonProto get_Pokemon(...);
    /*[20]*/ int get_PokemonId(...);
    /*[21]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[22]*/ int get_Cp(...);
    /*[23]*/ Generic SendEncounterRequest(...);
    /*[24]*/ Generic TryCapture(...);
    /*[25]*/ void PlaySpawnFx(...);
    /*[26]*/ void HandleDestroy(...);
    /*[27]*/ void UpdateData(...);
    /*[28]*/ boolean get_VisibleOnMap(...);
    /*[29]*/ void set_VisibleOnMap(...);
}

// Namespace: Niantic.Holoholo.Encounter
class IEncounterState {
    // Methods:
    void EncounterError(...);
}

// Namespace: Holoholo.Rpc
class WildPokemonProto {
    // Fields:
    int EncounterIdFieldNumber = 1;
    int LastModifiedMsFieldNumber = 2;
    int LatitudeFieldNumber = 3;
    int LongitudeFieldNumber = 4;
    int SpawnPointIdFieldNumber = 5;
    int PokemonFieldNumber = 7;
    int TimeTillHiddenMsFieldNumber = 11;
    Generic _parser;
    ulong encounterId_;
    long lastModifiedMs_;
    double latitude_;
    double longitude_;
    String spawnPointId_;
    PokemonProto pokemon_;
    int timeTillHiddenMs_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    WildPokemonProto Clone(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    long get_LastModifiedMs(...);
    void set_LastModifiedMs(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    String get_SpawnPointId(...);
    void set_SpawnPointId(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    int get_TimeTillHiddenMs(...);
    void set_TimeTillHiddenMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    WildPokemonProto <_parser>m__92(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ WildPokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EncounterOutProto {
    // Fields:
    int PokemonFieldNumber = 1;
    int BackgroundFieldNumber = 2;
    int StatusFieldNumber = 3;
    int CaptureProbabilityFieldNumber = 4;
    Generic _parser;
    WildPokemonProto pokemon_;
    Background background_;
    Status status_;
    CaptureProbabilityProto captureProbability_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EncounterOutProto Clone(...);
    WildPokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    Background get_Background(...);
    void set_Background(...);
    Status get_Status(...);
    void set_Status(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    void set_CaptureProbability(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EncounterOutProto <_parser>m__137(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EncounterOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Background {
    // Fields:
    int value__;
    Background PARK = 0;
    Background DESERT = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status ENCOUNTER_ERROR = 0;
    Status ENCOUNTER_SUCCESS = 1;
    Status ENCOUNTER_NOT_FOUND = 2;
    Status ENCOUNTER_CLOSED = 3;
    Status ENCOUNTER_POKEMON_FLED = 4;
    Status ENCOUNTER_NOT_IN_RANGE = 5;
    Status ENCOUNTER_ALREADY_HAPPENED = 6;
    Status POKEMON_INVENTORY_FULL = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PlayerHudGuiController {
    // Fields:
    Text playerName;
    Text playerNameShadow;
    Text playerLevel;
    Text playerLevelShadow;
    ProgressBar expBar;
    Image expBarImage;
    Image avatarFrameBack;
    Image avatarFrameFront;
    GameMasterData gameMasterData;
    IPlayerProfileGuiService playerProfileGuiService;
    IColorUtil colorUtil;
    IReceipt playerObservationReceipt;

    // Methods:
    void .ctor(...);
    void Init(...);
    void HandleDestroy(...);
    void VisibilityUpdated(...);
    void RefreshPlayerStats(...);
    void ClickProfile(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class IPlayerProfileGuiService {
    // Methods:
    void ShowLocalPlayerProfile(...);
    void DismissActiveProfile(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PokeNav {
    // Fields:
    String PULSE = "Pulse";
    PokeNavExpandedGuiController expandedPanelPrefab;
    PokeNavPanel miniPanel;
    PokeNavIcon selectedPokemon;
    float closeWaitTime;
    int maxPokemonNearerThanSelected;
    AudioClip selectSound;
    Animator animator;
    GlobalSettings globalSettings;
    IBehaviourService behaviourService;
    ILocationProvider locationProvider;
    Factory expandedGuiFactory;
    IMapEntityService mapEntityService;
    IPokeNavExpandedGuiController expandedGui;
    Coroutine refreshUICoroutine;
    Generic nearbyPokemon;
    Generic nearbyPokemonByRange;
    Generic OnPokeNavSelected;
    Generic <>f__am$cache11;

    // Methods:
    void .ctor(...);
    void add_OnPokeNavSelected(...);
    void remove_OnPokeNavSelected(...);
    Generic get_NearbyPokemon(...);
    void Init(...);
    void OnApplicationQuit(...);
    void HandleDestroy(...);
    void AddNearbyPokemon(...);
    void RemoveNearbyPokemon(...);
    void ShowExpandedPanel(...);
    void HandlePokemonSelected(...);
    IEnumerator CloseExpandedPanelAfterSelection(...);
    IEnumerator RefreshUI(...);
    void RecomputeNearbyPokemonByRange(...);
    int <RecomputeNearbyPokemonByRange>m__4A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void add_OnPokeNavSelected(...);
    /*[18]*/ void remove_OnPokeNavSelected(...);
    /*[19]*/ void AddNearbyPokemon(...);
    /*[20]*/ void RemoveNearbyPokemon(...);
    /*[21]*/ Generic get_NearbyPokemon(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PokeNavExpandedGuiController {
    // Fields:
    AudioClip openSound;
    AudioClip closeSound;
    IInputEventService inputEventService;
    IReceipt backButtonListenerReceipt;

    // Methods:
    void .ctor(...);
    PokeNavPanel get_PokeNavPanel(...);
    void Open(...);
    void Close(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ PokeNavPanel get_PokeNavPanel(...);
    /*[18]*/ void Open(...);
    /*[19]*/ void Close(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PokeNavPanel {
    // Fields:
    RectTransform contentRect;
    int maxPokemonCount;
    PokeNavIcon iconPrefab;
    IInstantiator instantiator;
    cmod_reqd icons;
    ulong selectedEncounterId;
    Generic OnPokemonSelected;

    // Methods:
    void .ctor(...);
    void add_OnPokemonSelected(...);
    void remove_OnPokemonSelected(...);
    void Init(...);
    void UpdateIcons(...);
    void HandleIconClicked(...);
    void UpdateSelection(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PokeNavIcon {
    // Fields:
    float nearThreshold;
    float midThreshold;
    float farThreshold;
    Image iconImage;
    RectTransform cursor;
    Image distImage;
    cmod_reqd distSprite;
    Color silhouetteColor;
    SpriteLookup spriteLookup;
    Generic OnClick;
    NearbyPokemonProto <Proto>k__BackingField;
    float <Distance>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    NearbyPokemonProto get_Proto(...);
    void set_Proto(...);
    float get_Distance(...);
    void set_Distance(...);
    boolean get_Selected(...);
    void set_Selected(...);
    void Click(...);
    void SetUp(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class NearbyPokemonProto {
    // Fields:
    int PokedexNumberFieldNumber = 1;
    int DistanceMetersFieldNumber = 2;
    int EncounterIdFieldNumber = 3;
    Generic _parser;
    int pokedexNumber_;
    float distanceMeters_;
    ulong encounterId_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    NearbyPokemonProto Clone(...);
    int get_PokedexNumber(...);
    void set_PokedexNumber(...);
    float get_DistanceMeters(...);
    void set_DistanceMeters(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    NearbyPokemonProto <_parser>m__18D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ NearbyPokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Zenject
class IInstantiator {
    // Methods:
    cmod_opt Instantiate(...);
    mvar Instantiate(...);
    cmod_opt InstantiateExplicit(...);
    mvar InstantiateExplicit(...);
    mvar InstantiateExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    mvar InstantiateComponentOnNewGameObjectExplicit(...);
    Component InstantiateComponent(...);
    cmod_opt InstantiateComponent(...);
    GameObject InstantiateGameObject(...);
    GameObject InstantiatePrefab(...);
    GameObject InstantiatePrefab(...);
    GameObject InstantiatePrefabResource(...);
    GameObject InstantiatePrefabResource(...);
    GameObject InstantiatePrefabResourceExplicit(...);
    GameObject InstantiatePrefabResourceExplicit(...);
    cmod_opt InstantiatePrefabForComponent(...);
    cmod_opt InstantiatePrefabForComponent(...);
    mvar InstantiatePrefabForComponent(...);
    mvar InstantiatePrefabForComponent(...);
    cmod_opt InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    cmod_opt InstantiatePrefabResourceForComponent(...);
    mvar InstantiatePrefabResourceForComponent(...);
    cmod_opt InstantiatePrefabResourceForComponentExplicit(...);
    mvar InstantiatePrefabResourceForComponentExplicit(...);
    cmod_opt InstantiateComponentOnNewGameObject(...);
    mvar InstantiateComponentOnNewGameObject(...);
    cmod_opt InstantiateComponentOnNewGameObjectExplicit(...);
    mvar InstantiateComponentOnNewGameObjectExplicit(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPokeNavExpandedGuiController Create(...);
    /*[05]*/ IPokeNavExpandedGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class IPokeNavExpandedGuiController {
    // Methods:
    PokeNavPanel get_PokeNavPanel(...);
    void Open(...);
    void Close(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class CompassGuiController {
    // Fields:
    AudioClip clickSound;
    RectTransform needleTransform;
    IMapController mapController;

    // Methods:
    void .ctor(...);
    void Update(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class MainMenuGuiController {
    // Fields:
    AudioClip itemBagSound;
    AudioClip storefrontSound;
    AudioClip pokedexSound;
    AudioClip pokemonInventorySound;
    ActionButton actionButton;
    String supportUrl;
    IUserPromptsService userPromptsService;
    IPlayerBuffService playerBuffService;
    IPokemonInventoryGuiService pokemonInventoryGuiService;
    Factory storefrontGuiFactory;
    Factory settingsGuiFactory;
    Factory pokedexListGuiFactory;
    Factory quickStartFactory;
    IItemInventoryGuiService itemInventoryGuiService;

    // Methods:
    void .ctor(...);
    void ClickItemBag(...);
    void ClickStorefront(...);
    void ClickPokedex(...);
    void ClickPokemonInventory(...);
    void ClickSettings(...);
    void ClickSupport(...);
    void ClickQuickStart(...);
    void ClickExit(...);
    boolean <ClickItemBag>m__47(...);
    void <ClickItemBag>m__48(...);
    void <ClickSupport>m__49(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class ActionButton {
    // Fields:
    Animator actionButtonAnimator;
    Animator topMenuAnimator;
    MapMenuDrag secretCursor;
    GameObject buttonCloseFullScreen;
    GameObject buttonClose;
    cmod_reqd buttonCanvases;
    AudioClip expandSound;
    AudioClip closeSound;
    boolean actionMenuOpen;
    IInputEventService inputEventService;
    IReceipt backButtonListenerReceipt;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OpenMenu(...);
    void CloseMenu(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MapMenuDrag {
    // Fields:
    GameObject itemBeingDragged;
    Animator actionMenuAnim;
    cmod_reqd buttonCanvas;
    cmod_reqd buttonDropTargets;
    RectTransform rectTransform;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void OnBeginDrag(...);
    void OnDrag(...);
    void OnEndDrag(...);
    void SetActive(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnDrag(...);
    /*[05]*/ void OnBeginDrag(...);
    /*[06]*/ void OnEndDrag(...);
}

// Namespace: Niantic.Holoholo.Items
class IPlayerBuffService {
    // Methods:
    void SelectBuff(...);
    Generic get_ActiveBuffs(...);
    boolean IsBuffTypeActive(...);
    void Show(...);
    void Hide(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IStorefrontGuiController Create(...);
    /*[05]*/ IStorefrontGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IStorefrontGuiController {
    // Methods:
    void OnCoinsSelected(...);
    void OnIapSelected(...);
    void ScrollToCategory(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ISettingsGuiController Create(...);
    /*[05]*/ ISettingsGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class ISettingsGuiController {
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPokedexListGuiController Create(...);
    /*[05]*/ IPokedexListGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class IPokedexListGuiController {
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ QuickStartHelper Create(...);
    /*[05]*/ QuickStartHelper Create(...);
}

// Namespace: Niantic.Holoholo.UI
class QuickStartHelper {
    // Fields:
    cmod_reqd quickStartKeys;
    cmod_reqd quickStartImages;
    IConversationService convoService;

    // Methods:
    void .ctor(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class TimeOfDay {
    // Fields:
    Light sun;
    int sunrise;
    int sunset;
    Color ambientColorDay;
    Color ambientColorNight;
    Color fogColorDay;
    Color fogColorNight;
    Vector2 fogDistanceDay;
    Vector2 fogDistanceNight;
    Color ground_park_day;
    Color ground_camera_day;
    Material skyDomeMat;
    Texture skyDomeDayTex;
    Texture skyDomeNightTex;
    boolean enableFog;
    Quaternion sunLightDir;
    Vector3 mapLightDir;

    // Methods:
    void .ctor(...);
    void Awake(...);
    DayPeriod get_DayPeriod(...);
    void ApplyTimeOfDay(...);
    void SetTOD(...);
    void SetMapLightDirection(...);
    void SetEncounterLightDirection(...);
    void SetGroundColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DayPeriod get_DayPeriod(...);
    /*[05]*/ void ApplyTimeOfDay(...);
    /*[06]*/ void SetMapLightDirection(...);
    /*[07]*/ void SetEncounterLightDirection(...);
}

// Namespace: Niantic.Holoholo
class IBatterySaverService {
    // Methods:
    boolean get_Enabled(...);
    void set_Enabled(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IEggHatchGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEggHatchGuiController Create(...);
    /*[05]*/ IEggHatchGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class IEggHatchGuiController {
    // Methods:
    void Initialize(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    ILevelUpGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ILevelUpGuiController Create(...);
    /*[05]*/ ILevelUpGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class ILevelUpGuiController {
    // Methods:
    void Initialize(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPlayerHudGuiController Create(...);
    /*[05]*/ IPlayerHudGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class IPlayerHudGuiController {
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IMainMenuGuiController Create(...);
    /*[05]*/ IMainMenuGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class IMainMenuGuiController {
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICompassGuiController Create(...);
    /*[05]*/ ICompassGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class ICompassGuiController {
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPokeNav Create(...);
    /*[05]*/ IPokeNav Create(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class IPokeNav {
    // Methods:
    void add_OnPokeNavSelected(...);
    void remove_OnPokeNavSelected(...);
    void AddNearbyPokemon(...);
    void RemoveNearbyPokemon(...);
    Generic get_NearbyPokemon(...);
}

// Namespace: Niantic.Holoholo.Map
class MapContentHandler {
    // Fields:
    float UPDATE_THROTTLE_S = 0.300000;
    float MIN_TIME_BETWEEN_UPDATES_S = 5.000000;
    float MAX_TIME_BETWEEN_UPDATES_S = 30.000000;
    float MIN_DISTANCE_BETWEEN_UPDATES_M = 10.000000;
    int GET_OBJECTS_TIMEOUT_MS = 70000;
    int GET_OBJECTS_RETRY_MS = 1000;
    long CELL_TIME_BETWEEN_UPDATES_MS = 5000;
    Generic getObjectsRpcPromise;
    IMapEntityService entityService;
    SpaceTimeThrottle fetchThrottle;
    ILocationProvider locationProvider;
    SpatialCacheManager cacheManager;
    Generic cellCache;
    Generic sceneCellCache;
    Generic sceneCells;
    float timeUntilUpdateVisibleCells;
    Generic removedWildPokemon;
    IRpcHandler rpc;
    GlobalSettings globalSettings;
    boolean <ProcessingEntitiesPaused>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_ProcessingEntitiesPaused(...);
    void set_ProcessingEntitiesPaused(...);
    IPromise WaitForUnpaused(...);
    IEnumerator WaitForUnpausedRoutine(...);
    ICell GetCell(...);
    void UpdateCells(...);
    void ClientRemoveWildPokemon(...);
    void AddToScene(...);
    void UpdateScene(...);
    void RemoveFromScene(...);
    void Start(...);
    void Update(...);
    void OnDestroy(...);
    void FetchCells(...);
    void GetMapObjectsCallback(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void UpdateCells(...);
    /*[05]*/ ICell GetCell(...);
}

// Namespace: 
class SpaceTimeThrottle {
    // Fields:
    ITicker ticker;
    LatLng badLocation;
    float lastUpdateS;
    float minIntervalS;
    float maxIntervalS;
    float minDistanceM;
    LatLng lastLocation;
    ILocationProvider locationProvider;

    // Methods:
    void .ctor(...);
    boolean Check(...);
    void SetLocationProvider(...);
    void SetMinUpdateInterval(...);
    void SetMaxUpdateInterval(...);
    void SetMinDistance(...);
    float ComputeDistanceTraveled(...);
    LatLng GetLocation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class ITicker {
    // Methods:
    float get_Time(...);
}

// Namespace: NianticLabs.Platform
class SpatialCacheManager {
    // Fields:
    CellEventDelegateType cellEventDelegate;
    Generic fetchCells;
    Generic deletedCells;
    Generic addToSceneCells;
    Generic removeFromSceneCells;
    Generic updatedSceneCells;

    // Methods:
    void .ctor(...);
    void CellEventCallback(...);
    void SetCellData(...);
    void UpdateVisibleCells(...);
    void Clear(...);
    void .cctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CellEventDelegateType {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: NianticLabs.Platform
class ICell {
}

// Namespace: Niantic.Holoholo.Map
class MapEntityService {
    // Fields:
    MapEntityCell mapEntityCellPrefab;
    Factory cellFactory;
    Factory pokestopFactory;
    Factory gymFactory;
    Factory spawnPointFactory;
    Factory wildPokemonFactory;
    IPlayerProximityService playerProximityService;
    Generic cells;
    Generic OnNearbyPokemonAdded;
    Generic OnNearbyPokemonRemoved;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void add_OnNearbyPokemonAdded(...);
    void remove_OnNearbyPokemonAdded(...);
    void add_OnNearbyPokemonRemoved(...);
    void remove_OnNearbyPokemonRemoved(...);
    Generic get_Cells(...);
    void Setup(...);
    void OnDestroy(...);
    void UpdatePokemonVisibility(...);
    void UpdateCell(...);
    void RemoveCell(...);
    void UpdatePois(...);
    void AddSpawnPoints(...);
    void UpdateNearbyPokemon(...);
    void UpdateWildPokemon(...);
    void RemoveWildPokemon(...);
    ulong <RemoveCell>m__8E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnNearbyPokemonAdded(...);
    /*[05]*/ void remove_OnNearbyPokemonAdded(...);
    /*[06]*/ void add_OnNearbyPokemonRemoved(...);
    /*[07]*/ void remove_OnNearbyPokemonRemoved(...);
    /*[08]*/ void UpdateCell(...);
    /*[09]*/ void RemoveCell(...);
    /*[10]*/ void UpdatePois(...);
    /*[11]*/ void AddSpawnPoints(...);
    /*[12]*/ void UpdateNearbyPokemon(...);
    /*[13]*/ void UpdateWildPokemon(...);
    /*[14]*/ void RemoveWildPokemon(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    MapEntityCell Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ MapEntityCell Create(...);
    /*[05]*/ MapEntityCell Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IMapPokestop Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IMapPokestop Create(...);
    /*[05]*/ IMapPokestop Create(...);
}

// Namespace: 
class Factory {
    // Fields:
    GameMasterData gameMasterData;
    GlobalSettings globalSettings;

    // Methods:
    void .ctor(...);
    IMapGym Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IMapGym Create(...);
    /*[05]*/ IMapGym Create(...);
}

// Namespace: Niantic.Holoholo.Gym
class IMapGym {
    // Methods:
    void Initialize(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    MapSpawnPoint Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ MapSpawnPoint Create(...);
    /*[05]*/ MapSpawnPoint Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    WildMapPokemon Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ WildMapPokemon Create(...);
    /*[05]*/ WildMapPokemon Create(...);
}

// Namespace: 
class MapViewHandler {
    // Fields:
    WorldMapRenderer mapRendererCached;
    Camera mapCameraCached;
    MapConfig mapConfig;
    LookAtCamera lookAtCamera;
    float worldScale;
    FlyToParams flyToParams;
    IMapAvatar player;
    ICompass compass;
    Generic OnWorldScaleOrOriginChanged;
    int <inputDisable>k__BackingField;
    boolean <GPSLock>k__BackingField;
    boolean <CompassLock>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnWorldScaleOrOriginChanged(...);
    void remove_OnWorldScaleOrOriginChanged(...);
    WorldMapRenderer get_mapRenderer(...);
    int get_inputDisable(...);
    void set_inputDisable(...);
    boolean get_GPSLock(...);
    void set_GPSLock(...);
    boolean get_CompassLock(...);
    void set_CompassLock(...);
    boolean get_IsAnimating(...);
    Camera get_MapCamera(...);
    float get_WorldScale(...);
    MapConfig get_Config(...);
    void set_Config(...);
    LookAtCamera get_LookAtCamera(...);
    void Start(...);
    void Update(...);
    void OnDrawGizmos(...);
    void AnimateCamera(...);
    void UpdateCamera(...);
    boolean UpdateUnitScaleAndWorldOrigin(...);
    void FlyTo(...);
    LatLng GetWorldLocation(...);
    Vector3 GetMapPosition(...);
    boolean GetGroundPosition(...);
    boolean GetGroundLocation(...);
    double Clamp(...);
    double NormalizeAngleDegrees(...);
    double ComputeTilt(...);
    double ComputeHeightAdjustment(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnWorldScaleOrOriginChanged(...);
    /*[05]*/ void remove_OnWorldScaleOrOriginChanged(...);
    /*[06]*/ void FlyTo(...);
    /*[07]*/ LatLng GetWorldLocation(...);
    /*[08]*/ Vector3 GetMapPosition(...);
    /*[09]*/ boolean GetGroundPosition(...);
    /*[10]*/ boolean GetGroundLocation(...);
    /*[11]*/ LookAtCamera get_LookAtCamera(...);
    /*[12]*/ boolean get_GPSLock(...);
    /*[13]*/ void set_GPSLock(...);
    /*[14]*/ boolean get_IsAnimating(...);
    /*[15]*/ Camera get_MapCamera(...);
    /*[16]*/ boolean get_CompassLock(...);
    /*[17]*/ void set_CompassLock(...);
    /*[18]*/ MapConfig get_Config(...);
    /*[19]*/ void set_Config(...);
    /*[20]*/ float get_WorldScale(...);
}

// Namespace: 
class FlyToParams {
    // Fields:
    float <duration>k__BackingField;
    boolean <cancelable>k__BackingField;
    boolean <animating>k__BackingField;

    // Methods:
    void .ctor(...);
    float get_duration(...);
    void set_duration(...);
    boolean get_cancelable(...);
    void set_cancelable(...);
    boolean get_animating(...);
    void set_animating(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Sfida
class SfidaService {
    // Fields:
    float POKE_MONITOR_INTERVAL = 1.000000;
    float POKESTOP_SPIN_SPEED = 100.000000;
    int ENCOUNTER_RANGE = 50;
    float SFIDA_RESPONSIVE_NOTIFY_TIMEOUT = 30.000000;
    float POKESTOP_COOLDOWN_TIME_SEC = 600.000000;
    SfidaGuiController sfidaGuiPrefab;
    UnitySfidaPlugin unitySfidaPlugin;
    AndroidSfidaPlugin androidSfidaPlugin;
    SfidaDowser sfidaDowser;
    Generic prefabFactory;
    MapExploreState mapExploreState;
    PokestopInteractionState pokestopInteractive;
    ILocationProvider locationProvider;
    EncounterInteractionState encounterInteractionState;
    GlobalSettings globalSettings;
    EncounterArena encountArena;
    IRpcService rpcService;
    IBehaviourService behaviourService;
    ICameraRig cameraRig;
    PokestopState pokestopState;
    IToastService toastService;
    IXpAwardService xpAwardService;
    II18n i18n;
    IRpcHandler rpcHandler;
    IMapEntityService mapEntityService;
    SfidaGuiController sfidaGui;
    ISfidaPlugin sfidaPlugin;
    State currentState;
    State nextState;
    double encountRange;
    Generic pokemonDict;
    MapPokemon notifyingPokemon;
    EncounterOutProto encounterProto;
    CatchPokemonOutProto catchPokemonProto;
    Generic hackedPokestopDict;
    Generic pokestopDict;
    MapPokestop notifyingPokestop;
    FortSearchOutProto pokestopItemRewardsProto;
    boolean sfidaClicked;
    boolean hasError;
    boolean timeoutSfidaNotify;
    Coroutine timeoutCoroutine;
    boolean dowserMode;

    // Methods:
    void .ctor(...);
    boolean get_IsConnected(...);
    Generic get_SpawnedPokemon(...);
    State get_NextState(...);
    void set_NextState(...);
    boolean Connect(...);
    void Disconnect(...);
    cmod_reqd FindPairableDevices(...);
    void SetVisible(...);
    void AddActivePokestop(...);
    void RemoveDeactivePokestop(...);
    void AddActivePokemon(...);
    void RemoveDeactivePokemon(...);
    void StartDowsePokemon(...);
    void StopDowsePokemon(...);
    void ProximityDowsePokemon(...);
    void FoundDowsePokemon(...);
    void Update(...);
    void CheckCooldownPokestop(...);
    void Init(...);
    void HandleUIClick(...);
    void HandleSfidaResponse(...);
    void HandleSfidaConnectionStateChange(...);
    void SearchPokestop(...);
    MapPokestop GetNearestPokestopWithoutHacked(...);
    void RemoveOutOfRangePokestop(...);
    double GetDistance(...);
    double GetDistance(...);
    void RemoveOutOfRangePokemon(...);
    boolean IsAllPokestopCoolingDown(...);
    MapPokemon GetNearestUncaughtPokemon(...);
    MapPokemon GetNearestPokemon(...);
    void EnterEncounter(...);
    void CatchPokemon(...);
    Generic TryCapture(...);
    int GetNumShakes(...);
    boolean IsPokemonInventryFull(...);
    boolean WhetherToNotityPokemon(...);
    Item GetAvailableBall(...);
    boolean IsOnMap(...);
    IEnumerator TimerCorountine(...);
    void StartTimer(...);
    void StopTimer(...);
    IEnumerator Process(...);
    void <SearchPokestop>m__39(...);
    int <GetNearestPokestopWithoutHacked>m__3A(...);
    void <EnterEncounter>m__3B(...);
    void <CatchPokemon>m__3C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_IsConnected(...);
    /*[05]*/ Generic get_SpawnedPokemon(...);
    /*[06]*/ boolean Connect(...);
    /*[07]*/ void Disconnect(...);
    /*[08]*/ cmod_reqd FindPairableDevices(...);
    /*[09]*/ void SetVisible(...);
    /*[10]*/ void AddActivePokestop(...);
    /*[11]*/ void RemoveDeactivePokestop(...);
    /*[12]*/ void AddActivePokemon(...);
    /*[13]*/ void RemoveDeactivePokemon(...);
    /*[14]*/ void StartDowsePokemon(...);
    /*[15]*/ void StopDowsePokemon(...);
    /*[16]*/ void ProximityDowsePokemon(...);
    /*[17]*/ void FoundDowsePokemon(...);
    /*[18]*/ Generic TryCapture(...);
}

// Namespace: Niantic.Holoholo.Sfida
class SfidaGuiController {
    // Fields:
    Image sfidaIconImage;
    Text debugText;
    Coroutine DummyNotifyCoroutine;
    boolean isConnected;
    Action OnClick;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    boolean get_IsConnected(...);
    void set_IsConnected(...);
    void SetDebugText(...);
    void NotifyDummy(...);
    void CancelNotify(...);
    IEnumerator NotifyFlashCoroutine(...);
    void Click(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Sfida
class UnitySfidaPlugin {
    // Fields:
    cmod_reqd FAKE_DEVICE_IDS;
    Action OnSfidaButtonClicked;
    Generic OnSfidaConnectionStateChanged;
    boolean <IsConnected>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_OnSfidaButtonClicked(...);
    void remove_OnSfidaButtonClicked(...);
    void add_OnSfidaConnectionStateChanged(...);
    void remove_OnSfidaConnectionStateChanged(...);
    boolean get_IsConnected(...);
    void set_IsConnected(...);
    void init(...);
    boolean Connect(...);
    void Disconnect(...);
    cmod_reqd FindPairableDevices(...);
    boolean ReachedPokestop(...);
    boolean RewardItems(...);
    boolean SpawnedPokemon(...);
    boolean SpawnedUncaughtPokemon(...);
    boolean ReadyToThrowPokeball(...);
    void NoPokeball(...);
    boolean PokeballShakeAndBroken(...);
    boolean PokeballShakeAndCaught(...);
    boolean StartDowser(...);
    boolean ProximityDowser(...);
    boolean CancelDowser(...);
    boolean FoundDowser(...);
    boolean Cancel(...);
    boolean Error(...);
    void HandleUIClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnSfidaButtonClicked(...);
    /*[05]*/ void remove_OnSfidaButtonClicked(...);
    /*[06]*/ void add_OnSfidaConnectionStateChanged(...);
    /*[07]*/ void remove_OnSfidaConnectionStateChanged(...);
    /*[08]*/ boolean get_IsConnected(...);
    /*[09]*/ boolean Connect(...);
    /*[10]*/ void Disconnect(...);
    /*[11]*/ cmod_reqd FindPairableDevices(...);
    /*[12]*/ boolean ReachedPokestop(...);
    /*[13]*/ boolean RewardItems(...);
    /*[14]*/ boolean SpawnedPokemon(...);
    /*[15]*/ boolean SpawnedUncaughtPokemon(...);
    /*[16]*/ boolean ReadyToThrowPokeball(...);
    /*[17]*/ void NoPokeball(...);
    /*[18]*/ boolean PokeballShakeAndBroken(...);
    /*[19]*/ boolean PokeballShakeAndCaught(...);
    /*[20]*/ boolean StartDowser(...);
    /*[21]*/ boolean ProximityDowser(...);
    /*[22]*/ boolean CancelDowser(...);
    /*[23]*/ boolean FoundDowser(...);
    /*[24]*/ boolean Error(...);
    /*[25]*/ boolean Cancel(...);
    /*[26]*/ void HandleUIClick(...);
}

// Namespace: Niantic.Holoholo.Sfida
class AndroidSfidaPlugin {
    // Fields:
    String NAME = "AndroidSfidaConnection";
    int RETRY_MAX = 5;
    cmod_reqd FAKE_DEVICE_IDS;
    AndroidJavaObject sfidaJavaInstance;
    SfidaReceiver sfidaReceiver;
    Coroutine writeCorountine;
    Action OnSfidaButtonClicked;
    Generic OnSfidaConnectionStateChanged;
    boolean <IsConnected>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_OnSfidaButtonClicked(...);
    void remove_OnSfidaButtonClicked(...);
    void add_OnSfidaConnectionStateChanged(...);
    void remove_OnSfidaConnectionStateChanged(...);
    boolean get_IsConnected(...);
    void set_IsConnected(...);
    boolean Init(...);
    cmod_reqd FindPairableDevices(...);
    boolean Connect(...);
    void Disconnect(...);
    boolean Release(...);
    boolean DoVibrate(...);
    boolean Cancel(...);
    boolean ReachedPokestop(...);
    boolean RewardItems(...);
    boolean SpawnedPokemon(...);
    boolean SpawnedUncaughtPokemon(...);
    boolean SpawnedLegendaryPokemon(...);
    boolean ReadyToThrowPokeball(...);
    void NoPokeball(...);
    boolean PokeballShakeAndBroken(...);
    boolean PokeballShakeAndCaught(...);
    boolean StartDowser(...);
    boolean ProximityDowser(...);
    boolean CancelDowser(...);
    boolean FoundDowser(...);
    boolean Error(...);
    void HandleUIClick(...);
    void HandleConnectionStateChanged(...);
    void HandleResponse(...);
    IEnumerator WriteSfidaCoroutine(...);
    IEnumerator WriteSfidaCoroutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnSfidaButtonClicked(...);
    /*[05]*/ void remove_OnSfidaButtonClicked(...);
    /*[06]*/ void add_OnSfidaConnectionStateChanged(...);
    /*[07]*/ void remove_OnSfidaConnectionStateChanged(...);
    /*[08]*/ boolean get_IsConnected(...);
    /*[09]*/ boolean Connect(...);
    /*[10]*/ void Disconnect(...);
    /*[11]*/ cmod_reqd FindPairableDevices(...);
    /*[12]*/ boolean ReachedPokestop(...);
    /*[13]*/ boolean RewardItems(...);
    /*[14]*/ boolean SpawnedPokemon(...);
    /*[15]*/ boolean SpawnedUncaughtPokemon(...);
    /*[16]*/ boolean ReadyToThrowPokeball(...);
    /*[17]*/ void NoPokeball(...);
    /*[18]*/ boolean PokeballShakeAndBroken(...);
    /*[19]*/ boolean PokeballShakeAndCaught(...);
    /*[20]*/ boolean StartDowser(...);
    /*[21]*/ boolean ProximityDowser(...);
    /*[22]*/ boolean CancelDowser(...);
    /*[23]*/ boolean FoundDowser(...);
    /*[24]*/ boolean Error(...);
    /*[25]*/ boolean Cancel(...);
    /*[26]*/ void HandleUIClick(...);
}

// Namespace: Niantic.Holoholo.Sfida
class SfidaReceiver {
    // Fields:
    Generic OnReceivedConnectStateChanged;
    Action OnReceivedNotifyResponse;

    // Methods:
    void .ctor(...);
    void add_OnReceivedConnectStateChanged(...);
    void remove_OnReceivedConnectStateChanged(...);
    void add_OnReceivedNotifyResponse(...);
    void remove_OnReceivedNotifyResponse(...);
    void OnSfidaConnected(...);
    void OnSfidaDisconnected(...);
    void HackPokestop(...);
    void EnterEncounterState(...);
    void ThrowPokeball(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Sfida
class SfidaDowser {
    // Fields:
    float DOWSER_INTERVAL = 2.000000;
    ISfidaService sfidaService;
    ILocationProvider locationProvider;
    SpriteLookup spriteLookup;
    IPokeNav pokenav;
    GlobalSettings globalSettings;
    boolean isActiveDowser;
    Generic targetEncounterId;
    Coroutine dowseHandler;
    double navRangeMax;
    double encounterRangeMax;

    // Methods:
    void .ctor(...);
    void Init(...);
    void HandlePokeNavSelected(...);
    void InitDowser(...);
    void SetTargetPokemon(...);
    void StopDowser(...);
    NearbyPokemonProto GetTargetPokemon(...);
    boolean ContainsTargetPokemon(...);
    IEnumerator DowseHandleCoroutine(...);
    boolean <GetTargetPokemon>m__37(...);
    boolean <ContainsTargetPokemon>m__38(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Sfida
class ISfidaPlugin {
    // Methods:
    void add_OnSfidaButtonClicked(...);
    void remove_OnSfidaButtonClicked(...);
    void add_OnSfidaConnectionStateChanged(...);
    void remove_OnSfidaConnectionStateChanged(...);
    boolean get_IsConnected(...);
    boolean Connect(...);
    void Disconnect(...);
    cmod_reqd FindPairableDevices(...);
    boolean ReachedPokestop(...);
    boolean RewardItems(...);
    boolean SpawnedPokemon(...);
    boolean SpawnedUncaughtPokemon(...);
    boolean ReadyToThrowPokeball(...);
    void NoPokeball(...);
    boolean PokeballShakeAndBroken(...);
    boolean PokeballShakeAndCaught(...);
    boolean StartDowser(...);
    boolean ProximityDowser(...);
    boolean CancelDowser(...);
    boolean FoundDowser(...);
    boolean Error(...);
    boolean Cancel(...);
    void HandleUIClick(...);
}

// Namespace: 
class State {
    // Fields:
    int value__;
    State NO_CONNECTION = 0;
    State IDLE = 1;
    State FINDING_NOTIFY_POKESTOP = 2;
    State NOTIFYING_POKESTOP = 3;
    State SEARCH_RESULT = 4;
    State FINDING_NOTIFY_POKEMON = 5;
    State NOTIFYING_POKEMON = 6;
    State ENCOUNTER = 7;
    State CATCH = 8;
    State CATCH_RESULT = 9;
    State DOWSER = 10;
    State ERROR = 11;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class FortSearchOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int ItemsFieldNumber = 2;
    int GemsAwardedFieldNumber = 3;
    int EggPokemonFieldNumber = 4;
    int XpAwardedFieldNumber = 5;
    int CooldownCompleteFieldNumber = 6;
    int ChainHackSequenceNumberFieldNumber = 7;
    Generic _parser;
    Result result_;
    Generic _repeated_items_codec;
    Generic items_;
    int gemsAwarded_;
    PokemonProto eggPokemon_;
    int xpAwarded_;
    long cooldownComplete_;
    int chainHackSequenceNumber_;
    Generic <>f__am$cache9;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortSearchOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_Items(...);
    int get_GemsAwarded(...);
    void set_GemsAwarded(...);
    PokemonProto get_EggPokemon(...);
    void set_EggPokemon(...);
    int get_XpAwarded(...);
    void set_XpAwarded(...);
    long get_CooldownComplete(...);
    void set_CooldownComplete(...);
    int get_ChainHackSequenceNumber(...);
    void set_ChainHackSequenceNumber(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortSearchOutProto <_parser>m__150(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortSearchOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result NO_RESULT_SET = 0;
    Result SUCCESS = 1;
    Result OUT_OF_RANGE = 2;
    Result IN_COOLDOWN_PERIOD = 3;
    Result INVENTORY_FULL = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map
class MapGestureHandler {
    // Fields:
    boolean panningEnabled;
    boolean rotationEnabled;
    boolean pinchZoomEnabled;
    boolean dragZoomEnabled;
    boolean tiltEnabled;
    boolean oneFingerRotationEnabled;
    float pinchZoomSpeed;
    float dragZoomSpeed;
    float panSpeed;
    float tiltSpeed;
    float minTapTimeForDragZoom;
    IMapController mapController;
    float lastTapTime;
    LookAtCamera lookAtCamera;
    Vector3 cameraWorldPosition;
    Vector2 cameraScreenPosition;
    PanGestureType panGestureType;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnTapped(...);
    void OnTransformStarted(...);
    void OnTransformed(...);
    void OnScaleStarted(...);
    void OnScaled(...);
    void OnPanStarted(...);
    void OnPanned(...);
    void OnRotateStarted(...);
    void OnRotated(...);
    boolean HasGesture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PanGestureType {
    // Fields:
    int value__;
    PanGestureType Unknown = 0;
    PanGestureType Pan = 1;
    PanGestureType DragZoom = 2;
    PanGestureType Tilt = 3;
    PanGestureType Rotation = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class PoiDetailsService {
    // Fields:
    IRpcService rpcService;
    IRpcHandler rpcHandler;
    ILocationProvider locationProvider;

    // Methods:
    void .ctor(...);
    void RequestPokestopDetails(...);
    Generic RequestGymDetails(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void RequestPokestopDetails(...);
    /*[05]*/ Generic RequestGymDetails(...);
}

// Namespace: Niantic.Holoholo.UI
class PoiInspectionService {
    // Fields:
    PoiInspectionGuiController guiPrefab;
    IBehaviourService behaviourService;
    PoiInspectionGuiController <ActiveInspectionGui>k__BackingField;

    // Methods:
    void .ctor(...);
    PoiInspectionGuiController get_ActiveInspectionGui(...);
    void set_ActiveInspectionGui(...);
    IReceipt InspectPoi(...);
    IReceipt InspectPoiFullscreen(...);
    IReceipt InitializePoi(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt InspectPoi(...);
    /*[05]*/ IReceipt InspectPoiFullscreen(...);
}

// Namespace: Niantic.Holoholo.UI
class PoiInspectionGuiController {
    // Fields:
    InspectionMode previousMode;
    IImageDownloadService imageDownloadService;
    IRpcService rpcService;
    ICameraRig cameraRig;
    II18n i18n;
    GameMasterData gameMasterData;
    IPoiDetailsService poiDetailsService;
    RawImage quickViewImage;
    RawImage fullscreenImage;
    Image quickViewImageRing;
    cmod_reqd teamRingColors;
    Image gradientImage;
    cmod_reqd teamGradientColors;
    GymMinimap minimap;
    Text levelInfo;
    AudioClip backSound;
    GameObject quickViewRoot;
    GameObject fullscreenRoot;
    GameObject fullscreenNormalTextRoot;
    GameObject fullscreenScrollingTextRoot;
    Text fullscreenScrollingDescription;
    GameObject clickCatcherButton;
    GameObject quickViewImageHierarchy;
    cmod_reqd titleElements;
    cmod_reqd descriptionElements;
    RectTransform SelectionEffect;
    Coroutine animateInRoutine;
    Coroutine selectionEffectRoutine;
    IReceipt cleanupReceipt;
    IMapPoi poi;
    Action onCompleteCallback;
    Text gymClosedLabel;
    float quickViewOffsetWhenCoveringSelection;
    float verticalOriginOffset;
    float animateInTime;
    AnimationCurve animateInPositionCurve;
    AnimationCurve animateInScaleCurve;
    float scrollingDescriptionMinChars;
    InspectionMode <Mode>k__BackingField;

    // Methods:
    void .ctor(...);
    InspectionMode get_Mode(...);
    void set_Mode(...);
    void SetImage(...);
    void Initialize(...);
    void SetTitle(...);
    void SetDescription(...);
    void GoToFullscreen(...);
    void GoToQuickView(...);
    void GoToPreviousMode(...);
    void SetPoiDetails(...);
    IEnumerator UpdateSelectionEffect(...);
    IEnumerator AnimateQuickViewFromPoi(...);
    Vector2 GetScreenSpacePointFromWorldPosition(...);
    void DismissDialog(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class InspectionMode {
    // Fields:
    int value__;
    InspectionMode New = 0;
    InspectionMode QuickView = 1;
    InspectionMode Fullscreen = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map
class PoiDirectoryService {
    // Fields:
    Generic pokestops;
    Generic gyms;
    Generic PoiAdded;
    Generic PoiRemoved;

    // Methods:
    void .ctor(...);
    void add_PoiAdded(...);
    void remove_PoiAdded(...);
    void add_PoiRemoved(...);
    void remove_PoiRemoved(...);
    Generic get_ActivePokestops(...);
    Generic get_ActiveGyms(...);
    void AddPokestop(...);
    void AddGym(...);
    void RemovePokestop(...);
    void RemoveGym(...);
    IMapPokestop GetPokestop(...);
    IMapPoi GetGym(...);
    IMapPoi GetPoi(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_PoiAdded(...);
    /*[05]*/ void remove_PoiAdded(...);
    /*[06]*/ void add_PoiRemoved(...);
    /*[07]*/ void remove_PoiRemoved(...);
    /*[08]*/ void AddPokestop(...);
    /*[09]*/ void AddGym(...);
    /*[10]*/ void RemovePokestop(...);
    /*[11]*/ void RemoveGym(...);
    /*[12]*/ Generic get_ActivePokestops(...);
    /*[13]*/ Generic get_ActiveGyms(...);
    /*[14]*/ IMapPokestop GetPokestop(...);
    /*[15]*/ IMapPoi GetGym(...);
    /*[16]*/ IMapPoi GetPoi(...);
}

// Namespace: Niantic.Holoholo.Map
class PlayerProximityService {
    // Fields:
    ILocationProvider locationProvider;
    LatLng playerLocation;
    Generic inRangeActions;
    Generic outOfRangeActions;
    SpaceTimeThrottle spaceTimeThrottle;
    Generic LocationUpdated;

    // Methods:
    void .ctor(...);
    void add_LocationUpdated(...);
    void remove_LocationUpdated(...);
    void Update(...);
    void UpdateLocation(...);
    IReceipt WhenInRange(...);
    IReceipt WhenOutOfRange(...);
    float DistanceM(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_LocationUpdated(...);
    /*[05]*/ void remove_LocationUpdated(...);
    /*[06]*/ IReceipt WhenInRange(...);
    /*[07]*/ IReceipt WhenOutOfRange(...);
    /*[08]*/ float DistanceM(...);
}

// Namespace: Niantic.Holoholo.Map
class MapScene {
    // Fields:
    Transform encounterRoot;

    // Methods:
    void .ctor(...);
    Transform get_MapObjectsParent(...);
    GameObject get_GameObject(...);
    void SetVisible(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_MapObjectsParent(...);
    /*[06]*/ void SetVisible(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class PokemonBoundsService {
    // Fields:
    GameMasterData gameMaster;
    float <MinimumPokemonHeightM>k__BackingField;
    float <MaximumPokemonHeightM>k__BackingField;
    float <MinimumCylinderHeightM>k__BackingField;
    float <MaximumCylinderHeightM>k__BackingField;
    float <MinimumCylinderHeightW>k__BackingField;
    float <MaximumCylinderHeightW>k__BackingField;
    float <MinimumFloatingPokemonHeightM>k__BackingField;
    float <MaximumFloatingPokemonHeightM>k__BackingField;
    float <MinimumCameraHeightM>k__BackingField;
    float <MaximumCameraHeightM>k__BackingField;

    // Methods:
    void .ctor(...);
    float get_MinimumPokemonHeightM(...);
    void set_MinimumPokemonHeightM(...);
    float get_MaximumPokemonHeightM(...);
    void set_MaximumPokemonHeightM(...);
    float get_MinimumCylinderHeightM(...);
    void set_MinimumCylinderHeightM(...);
    float get_MaximumCylinderHeightM(...);
    void set_MaximumCylinderHeightM(...);
    float get_MinimumCylinderHeightW(...);
    void set_MinimumCylinderHeightW(...);
    float get_MaximumCylinderHeightW(...);
    void set_MaximumCylinderHeightW(...);
    float get_MinimumFloatingPokemonHeightM(...);
    void set_MinimumFloatingPokemonHeightM(...);
    float get_MaximumFloatingPokemonHeightM(...);
    void set_MaximumFloatingPokemonHeightM(...);
    float get_MinimumCameraHeightM(...);
    void set_MinimumCameraHeightM(...);
    float get_MaximumCameraHeightM(...);
    void set_MaximumCameraHeightM(...);
    void Initialize(...);
    boolean IsPokemonFloatingType(...);
    float PokemonCylinderHeightOffGroundM(...);
    float PokemonCylinderHeightM(...);
    float PokemonHeightM(...);
    float PokemonCylinderHeightW(...);
    float PokemonScale(...);
    float NormalizedHeightM(...);
    float NormalizedCylinderHeightM(...);
    float NormalizedCylinderHeightW(...);
    float NormalizedFlyingHeight(...);
    float BoundVerticalShift(...);
    float BoundVerticalShift(...);
    float BoundScale(...);
    float BoundScale(...);
    float BoundScale(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float get_MinimumPokemonHeightM(...);
    /*[05]*/ float get_MaximumPokemonHeightM(...);
    /*[06]*/ float get_MinimumCylinderHeightM(...);
    /*[07]*/ float get_MaximumCylinderHeightM(...);
    /*[08]*/ float get_MinimumCylinderHeightW(...);
    /*[09]*/ float get_MaximumCylinderHeightW(...);
    /*[10]*/ float get_MinimumFloatingPokemonHeightM(...);
    /*[11]*/ float get_MaximumFloatingPokemonHeightM(...);
    /*[12]*/ float get_MinimumCameraHeightM(...);
    /*[13]*/ float get_MaximumCameraHeightM(...);
    /*[14]*/ boolean IsPokemonFloatingType(...);
    /*[15]*/ float PokemonCylinderHeightOffGroundM(...);
    /*[16]*/ float PokemonCylinderHeightM(...);
    /*[17]*/ float PokemonHeightM(...);
    /*[18]*/ float PokemonScale(...);
    /*[19]*/ float NormalizedHeightM(...);
    /*[20]*/ float NormalizedCylinderHeightM(...);
    /*[21]*/ float NormalizedCylinderHeightW(...);
    /*[22]*/ float NormalizedFlyingHeight(...);
    /*[23]*/ float BoundScale(...);
    /*[24]*/ float BoundScale(...);
    /*[25]*/ float BoundScale(...);
    /*[26]*/ float BoundVerticalShift(...);
    /*[27]*/ float BoundVerticalShift(...);
}

// Namespace: Niantic.Holoholo.UI
class IRpcSpinnerGuiController {
    // Methods:
    void SetVisible(...);
}

// Namespace: Niantic.Holoholo.Avatar
class PlayerAvatarPortrait {
    // Fields:
    Transform avatarRoot;
    Transform portraitCamera;
    Transform cameraNodeMale;
    Transform cameraNodeFemale;
    GameObject avatar;

    // Methods:
    void .ctor(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Login
class LoginState {
    // Fields:
    String AgeGateFailedKey = "80a6f7e6-1a8d-442e-bd95-74c795242b3f";
    LoginAgeGateState loginAgeGateStatePrefab;
    LoginChoiceState loginChoiceStatePrefab;
    LoginBackgroundGuiController backgroundGuiPrefab;
    RootState rootState;
    IAuthenticationService authenticationService;
    ILocaleService localeService;
    Factory backgroundGuiFactory;
    cmod_reqd countrySpecificLoginDetails;
    CountryLoginDetails europeanUnionLoginDetails;
    CountryLoginDetails defaultLoginDetails;
    GameObject serverLockoutGuiPrefab;
    Music loginMusic;
    float delayBeforeInitialState;
    LoginBackgroundGuiController backgroundGui;
    Coroutine waitRoutine;
    boolean <AgeGatePassed>k__BackingField;

    // Methods:
    void .ctor(...);
    CountryLoginDetails get_LocalLoginDetails(...);
    Generic get_AllowedAuthTokenProviders(...);
    boolean get_AgeGatePassed(...);
    void set_AgeGatePassed(...);
    void EnterState(...);
    void ExitState(...);
    void AgeGateSubmitted(...);
    void ProviderTokenReceived(...);
    void ClearCachedAgeGateState(...);
    void ShowServerLockout(...);
    IEnumerator WaitAndShowInitialState(...);
    void ShowInitialState(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class LoginAgeGateState {
    // Fields:
    int DaysOfTheMonth = 31;
    LoginAgeGateGuiController guiControllerPrefab;
    LoginState loginState;
    II18n ii18n;
    Factory guiFactory;
    cmod_reqd months;
    int firstYear;
    int lastYear;
    LoginAgeGateGuiController guiController;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void SubmitSelections(...);
    void InitializeDropdowns(...);
    int IndexToDay(...);
    int IndexToMonth(...);
    int IndexToYear(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class LoginAgeGateGuiController {
    // Fields:
    LoginAgeGateState ageGateState;
    Dropdown dayDropdown;
    Dropdown monthDropdown;
    Dropdown yearDropdown;
    Button submitButton;

    // Methods:
    void .ctor(...);
    void ClickSubmit(...);
    void InitializeDropdowns(...);
    void <InitializeDropdowns>m__18(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LoginAgeGateGuiController Create(...);
    /*[05]*/ LoginAgeGateGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Login
class LoginChoiceState {
    // Fields:
    LoginChoiceGuiController guiControllerPrefab;
    PtcLoginState ptcLoginStatePrefab;
    GoogleAuthState googleAuthStatePrefab;
    PrivacyPolicyState privacyPolicyStatePrefab;
    PendingAuthGuiController pendingAuthGuiControllerPrefab;
    LoginState loginState;
    Factory guiFactory;
    LoginChoiceGuiController guiController;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void ClickGoogle(...);
    void ClickPtc(...);
    void ClickPrivacyPolicy(...);
    void ReturnFromSubstate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class LoginChoiceGuiController {
    // Fields:
    LoginState loginState;
    LoginChoiceState loginChoiceState;
    cmod_reqd authProviderButtons;

    // Methods:
    void .ctor(...);
    void Start(...);
    void ClickGoogle(...);
    void ClickPtc(...);
    void ClickPrivacyPolicy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Login
class PtcLoginState {
    // Fields:
    PtcLoginGuiController guiControllerPrefab;
    PtcAuthState ptcAuthStatePrefab;
    LoginState loginState;
    LoginChoiceState loginChoiceState;
    ILocaleService localeService;
    Factory guiFactory;
    cmod_reqd signupUrls;
    PtcLoginGuiController guiController;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void SubmitLogin(...);
    void AuthFailed(...);
    void ClickRegister(...);
    void ClickForgotUsername(...);
    void ClickForgotPassword(...);
    void ClickBack(...);
    SignupUrls GetLocalUrls(...);
    boolean <GetLocalUrls>m__1D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class PtcLoginGuiController {
    // Fields:
    PtcLoginState ptcLoginState;
    InputField usernameInput;
    InputField passwordInput;
    Button submitButton;

    // Methods:
    void .ctor(...);
    void Start(...);
    void HandleDismiss(...);
    void ClickSubmit(...);
    void ClickForgotUsername(...);
    void ClickForgotPassword(...);
    void ClickRegister(...);
    void RefreshSubmitButton(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Login
class PtcAuthState {
    // Fields:
    LoginState loginState;
    PtcLoginState ptcLoginState;
    IAuthenticationService authenticationService;
    IUserPromptsService userPromptsService;
    Factory guiFactory;
    PendingAuthGuiController guiController;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void SubmitCredentials(...);
    void ClickBack(...);
    void AuthenticationSucceeded(...);
    void AuthenticationFailed(...);
    void <SubmitCredentials>m__1A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PendingAuthGuiController Create(...);
    /*[05]*/ PendingAuthGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Login
class PendingAuthGuiController {
    // Fields:
    LoadingSpinner loadingSpinner;
    RectTransform spinnerAnchor;
    Action Dismissed;

    // Methods:
    void .ctor(...);
    void add_Dismissed(...);
    void remove_Dismissed(...);
    void Start(...);
    void HandleDismiss(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class LoadingSpinner {
    // Fields:
    SpriteRenderer spinnerGraphic;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Internationalization
class ILocaleService {
    // Methods:
    SystemLanguage get_Language(...);
    String get_LanguageCode(...);
    String get_CountryCode(...);
    boolean get_IsInEuropeanUnion(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PtcLoginGuiController Create(...);
    /*[05]*/ PtcLoginGuiController Create(...);
}

// Namespace: 
class SignupUrls {
    // Fields:
    SystemLanguage Language;
    String RegistrationUrl;
    String ForgotUsenameUrl;
    String ForgotPasswordUrl;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Login
class GoogleAuthState {
    // Fields:
    LoginState loginState;
    LoginChoiceState loginChoiceState;
    IAuthenticationService authenticationService;
    II18n ii18n;
    IUserPromptsService userPromptsService;
    Factory guiFactory;
    PendingAuthGuiController guiController;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void ClickBack(...);
    void AttemptAuthentication(...);
    void AuthenticationSucceeded(...);
    void AuthenticationFailed(...);
    void <AttemptAuthentication>m__19(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class PrivacyPolicyState {
    // Fields:
    PrivacyPolicyGuiController guiPrefab;
    IBehaviourService behaviourService;
    IRpcService rpcService;
    IUserPromptsService userPrompts;
    LoginChoiceState loginChoiceState;
    Factory guiFactory;
    PrivacyPolicyGuiController guiController;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void GuiDismissed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Login
class PrivacyPolicyGuiController {
    // Fields:
    Action BackClicked;

    // Methods:
    void .ctor(...);
    void ClickBack(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PrivacyPolicyGuiController Create(...);
    /*[05]*/ PrivacyPolicyGuiController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LoginChoiceGuiController Create(...);
    /*[05]*/ LoginChoiceGuiController Create(...);
}

// Namespace: 
class LoginBackgroundGuiController {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LoginBackgroundGuiController Create(...);
    /*[05]*/ LoginBackgroundGuiController Create(...);
}

// Namespace: 
class CountryLoginDetails {
    // Fields:
    String CountryCode;
    int MinimumAge;
    cmod_reqd AcceptedProvidersUnderMinimumAge;
    cmod_reqd AcceptedProvidersOverMinimumAge;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeUserState {
    // Fields:
    EulaState eulaState;
    FirstTimeUserWelcomeState welcomeState;
    FirstTimeUserAvatarSelectionState avatarSelectionState;
    FirstTimeUserAvatarCustomizationState avatarCustomizationState;
    RegisterUsernameState enterNameState;
    FirstTimePokestopGuiController visitPokestopGuiControllerPrefab;
    RootState rootState;
    ICameraRig cameraRig;
    IBundleManager bundleManager;
    IConversationService convoService;
    TouchScriptInputLayer inputLayerPrefab;
    MapContentHandler mapContentHandler;
    IInputLayerStack inputStack;
    IReceipt inputReceipt;
    String firstTimeUserSetupScene;
    Music orientationMusic;
    IUserTaskService taskService;
    Factory pokestopTaskFactory;
    Factory pokestopGuiFactory;
    TouchScriptInputLayer <InputLayer>k__BackingField;

    // Methods:
    void .ctor(...);
    TouchScriptInputLayer get_InputLayer(...);
    void set_InputLayer(...);
    void EnterState(...);
    void ExitState(...);
    void EulaComplete(...);
    void WelcomeComplete(...);
    void AvatarSelectionComplete(...);
    void AvatarCustomizationComplete(...);
    void FirstEncounterComplete(...);
    void NameSelectionComplete(...);
    void BackFromCustomization(...);
    void <EnterState>m__2D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class EulaState {
    // Fields:
    IBehaviourService behaviourService;
    IRpcService rpcService;
    IUserPromptsService userPrompts;
    FirstTimeUserState firstTimeUserState;
    EulaGuiController eulaGuiPrefab;
    Factory eulaGuiFactory;
    IInputEventService inputEventService;
    IRpcHandler rpcHandler;
    EulaGuiController eulaGui;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void EulaAccepted(...);
    void EulaDeclined(...);
    void <EulaAccepted>m__29(...);
    void <EulaAccepted>m__2A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class EulaGuiController {
    // Fields:
    Toggle emailMarketingToggle;
    Action DeclinePressed;
    Action AcceptPressed;
    IAuthenticationService authService;
    ILocaleService localeService;
    boolean <EmailsOptedIn>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_EmailsOptedIn(...);
    void set_EmailsOptedIn(...);
    void Initialize(...);
    void ToggleEmailsOptedIn(...);
    void PressDecline(...);
    void PressAccept(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ EulaGuiController Create(...);
    /*[05]*/ EulaGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeUserWelcomeState {
    // Fields:
    WelcomScreenGuiController welcomeScreenGuiPrefab;
    FirstTimeUserState firstTimeUserState;
    IConversationService conversationService;
    Factory welcomeScreenGuiFactory;
    WelcomScreenGuiController welcomeScreenGui;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    IEnumerator StartConversation(...);
    void <EnterState>m__2E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class WelcomScreenGuiController {
    // Fields:
    AudioClip spotlightSound;

    // Methods:
    void .ctor(...);
    IPromise Show(...);
    IEnumerator FadeScreen(...);
    void PlaySpotlightSound(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ WelcomScreenGuiController Create(...);
    /*[05]*/ WelcomScreenGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeUserAvatarSelectionState {
    // Fields:
    float SelectionScaleTime;
    AudioClip clickSound;
    Renderer leftAvatarSpotlight;
    Renderer rightAvatarSpotlight;
    Material spotlightOnMaterial;
    Material spotlightOffMaterial;
    float grayOutTarget;
    FirstTimeUserState firstTimeUserState;
    IBehaviourService behaviourService;
    IUserPromptsService userPrompts;
    IAvatarService avatarService;
    ICameraRig cameraRig;
    IRpcService rpcService;
    Transform LeftAvatarAnchor;
    Transform RightAvatarAnchor;
    GameObject leftAvatar;
    GameObject rightAvatar;
    Camera characterCamera;
    Camera skyboxCamera;
    RenderTexture renderTexture;
    Coroutine animateSelectionRoutine;
    MaskedScreenGrayscale grayscaleImageEffect;
    Texture halfScreenMask;
    AvatarSelectionGuiController selectionGuiPrefab;
    AvatarSelectionGuiController selectionGui;
    int selectedAvatar;
    boolean selectionLockedIn;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    IEnumerator OnApplicationPause(...);
    void HandleTap(...);
    void SetupDefaultAvatars(...);
    void SelectedAvatar(...);
    void SelectionComplete(...);
    IEnumerator AnimateToSelected(...);
    void SetupCameraAndRenderTexture(...);
    Camera CreateCamera(...);
    void DestroyEverything(...);
    void DestroyAvatars(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.ImageEffects
class MaskedScreenGrayscale {
    // Fields:
    Texture textureRamp;
    Texture mask;
    boolean flipMaskHorizontal;
    float maskOffValue;
    float maskOnValue;
    float rampOffset;

    // Methods:
    void .ctor(...);
    void OnRenderImage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Start(...);
    /*[05]*/ void OnDisable(...);
}

// Namespace: Niantic.Holoholo.Orientation
class AvatarSelectionGuiController {
    // Fields:
    Button ContinueButton;
    RawImage rawImage;
    AudioClip clickSound;
    FirstTimeUserAvatarSelectionState avatarSelectionState;

    // Methods:
    void .ctor(...);
    void Start(...);
    void EnableContinueButton(...);
    void ContinuePressed(...);
    void SetRawImageTexture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeUserAvatarCustomizationState {
    // Fields:
    Transform avatarRoot;
    GameObject avatar;
    IAvatarService avatarService;
    IRpcService rpcService;
    FirstTimeUserState firstTimeUserState;
    IUserPromptsService userPrompts;
    AvatarCustomizationGuiController customizationGuiPrefab;
    AvatarCustomizationGuiController gui;
    IBehaviourService behaviourService;
    ICameraRig cameraRig;
    ICameraController currentController;
    float rotateSpeed;
    cmod_reqd cameraPositions;
    Generic cameraPosLookup;
    float lastMousePosX;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void DestroyGui(...);
    void Update(...);
    void BuildAvatar(...);
    void CustomizationComplete(...);
    void CustomizationSlotSelected(...);
    void AnimateCamera(...);
    ICameraController BuildCameraAnimation(...);
    void <CustomizationComplete>m__21(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class AvatarCustomizationGuiController {
    // Fields:
    FirstTimeUserAvatarCustomizationState avatarCustomizationState;
    IAvatarService avatarService;
    AvatarCustomizationSet avatarSettings;
    IUserPromptsService userPrompts;
    FirstTimeUserState firstTimeUserState;
    AudioClip clickBackSound;
    AudioClip clickCompleteSound;
    AudioClip clickCuctomizeSlotSound;
    GameObject selectionEffect;
    Text currentItemLabel;
    Image currentItemThumbnail;
    CustomizationSlotButton defaultButton;
    boolean defaultSetup;
    Generic currentSlotOptions;
    CustomizationSlot <CurrentSlot>k__BackingField;
    int <CurrentItem>k__BackingField;

    // Methods:
    void .ctor(...);
    CustomizationSlot get_CurrentSlot(...);
    void set_CurrentSlot(...);
    int get_CurrentItem(...);
    void set_CurrentItem(...);
    void Start(...);
    void CustomizationSlotSelected(...);
    void NextItem(...);
    void PreviousItem(...);
    void UpdateItemName(...);
    void UpdateItemThumbnail(...);
    void NewItemSelected(...);
    void CustomizationComplete(...);
    void BackPressed(...);
    void <CustomizationComplete>m__20(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Orientation
class CustomizationSlotButton {
    // Fields:
    CustomizationSlot slot;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Orientation
class RegisterUsernameState {
    // Fields:
    PlayerNameEntryGuiController playerNameEntryGuiPrefab;
    BannedCodenameBackgroundGuiController bannedBackgroundGuiPrefab;
    Factory nameEntryGuiFactory;
    Factory bannedBackgroundGuiFactory;
    IRpcService rpcService;
    IUserPromptsService userPrompts;
    FirstTimeUserState firstTimeUserState;
    MapExploreState mapExploreState;
    MapContentHandler mapContentHandler;
    IConversationService conversationService;
    Texture pokestopImage;
    PlayerNameEntryGuiController playerNameEntryGui;
    BannedCodenameBackgroundGuiController bannedBackgroundGui;
    IConversation conversation;
    Action OnComplete;
    Mode currentMode;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void ShowGui(...);
    IEnumerator StartConversation(...);
    void CleanupGui(...);
    IEnumerator Complete(...);
    void NameConfirmed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class PlayerNameEntryGuiController {
    // Fields:
    Text errorMessage;
    InputField inputField;
    Button completeEntryButton;
    int nameMinLength;
    int nameMaxLength;
    IUserPromptsService userPrompts;
    RegisterUsernameState enterNameState;
    II18n i18n;
    boolean inputHasPassedMin;
    Regex validCharacters;
    String playerName;
    boolean <NameIsValid>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_NameIsValid(...);
    void set_NameIsValid(...);
    void Start(...);
    void UpdateNextButton(...);
    void UserInputChanged(...);
    void ClearError(...);
    void SetError(...);
    void CheckForInvalidCharacters(...);
    void CheckNameLength(...);
    void CheckAll(...);
    IEnumerator SelectInputField(...);
    void NextPressed(...);
    void <NextPressed>m__23(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Orientation
class BannedCodenameBackgroundGuiController {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PlayerNameEntryGuiController Create(...);
    /*[05]*/ PlayerNameEntryGuiController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BannedCodenameBackgroundGuiController Create(...);
    /*[05]*/ BannedCodenameBackgroundGuiController Create(...);
}

// Namespace: 
class Mode {
    // Fields:
    int value__;
    Mode FirstTimeUser = 0;
    Mode NameWasBanned = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimePokestopGuiController {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class IUserTaskService {
    // Methods:
    void add_TasksChanged(...);
    void remove_TasksChanged(...);
    IUserTask get_ActiveTask(...);
    void AddTask(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ FirstTimeVisitPokestopTask Create(...);
    /*[05]*/ FirstTimeVisitPokestopTask Create(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class FirstTimeVisitPokestopTask {
    // Fields:
    II18n i18n;
    IPoiDirectoryService poiDirectory;
    PokestopState pokestopState;
    float timeTillFade;
    GameObject pokestopDiskHintPrefab;
    GameObject pokestopDiskHint;
    FirstTimeVisitPokestopDecoration pokestopDecorationPrefab;
    Factory pokestopDecorationFactory;
    MapExploreState mapExploreState;
    Generic activeDecorations;
    Generic ShowingTitle;
    Generic TaskCompleted;

    // Methods:
    void .ctor(...);
    void add_ShowingTitle(...);
    void remove_ShowingTitle(...);
    void add_TaskCompleted(...);
    void remove_TaskCompleted(...);
    float get_TimeTillFadeTitle(...);
    String get_ShortTitle(...);
    void Activate(...);
    void PlayerGotItemsFromPokestop(...);
    void ShowTitle(...);
    void HideTitle(...);
    void ShowHint(...);
    void HideHint(...);
    void ShowPokestopDecoration(...);
    void NewPoi(...);
    void CleanupPoi(...);
    void DecoratePokestop(...);
    void CleanupDecoration(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_ShowingTitle(...);
    /*[05]*/ void remove_ShowingTitle(...);
    /*[06]*/ void add_TaskCompleted(...);
    /*[07]*/ void remove_TaskCompleted(...);
    /*[08]*/ String get_ShortTitle(...);
    /*[09]*/ float get_TimeTillFadeTitle(...);
    /*[10]*/ void Activate(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class FirstTimeVisitPokestopDecoration {
    // Fields:
    ICameraRig cameraRig;
    float hideDistance;
    CanvasGroup decorationGui;
    float fadeTime;
    float fadeSpeed;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ FirstTimeVisitPokestopDecoration Create(...);
    /*[05]*/ FirstTimeVisitPokestopDecoration Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ FirstTimePokestopGuiController Create(...);
    /*[05]*/ FirstTimePokestopGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeUserWorldMapState {
    // Fields:
    StarterMapPokemon starterPokemonPrefab;
    Factory mapPokemonFactory;
    IToastService toastService;
    IToastReceipt activeToastReceipt;
    WorldMapState worldMapState;
    MapExploreState mapExploreState;
    ICameraRig cameraRig;
    FirstTimeUserState firstTimeUserState;
    IRpcSpinnerGuiController spinnerGui;
    IConversationService convoService;
    IMapAvatar mapAvatar;
    WorldMapRenderer worldMapRenderer;
    WildPokemonEncounterState encounterState;
    cmod_reqd starterPokedexIds;
    int starterSecretId;
    int respawnsTillSecret;
    float minSpawnDistanceFromPlayer;
    float maxSpawnDistanceFromPlayer;
    float distToRespawnPokemon;
    float waitTimeAfterReturningToMap;
    float spreadPokemonIfCloserThan;
    float spreadAmount;
    float usePokeballHintDelay;
    Coroutine pokeballHintRoutine;
    GameObject pokeballHintPrefab;
    GameObject pokeballHint;
    FirstTimeEncounterUI firstTimeInEncounterUIPrefab;
    Factory firstTimeEncounterUIFactory;
    FirstTimeEncounterUI firstTimeInEncounterUI;
    Factory pokemonTaskFactory;
    EncounterInteractionState encounterInteractionState;
    int pokemonSpawnsCount;
    Generic starterMapPokemon;
    IConversation activeConversation;
    Coroutine monitorPlayerDistRoutine;

    // Methods:
    void .ctor(...);
    void EnterState(...);
    void ExitState(...);
    void CleanupPokeballHint(...);
    void EncounterStarted(...);
    void PokeballThrown(...);
    IEnumerator ShowPokeballHint(...);
    void EncounterSceneLoaded(...);
    void CloseConversation(...);
    void SetupFirstTimeWorldMap(...);
    void HideGameGui(...);
    IEnumerator MonitorPlayerDistance(...);
    void EncounterSceneStarted(...);
    void SpawnPokemonNearPlayer(...);
    void FirstEncounterComplete(...);
    Generic GetGoodSpawnLocations(...);
    void DespawnMapPokemon(...);
    void <EncounterSceneLoaded>m__33(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void EnterState(...);
    /*[06]*/ void ExitState(...);
    /*[07]*/ boolean get_IsActiveState(...);
    /*[08]*/ boolean get_IsLeafState(...);
    /*[09]*/ GameState get_ChildState(...);
    /*[10]*/ GameState get_ParentState(...);
    /*[11]*/ void EnterState(...);
    /*[12]*/ void ExitState(...);
    /*[13]*/ cmod_opt SetActiveSubstate(...);
    /*[14]*/ void Collapse(...);
    /*[15]*/ cmod_opt Replace(...);
    /*[16]*/ void ClearSubstate(...);
}

// Namespace: Niantic.Holoholo.Orientation
class StarterMapPokemon {
    // Fields:
    IMapAvatar mapAvatar;
    GameMasterData masterData;
    IRpcHandler rpcHandler;
    WildPokemonEncounterState encounterState;
    FirstTimeUserWorldMapState firstTimeUserMapState;
    GameObject spawnFxPrefab;
    CaptureProbabilityProto captureProbabilityProto;
    PokemonProto pokemonProto;

    // Methods:
    void .ctor(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    ulong get_EncounterId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    String get_SpawnPointId(...);
    void Initialize(...);
    Generic SendEncounterRequest(...);
    Generic TryCapture(...);
    void PlaySpawnFx(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_Transform(...);
    /*[06]*/ ulong get_EncounterId(...);
    /*[07]*/ PokemonProto get_Pokemon(...);
    /*[08]*/ int get_PokemonId(...);
    /*[09]*/ LatLng get_Location(...);
    /*[10]*/ String get_SpawnPointId(...);
    /*[11]*/ HoloCharacter get_HoloCharacter(...);
    /*[12]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[13]*/ int get_Cp(...);
    /*[14]*/ Generic SendEncounterRequest(...);
    /*[15]*/ Generic TryCapture(...);
    /*[16]*/ void Destroy(...);
    /*[17]*/ ulong get_EncounterId(...);
    /*[18]*/ String get_SpawnPointId(...);
    /*[19]*/ PokemonProto get_Pokemon(...);
    /*[20]*/ int get_PokemonId(...);
    /*[21]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[22]*/ int get_Cp(...);
    /*[23]*/ Generic SendEncounterRequest(...);
    /*[24]*/ Generic TryCapture(...);
    /*[25]*/ void PlaySpawnFx(...);
    /*[26]*/ void HandleDestroy(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    StarterMapPokemon Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ StarterMapPokemon Create(...);
    /*[05]*/ StarterMapPokemon Create(...);
}

// Namespace: Niantic.Holoholo.Orientation
class FirstTimeEncounterUI {
    // Fields:
    IArService arService;
    Action ModeSelected;

    // Methods:
    void .ctor(...);
    void add_ModeSelected(...);
    void remove_ModeSelected(...);
    void NormalPressed(...);
    void ArModePressed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ FirstTimeEncounterUI Create(...);
    /*[05]*/ FirstTimeEncounterUI Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ CatchPokemonTask Create(...);
    /*[05]*/ CatchPokemonTask Create(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class CatchPokemonTask {
    // Fields:
    II18n i18n;
    WildPokemonEncounterState encounterState;
    float timeTillFade;
    Generic ShowingTitle;
    Generic TaskCompleted;

    // Methods:
    void .ctor(...);
    void add_ShowingTitle(...);
    void remove_ShowingTitle(...);
    void add_TaskCompleted(...);
    void remove_TaskCompleted(...);
    String get_ShortTitle(...);
    float get_TimeTillFadeTitle(...);
    void Activate(...);
    void SceneLoaded(...);
    void EncounterComplete(...);
    void OnDestroy(...);
    void PokemonCaptured(...);
    void Complete(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_ShowingTitle(...);
    /*[05]*/ void remove_ShowingTitle(...);
    /*[06]*/ void add_TaskCompleted(...);
    /*[07]*/ void remove_TaskCompleted(...);
    /*[08]*/ String get_ShortTitle(...);
    /*[09]*/ float get_TimeTillFadeTitle(...);
    /*[10]*/ void Activate(...);
}

// Namespace: Niantic.Holoholo.PlayerAwards
class PlayerAwardsInstaller {
    // Fields:
    BadgeService badgeService;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.PlayerAwards
class BadgeService {
    // Fields:
    BadgeAwardGuiController badgeAwardGuiPrefab;
    cmod_reqd defaultBadgeSprites;
    cmod_reqd badgeSprites;
    Generic badgeLookup;
    IToastService toastService;
    II18n i18n;
    GameMasterData gameMaster;
    Factory badgeAwardGuiFactory;
    Coroutine showBadgesRoutine;
    Generic badgesToShow;

    // Methods:
    void .ctor(...);
    void PostInject(...);
    Sprite GetBadgeSprite(...);
    Sprite GetBadgeSprite(...);
    void ShowAwardedBadge(...);
    IEnumerator ShowEnqueuedBadges(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ShowAwardedBadge(...);
    /*[05]*/ Sprite GetBadgeSprite(...);
    /*[06]*/ Sprite GetBadgeSprite(...);
}

// Namespace: Niantic.Holoholo.UI
class BadgeAwardGuiController {
    // Fields:
    Text message;
    cmod_reqd images;
    Music awardMusic;
    II18n ii18n;

    // Methods:
    void .ctor(...);
    void Initialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void Initialize(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IBadgeAwardGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IBadgeAwardGuiController Create(...);
    /*[05]*/ IBadgeAwardGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class IBadgeAwardGuiController {
    // Methods:
    void Initialize(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class TasksInstaller {
    // Fields:
    CatchPokemonTask catchPokemonTaskPrefab;
    FirstTimeVisitPokestopTask firstTimeVisitPokestopTaskPrefab;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class ImageDownloadService {
    // Fields:
    int imageCacheMb;
    uint imageCacheBytes;
    uint cacheBytesUsed;
    Generic textures;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    Texture2D get_ErrorTexture(...);
    void Awake(...);
    Generic GetImage(...);
    Generic HandleKnownRequest(...);
    Generic HandleFirstTimeRequested(...);
    void SortTextures(...);
    IEnumerator GetNewImage(...);
    void EnforceCacheLimit(...);
    int <SortTextures>m__28B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic GetImage(...);
}

// Namespace: Niantic.Holoholo.Connectivity
class ConnectivityService {
    // Fields:
    float initialConnectivityCheckWait;
    float connectivityCheckInterval;
    IUserPromptsService userPrompts;
    ILocationProvider locationProvider;
    GlobalSettings globalSettings;
    String IosAppStoreUrl;
    String AndroidAppStoreUrl;
    boolean outdatedClientDetected;

    // Methods:
    void .ctor(...);
    boolean get_HasInternet(...);
    boolean get_HasGps(...);
    String get_AppStoreUrl(...);
    void StartMonitoring(...);
    void OnDestroy(...);
    void CheckVersion(...);
    IEnumerator MonitorConnectivityAndGPS(...);
    boolean IsMeasuredLocation(...);
    IEnumerator ShowErrorUntil(...);
    void <CheckVersion>m__DF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_HasInternet(...);
    /*[05]*/ boolean get_HasGps(...);
    /*[06]*/ void StartMonitoring(...);
}

// Namespace: Niantic.Holoholo.Internationalization
class LocaleService {
    // Fields:
    SystemLanguage debugLanguage;
    String debugCountryCode;
    Generic euCountries;

    // Methods:
    void .ctor(...);
    void Init(...);
    String get_LanguageCode(...);
    SystemLanguage get_Language(...);
    String get_CountryCode(...);
    boolean get_IsInEuropeanUnion(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ SystemLanguage get_Language(...);
    /*[05]*/ String get_LanguageCode(...);
    /*[06]*/ String get_CountryCode(...);
    /*[07]*/ boolean get_IsInEuropeanUnion(...);
}

// Namespace: Niantic.Holoholo.UI
class IncubatorSelectorGuiService {
    // Fields:
    IncubatorSelectorGuiController incubatorSelectorGuiPrefab;
    Factory guiFactory;
    IncubatorSelectorGuiController incubatorSelectorGui;
    Generic promise;

    // Methods:
    void .ctor(...);
    boolean get_IsOpen(...);
    Generic OpenSelector(...);
    void Select(...);
    void CloseSelector(...);
    void DismissGui(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_IsOpen(...);
    /*[05]*/ Generic OpenSelector(...);
    /*[06]*/ void Select(...);
    /*[07]*/ void CloseSelector(...);
}

// Namespace: Niantic.Holoholo.UI
class IncubatorSelectorGuiController {
    // Fields:
    IncubatorEntry incubatorEntryPrefab;
    IIncubatorSelectorService incubatorService;
    Factory entryFactory;
    Transform entryParent;
    Generic <>f__am$cache4;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void Init(...);
    void HandleDismiss(...);
    int <Init>m__23B(...);
    int <Init>m__23C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class IncubatorEntry {
    // Fields:
    II18n i18n;
    GameMasterData gameMaster;
    IIncubatorSelectorService incubatorService;
    IItemSpriteLookup itemSpriteLookup;
    Text usesLabel;
    Image icon;
    GameObject multiplierParent;
    Text multiplierLabel;
    Button button;
    int defaultFontSize;
    int unlimitedFontSize;
    EggIncubatorProto incubator;

    // Methods:
    void .ctor(...);
    void Init(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IIncubatorSelectorService {
    // Methods:
    boolean get_IsOpen(...);
    Generic OpenSelector(...);
    void Select(...);
    void CloseSelector(...);
}

// Namespace: Holoholo.Rpc
class EggIncubatorProto {
    // Fields:
    int ItemIdFieldNumber = 1;
    int ItemFieldNumber = 2;
    int IncubatorTypeFieldNumber = 3;
    int UsesRemainingFieldNumber = 4;
    int PokemonIdFieldNumber = 5;
    int StartKmWalkedFieldNumber = 6;
    int TargetKmWalkedFieldNumber = 7;
    Generic _parser;
    String itemId_;
    Item item_;
    EggIncubatorType incubatorType_;
    int usesRemaining_;
    long pokemonId_;
    double startKmWalked_;
    double targetKmWalked_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EggIncubatorProto Clone(...);
    String get_ItemId(...);
    void set_ItemId(...);
    Item get_Item(...);
    void set_Item(...);
    EggIncubatorType get_IncubatorType(...);
    void set_IncubatorType(...);
    int get_UsesRemaining(...);
    void set_UsesRemaining(...);
    long get_PokemonId(...);
    void set_PokemonId(...);
    double get_StartKmWalked(...);
    void set_StartKmWalked(...);
    double get_TargetKmWalked(...);
    void set_TargetKmWalked(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EggIncubatorProto <_parser>m__1A5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EggIncubatorProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IncubatorEntry Create(...);
    /*[05]*/ IncubatorEntry Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IncubatorSelectorGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IncubatorSelectorGuiController Create(...);
    /*[05]*/ IncubatorSelectorGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Items
class IncubatorService {
    // Fields:
    IRpcService rpcService;

    // Methods:
    void .ctor(...);
    Generic PutEggInIncubator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic PutEggInIncubator(...);
}

// Namespace: Niantic.Holoholo.UI
class DefenderBonusService {
    // Fields:
    DefenderBonusGuiController bonusGuiPrefab;
    Factory defenderBonusGuiFactory;
    IRpcService rpcService;
    IBehaviourService behaviourService;
    IIapService iapService;
    GameMasterData gameMaster;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    boolean get_HasAvailableBonus(...);
    boolean get_HasDeployedPokemon(...);
    int get_NumDeployedPokemon(...);
    long get_TimeToCollect(...);
    String get_TimeLeftString(...);
    float get_PercentOfTimeToCollect(...);
    Generic ClaimBonus(...);
    void ClaimBonusResponse(...);
    boolean <get_NumDeployedPokemon>m__E6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_HasAvailableBonus(...);
    /*[05]*/ boolean get_HasDeployedPokemon(...);
    /*[06]*/ int get_NumDeployedPokemon(...);
    /*[07]*/ long get_TimeToCollect(...);
    /*[08]*/ String get_TimeLeftString(...);
    /*[09]*/ float get_PercentOfTimeToCollect(...);
    /*[10]*/ Generic ClaimBonus(...);
}

// Namespace: Niantic.Holoholo.UI
class DefenderBonusGuiController {
    // Fields:
    DefenderBonusGuiEntry entryPrefab;
    Text headerText;
    Transform gridParent;
    II18n i18n;
    IBehaviourService behaviourService;
    Generic entries;

    // Methods:
    void .ctor(...);
    void Init(...);
    void CreateEntry(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class DefenderBonusGuiEntry {
    // Fields:
    Image currencyIcon;
    Text amountLabel;
    IItemSpriteLookup itemSpriteLookup;

    // Methods:
    void .ctor(...);
    void Init(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DefenderBonusGuiController Create(...);
    /*[05]*/ DefenderBonusGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Connectivity
class IConnectivityService {
    // Methods:
    boolean get_HasInternet(...);
    boolean get_HasGps(...);
    void StartMonitoring(...);
}

// Namespace: Niantic.Holoholo.GameInput
class InputEventService {
    // Fields:
    GameObject eventSystem;
    Generic backButtonListeners;
    RefCountedBool eventsDisabled;

    // Methods:
    void .ctor(...);
    void EnableInputEvents(...);
    IReceipt ListenForBackButton(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void EnableInputEvents(...);
    /*[05]*/ IReceipt ListenForBackButton(...);
}

// Namespace: Niantic.Holoholo
class RefCountedBool {
    // Fields:
    int requests;

    // Methods:
    void Increment(...);
    void Decrement(...);
    void Clear(...);
    boolean op_Implicit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class UserPromptsService {
    // Fields:
    ModalDialog modalDialogPrefab;
    NumericalPickerDialog numericalPickerDialog;
    GlobalErrorController errorDialogPrefab;
    Factory modalDialogFactory;
    Factory numericalPickerFactory;
    Factory globalErrorFactory;
    float nonBlockingErrorDisappearTime;
    ModalDialog <ActiveModal>k__BackingField;
    NumericalPickerDialog <ActiveNumericalPicker>k__BackingField;
    GlobalErrorController <ActiveErrorDialog>k__BackingField;

    // Methods:
    void .ctor(...);
    ModalDialog get_ActiveModal(...);
    void set_ActiveModal(...);
    NumericalPickerDialog get_ActiveNumericalPicker(...);
    void set_ActiveNumericalPicker(...);
    GlobalErrorController get_ActiveErrorDialog(...);
    void set_ActiveErrorDialog(...);
    Generic ShowModal(...);
    Generic ShowNumericalPicker(...);
    IReceipt ShowBlockingError(...);
    IReceipt ShowNonBlockingError(...);
    void CleanupErrorDialog(...);
    void <ShowModal>m__295(...);
    void <ShowNumericalPicker>m__296(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic ShowModal(...);
    /*[05]*/ Generic ShowNumericalPicker(...);
    /*[06]*/ IReceipt ShowBlockingError(...);
    /*[07]*/ IReceipt ShowNonBlockingError(...);
}

// Namespace: Niantic.Holoholo.UI
class ModalDialog {
    // Fields:
    Text Message;
    ModalButtonContainer ButtonContainer;
    GameObject UIRoot;
    Generic promise;
    float delay;
    AudioClip clickOkSound;
    AudioClip clickCancelSound;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void ButtonPressed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class ModalButtonContainer {
    // Fields:
    Button DefaultButton;
    Button AltButton;

    // Methods:
    void .ctor(...);
    void LayoutButtons(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class NumericalPickerDialog {
    // Fields:
    Text MessagePrefix;
    Text MessageSuffix;
    Text ValueText;
    Image BackgroundImage;
    Button AddButton;
    Button SubtractButton;
    ModalButtonContainer ButtonContainer;
    GameObject UIRoot;
    Generic promise;
    int value;
    int maxValue;
    int minValue;
    Coroutine whilePressedDown;
    float repeatThreshold;
    float repeatFrequency;

    // Methods:
    void .ctor(...);
    int get_Value(...);
    void set_Value(...);
    int get_MaxValue(...);
    void set_MaxValue(...);
    int get_MinValue(...);
    void set_MinValue(...);
    void PointerDown(...);
    void PointerUp(...);
    IEnumerator Repeat(...);
    void Initialize(...);
    void HandleDismiss(...);
    void ButtonPressed(...);
    void AddValue(...);
    void UpdateValue(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class GlobalErrorController {
    // Fields:
    Text messageText;
    IInputEventService inputEventService;
    boolean blockInput;

    // Methods:
    void .ctor(...);
    void Init(...);
    void SetText(...);
    void HandleDismiss(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ModalDialog Create(...);
    /*[05]*/ ModalDialog Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ NumericalPickerDialog Create(...);
    /*[05]*/ NumericalPickerDialog Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    GlobalErrorController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GlobalErrorController Create(...);
    /*[05]*/ GlobalErrorController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class GlobalGuiInstaller {
    // Fields:
    GuiLayerService guiLayerServicePrefab;
    ConversationService conversationServicePrefab;
    UserTaskService userTaskServicePrefab;
    UiCamera uiCameraPrefab;
    ToastService toastServicePrefab;
    XpAwardService xpAwardServicePrefab;
    PokemonBagObserver pokemonBagObserver;
    GuiTransitionInstaller guiTransitionInstaller;
    SponsorDataService sponsorDataServicePrefab;
    RpcSpinnerGuiController rpcSpinnerGuiController;
    PokemonInventoryGuiService pokemonInventoryGuiServicePrefab;
    PokemonInfoGuiService pokemonInfoGuiService;
    PokemonCandySpritesService pokemonCandySpritesServicePrefab;
    PokemonCutsceneService pokemonCutsceneService;
    PokedexListGuiController pokedexListGuiPrefab;
    PokedexInfoGuiService pokedexInfoGuiService;
    ItemInventoryGuiService itemInventoryGuiServicePrefab;
    PlayerProfileGuiService playerProfileGuiServicePrefab;
    ActivityLogService activityLogServicePrefab;
    StorefrontGuiController storefrontScreenPrefab;
    SettingsGuiController settingsGuiPrefab;
    LevelUpGuiController levelUpGuiPrefab;
    EggHatchGuiController eggHatchGuiPrefab;
    DebugGuiController debugGuiPrefab;
    QuickStartHelper quickStartPrefab;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class GuiLayerService {
    // Fields:
    int SortingOrdersPerLayer = 1000;
    IUiCamera uiCamera;
    Generic layerRegistrations;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    IReceipt RegisterGui(...);
    void UnregisterGui(...);
    int GuiCount(...);
    void ShowLayers(...);
    void HideLayers(...);
    boolean IsVisible(...);
    Generic GetRegisteredGuisForLayer(...);
    int GetBaseSortingOrderForLayer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt RegisterGui(...);
    /*[05]*/ void UnregisterGui(...);
    /*[06]*/ int GuiCount(...);
    /*[07]*/ void ShowLayers(...);
    /*[08]*/ void HideLayers(...);
    /*[09]*/ boolean IsVisible(...);
}

// Namespace: Niantic.Holoholo.UI
class IUiCamera {
    // Methods:
    Camera get_Camera(...);
    boolean TransformVisible(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class ConversationService {
    // Fields:
    ConversationGuiController guiPrefab;
    IUserTaskService taskService;
    Conversation activeConversation;
    II18n i18n;
    Factory guiFactory;

    // Methods:
    void .ctor(...);
    IConversation get_ActiveConversation(...);
    void CloseActiveGui(...);
    IConversation PresentConversation(...);
    IConversation PresentConversations(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IConversation get_ActiveConversation(...);
    /*[05]*/ IConversation PresentConversation(...);
    /*[06]*/ IConversation PresentConversations(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class ConversationGuiController {
    // Fields:
    cmod_reqd layouts;
    ConversationLayoutGui convoGui;
    AudioClip messageSound;
    Generic conversationPages;
    int currentPage;
    Coroutine textAnimRoutine;
    boolean dismissed;
    II18n i18n;
    Action ConversationOver;
    Texture <ConversationImage>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_ConversationOver(...);
    void remove_ConversationOver(...);
    Texture get_ConversationImage(...);
    void set_ConversationImage(...);
    void Init(...);
    void ShowConversation(...);
    void ShowConversations(...);
    void Dismiss(...);
    void EnqueueConvo(...);
    void ShowCurrentPage(...);
    void Tapped(...);
    void <Dismiss>m__237(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class ConversationLayoutGui {
    // Fields:
    ConversationLayout layout;
    Text speechLabel;
    Text hiddenSpeechLabel;
    RawImage image;
    RectTransform imageContainer;
    int charactersPerFrame;
    Action ConversationTapped;

    // Methods:
    void .ctor(...);
    void add_ConversationTapped(...);
    void remove_ConversationTapped(...);
    ConversationLayout get_Layout(...);
    void SetSpeechText(...);
    IEnumerator TypeInText(...);
    void ConvoTap(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class ConversationLayout {
    // Fields:
    int value__;
    ConversationLayout Bottom = 0;
    ConversationLayout Top = 1;
    ConversationLayout Large = 2;
    ConversationLayout DialogOnly = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class Conversation {
    // Fields:
    Action onComplete;
    IUserTask <AfterConversationTask>k__BackingField;
    ConversationGuiController <Gui>k__BackingField;

    // Methods:
    void .ctor(...);
    IUserTask get_AfterConversationTask(...);
    void set_AfterConversationTask(...);
    ConversationGuiController get_Gui(...);
    void set_Gui(...);
    void Complete(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Complete(...);
    /*[05]*/ IUserTask get_AfterConversationTask(...);
    /*[06]*/ void set_AfterConversationTask(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    ConversationGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ConversationGuiController Create(...);
    /*[05]*/ ConversationGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class UserTaskService {
    // Fields:
    UserTaskGuiController guiPrefab;
    Factory guiFactory;
    UserTaskGuiController activeGui;
    Generic activeTasks;
    Action TasksChanged;

    // Methods:
    void .ctor(...);
    void add_TasksChanged(...);
    void remove_TasksChanged(...);
    IUserTask get_ActiveTask(...);
    void AddTask(...);
    void RemoveTask(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_TasksChanged(...);
    /*[05]*/ void remove_TasksChanged(...);
    /*[06]*/ IUserTask get_ActiveTask(...);
    /*[07]*/ void AddTask(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class UserTaskGuiController {
    // Fields:
    IUserTaskService userTaskService;
    Text activeTaskLabel;
    CanvasGroup taskTitle;
    float fadeTime;
    float targetAlpha;
    float currentAlphaSpeed;
    Coroutine fadeTaskRoutine;

    // Methods:
    void .ctor(...);
    void Setup(...);
    void Update(...);
    void HideTitle(...);
    void ShowTitle(...);
    void Destroy(...);
    IEnumerator FadeTask(...);
    void UpdateTasks(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ UserTaskGuiController Create(...);
    /*[05]*/ UserTaskGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class UiCamera {
    // Fields:
    boolean enableFog;
    boolean previousFogState;
    Camera <Camera>k__BackingField;

    // Methods:
    void .ctor(...);
    Camera get_Camera(...);
    void set_Camera(...);
    void Awake(...);
    void OnPreRender(...);
    void OnPostRender(...);
    void InitializeGui(...);
    boolean TransformVisible(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Camera get_Camera(...);
    /*[05]*/ boolean TransformVisible(...);
}

// Namespace: Niantic.Holoholo.UI
class ToastService {
    // Fields:
    PokemonToastGuiController pokemonToastPrefab;
    OneLineToastGuiController oneLineToastPrefab;
    RewardItemToastListGuiController rewardItemToastPrefab;
    Factory pokemonToastFactory;
    Factory oneLineToastFactory;
    Factory rewardItemListFactory;
    IItemSpriteLookup itemSpriteLookup;
    II18n i18n;
    ToastGuiController <ActiveToast>k__BackingField;
    RewardItemToastListGuiController <RewardItemToastList>k__BackingField;

    // Methods:
    void .ctor(...);
    ToastGuiController get_ActiveToast(...);
    void set_ActiveToast(...);
    RewardItemToastListGuiController get_RewardItemToastList(...);
    void set_RewardItemToastList(...);
    IToastReceipt Pokemon(...);
    IToastReceipt OneLine(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItem(...);
    void RewardItemCandy(...);
    void RewardItemStardust(...);
    RewardItemToastListGuiController GetRewardListContainer(...);
    IToastReceipt ShowToast(...);
    IToastReceipt ShowToast(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IToastReceipt Pokemon(...);
    /*[05]*/ IToastReceipt OneLine(...);
    /*[06]*/ void RewardItem(...);
    /*[07]*/ void RewardItem(...);
    /*[08]*/ void RewardItem(...);
    /*[09]*/ void RewardItem(...);
    /*[10]*/ void RewardItemCandy(...);
    /*[11]*/ void RewardItemStardust(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonToastGuiController {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class OneLineToastGuiController {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class RewardItemToastListGuiController {
    // Fields:
    RewardItemToastItem listItemPrefab;
    Transform listContainer;
    LayoutElement listOffsetSpacer;
    float DefaultTopPaddingPixels;
    float TopPaddingTweenDuration;
    Coroutine offsetTweenRoutine;
    Factory rewardItemFactory;
    Generic listItems;

    // Methods:
    void .ctor(...);
    void ShowToast(...);
    void ShowToastCandy(...);
    void SetListOffset(...);
    void SetListOffset(...);
    IEnumerator TweenListOffset(...);
    void RemoveItem(...);
    boolean CheckIfListIsEmpty(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class RewardItemToastItem {
    // Fields:
    PokemonCandySprite pokemonCandySpritePrefab;
    Factory pokemonCandySpriteFactory;
    AudioClip itemRewardSound;
    LayoutElement layoutElement;
    Image itemIcon;
    Text itemNameText;
    Text itemAmountText;
    float rowShrinkDuration;
    II18n i18n;
    Promise completionPromise;

    // Methods:
    void .ctor(...);
    IPromise Initialize(...);
    IPromise InitializeCandy(...);
    void OnDestroy(...);
    void StartRowShrink(...);
    IEnumerator ShrinkHeight(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokemonCandySprite Create(...);
    /*[05]*/ PokemonCandySprite Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ RewardItemToastItem Create(...);
    /*[05]*/ RewardItemToastItem Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokemonToastGuiController Create(...);
    /*[05]*/ PokemonToastGuiController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ OneLineToastGuiController Create(...);
    /*[05]*/ OneLineToastGuiController Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ RewardItemToastListGuiController Create(...);
    /*[05]*/ RewardItemToastListGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class ToastGuiController {
    // Fields:
    float minimumDisplayTime;
    float maximumDisplayTime;
    boolean autoDismiss;
    Button fullScreenInvisibleButton;
    Coroutine cDismissCounter;
    float showTime;
    Vector2 offscreenPosition;
    Vector2 displayPosition;
    Text message;
    Image image;
    II18n ii18n;
    IToastReceipt <Receipt>k__BackingField;

    // Methods:
    void .ctor(...);
    IToastReceipt get_Receipt(...);
    void set_Receipt(...);
    void Start(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void SetMessage(...);
    void SetImage(...);
    void SetModal(...);
    void Close(...);
    IEnumerator doCountDown(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class XpAwardService {
    // Fields:
    XpAwardGuiController xpAwardGuiController;
    Factory xpAwardGuiFactory;
    int <AwardedXp>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_AwardedXp(...);
    void set_AwardedXp(...);
    void Awake(...);
    void AwardXp(...);
    void DisplayAwardedXp(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void AwardXp(...);
    /*[05]*/ void DisplayAwardedXp(...);
}

// Namespace: Niantic.Holoholo.UI
class XpAwardGuiController {
    // Fields:
    Text xpAddedTextBasic;
    CanvasGroup xpAddedCanvasGroup;
    AudioClip xpAwardedSound;
    float fadeDuration;
    float showDuration;
    II18n ii18n;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    IEnumerator AnimateXpText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    XpAwardGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ XpAwardGuiController Create(...);
    /*[05]*/ XpAwardGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonBagObserver {
    // Fields:
    Generic filter;

    // Methods:
    void .ctor(...);
    void Start(...);
    void SetFilter(...);
    void RefreshList(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ void SetFilter(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class GuiTransitionInstaller {
    // Fields:
    ScreenWipeGuiController screenWipeGuiPrefab;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Sponsors
class SponsorDataService {
    // Fields:
    cmod_reqd SponsorData;

    // Methods:
    void .ctor(...);
    boolean TryGetSponsorData(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean TryGetSponsorData(...);
}

// Namespace: Niantic.Holoholo.UI
class RpcSpinnerGuiController {
    // Fields:
    IUiCamera uiCamera;
    LoadingSpinner loadingSpinnerPrefab;
    LoadingSpinner loadingSpinner;
    Vector2 spinnerPos;
    int count;
    float alphaTweenTime;
    boolean showingSpinner;
    boolean visible;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void Start(...);
    void CheckRequests(...);
    void SetVisible(...);
    void ShowSpinner(...);
    void HideSpinner(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void SetVisible(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInventoryGuiService {
    // Fields:
    PokemonInventoryList pokemonPagePrefab;
    EggListPage eggPagePrefab;
    PokemonInventoryGuiController pokemonInventoryGuiPrefab;
    IBehaviourService behaviourService;
    PokemonInventoryGuiController <ActivePokemonInventoryGui>k__BackingField;

    // Methods:
    void .ctor(...);
    PokemonInventoryGuiController get_ActivePokemonInventoryGui(...);
    void set_ActivePokemonInventoryGui(...);
    Generic SelectPokemonFromInventory(...);
    Generic ShowPokemonInventoryWithEggs(...);
    Generic ShowPokemonInventory(...);
    Generic ShowPokemonInventoryToApplyItem(...);
    void DismissPokemonInventory(...);
    void UpdateEggWithIncubator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic SelectPokemonFromInventory(...);
    /*[05]*/ Generic ShowPokemonInventoryWithEggs(...);
    /*[06]*/ Generic ShowPokemonInventoryToApplyItem(...);
    /*[07]*/ void DismissPokemonInventory(...);
    /*[08]*/ void UpdateEggWithIncubator(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonInventoryList {
    // Fields:
    long NewPokemonStatusDuration = 86400000;
    RecyclerView recycler;
    Color disabledColor;
    IColorUtil colorUtil;
    Generic pokemonProtos;
    Generic scratchProtos;
    Generic pokemonData;
    boolean dirty;
    Generic filter;
    PokemonInventoryOrder orderedBy;
    SpriteLookup spriteLookup;
    Generic enabledFilter;
    Generic PokemonSelected;
    Generic <Filter>k__BackingField;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;
    Generic <>f__am$cache10;
    Generic <>f__am$cache11;
    Generic <>f__am$cache12;
    Generic <>f__am$cache13;
    Generic <>f__am$cache14;
    Generic <>f__am$cache15;
    Generic <>f__am$cache16;
    Generic <>f__am$cache17;

    // Methods:
    void .ctor(...);
    void add_PokemonSelected(...);
    void remove_PokemonSelected(...);
    Generic get_Filter(...);
    void set_Filter(...);
    PokemonInventoryOrder get_OrderedBy(...);
    void set_OrderedBy(...);
    Transform get_Transform(...);
    Generic get_PokemonProtos(...);
    SpriteLookup get_SpriteLookup(...);
    void OnEnable(...);
    void OnDisable(...);
    void SetProtos(...);
    void PokemonElementSelected(...);
    void AssignPokemonSprite(...);
    Generic PokemonProtoToRecyclerBinding(...);
    void RefreshData(...);
    Generic Sort(...);
    void <RefreshData>m__26B(...);
    int <Sort>m__26C(...);
    float <Sort>m__26D(...);
    int <Sort>m__26E(...);
    String <Sort>m__26F(...);
    int <Sort>m__270(...);
    int <Sort>m__271(...);
    int <Sort>m__272(...);
    boolean <Sort>m__273(...);
    int <Sort>m__274(...);
    int <Sort>m__275(...);
    long <Sort>m__276(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_PokemonSelected(...);
    /*[05]*/ void remove_PokemonSelected(...);
    /*[06]*/ PokemonInventoryOrder get_OrderedBy(...);
    /*[07]*/ void set_OrderedBy(...);
    /*[08]*/ Transform get_Transform(...);
    /*[09]*/ Generic get_PokemonProtos(...);
}

// Namespace: Niantic.Holoholo.Widget
class RecyclerView {
    // Fields:
    RowTraits rowTraits;
    cmod_reqd data;
    RecyclerViewPrototype prototypePrefab;
    int initialVerticalPadding;
    int initialTopPadding;
    LayoutGroup contentLayoutGroup;
    Generic pool;
    cmod_reqd cornersBuffer;
    Generic ElementSelected;
    Generic <VisibleRange>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_ElementSelected(...);
    void remove_ElementSelected(...);
    RecyclerViewPrototype get_PrototypePrefab(...);
    void set_PrototypePrefab(...);
    Generic get_VisibleRange(...);
    void set_VisibleRange(...);
    Generic get_ActiveViews(...);
    int get_RowCount(...);
    int get_ContentHeight(...);
    float get_VerticalLayoutSpacing(...);
    void HandleElementSelection(...);
    void Bind(...);
    int SetupContentLayout(...);
    void SetupRowTraits(...);
    void ClearContent(...);
    float CalculateViewportContentHeightDifference(...);
    float ParametricScrollToPixelOffset(...);
    void VerticalPositionChange(...);
    void BindVisibleElements(...);
    void OnEnable(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnBeginDrag(...);
    /*[17]*/ void OnInitializePotentialDrag(...);
    /*[18]*/ void OnDrag(...);
    /*[19]*/ void OnEndDrag(...);
    /*[20]*/ void OnScroll(...);
    /*[21]*/ void Rebuild(...);
    /*[22]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[23]*/ void LayoutComplete(...);
    /*[24]*/ void GraphicUpdateComplete(...);
    /*[25]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void SetLayoutHorizontal(...);
    /*[36]*/ void SetLayoutVertical(...);
    /*[37]*/ void Rebuild(...);
    /*[38]*/ void LayoutComplete(...);
    /*[39]*/ void GraphicUpdateComplete(...);
    /*[40]*/ void StopMovement(...);
    /*[41]*/ void OnScroll(...);
    /*[42]*/ void OnInitializePotentialDrag(...);
    /*[43]*/ void OnBeginDrag(...);
    /*[44]*/ void OnEndDrag(...);
    /*[45]*/ void OnDrag(...);
    /*[46]*/ void SetContentAnchoredPosition(...);
    /*[47]*/ void LateUpdate(...);
    /*[48]*/ void CalculateLayoutInputHorizontal(...);
    /*[49]*/ void CalculateLayoutInputVertical(...);
    /*[50]*/ float get_minWidth(...);
    /*[51]*/ float get_preferredWidth(...);
    /*[52]*/ float get_flexibleWidth(...);
    /*[53]*/ float get_minHeight(...);
    /*[54]*/ float get_preferredHeight(...);
    /*[55]*/ float get_flexibleHeight(...);
    /*[56]*/ int get_layoutPriority(...);
    /*[57]*/ void SetLayoutHorizontal(...);
    /*[58]*/ void SetLayoutVertical(...);
    /*[59]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[60]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
}

// Namespace: 
class RowTraits {
    // Fields:
    int ElementCount;
    int Height;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class RecyclerViewPrototype {
    // Fields:
    RecyclerDataBindings bindings;
    Generic Selected;
    int <BoundIndex>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_Selected(...);
    void remove_Selected(...);
    RecyclerDataBindings get_Bindings(...);
    int get_BoundIndex(...);
    void set_BoundIndex(...);
    void ElementSelected(...);
    void SetBindings(...);
    void Bind(...);
    void BindSliderFields(...);
    void BindTextData(...);
    void BindImageData(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class RecyclerDataBindings {
    // Fields:
    cmod_reqd textBindings;
    cmod_reqd spriteBindings;
    cmod_reqd sliderBindings;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    Generic get_TextBindings(...);
    Generic get_SpriteBindings(...);
    Generic get_SliderBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonInventoryOrder {
    // Fields:
    int value__;
    PokemonInventoryOrder CP = 0;
    PokemonInventoryOrder HP = 1;
    PokemonInventoryOrder Name = 2;
    PokemonInventoryOrder No = 3;
    PokemonInventoryOrder Date = 4;
    PokemonInventoryOrder Favorite = 5;
    PokemonInventoryOrder Count = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class EggListPage {
    // Fields:
    EggListAdapter listAdapter;
    ListView listView;
    GameObject noEggsDisplay;
    IItemSpriteLookup itemSpriteLookup;
    Generic eggProtos;
    Generic PokemonSelected;

    // Methods:
    void .ctor(...);
    void add_PokemonSelected(...);
    void remove_PokemonSelected(...);
    PokemonInventoryOrder get_OrderedBy(...);
    void set_OrderedBy(...);
    Transform get_Transform(...);
    Generic get_PokemonProtos(...);
    void Start(...);
    void SetProtos(...);
    int EggSorter(...);
    void EggSelected(...);
    void UpdateEggWithIncubator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_PokemonSelected(...);
    /*[05]*/ void remove_PokemonSelected(...);
    /*[06]*/ PokemonInventoryOrder get_OrderedBy(...);
    /*[07]*/ void set_OrderedBy(...);
    /*[08]*/ Transform get_Transform(...);
    /*[09]*/ Generic get_PokemonProtos(...);
}

// Namespace: Niantic.Holoholo.Inventory
class EggListAdapter {
    // Fields:
    EggListItemView itemViewPrefab;
    IItemSpriteLookup itemSpriteLookup;
    Generic OnItemSelected;

    // Methods:
    void .ctor(...);
    void add_OnItemSelected(...);
    void remove_OnItemSelected(...);
    EggListItemView CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ EggListItemView CreateView(...);
}

// Namespace: Niantic.Holoholo.Inventory
class EggListItemView {
    // Fields:
    Text kmTotalText;
    Image iconImage;
    ProgressBar progressBar;
    double kmTotal;
    double kmWalked;
    boolean inIncubator;
    Generic OnClick;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    void set_InIncubator(...);
    boolean get_InIncubator(...);
    void set_KmTotal(...);
    double get_KmTotal(...);
    void set_KmWalked(...);
    double get_KmWalked(...);
    void set_Icon(...);
    Sprite get_Icon(...);
    void Click(...);
    void UpdateProgressBar(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInventoryGuiController {
    // Fields:
    String SORT_MENU_CLOSE = "Close";
    String SORT_MENU_OPEN = "Open";
    PokemonInventoryList pokemonPage;
    EggListPage eggPage;
    IPokemonInfoGuiService pokemonInfoGuiService;
    IPokemonBagObserver pokemonBagObserver;
    IIncubatorSelectorService incubatorSelectorService;
    IInputEventService inputEventService;
    IIncubatorService incubatorService;
    GlobalSettings globalSettings;
    II18n i18n;
    GameObject pokemonPageTitle;
    GameObject eggPageTitle;
    Image sortOrderImage;
    cmod_reqd sortIcon;
    RectTransform pokemonTabRoot;
    RectTransform eggTabRoot;
    PokemonInventoryItemPreviewer itemPreviewer;
    Text countText;
    Text maxCountText;
    Text eggCountText;
    Text maxEggCountText;
    TabView tabView;
    Button incubatorButton;
    Animator sortMenuAnim;
    AudioClip healSound;
    AudioClip backSound;
    AudioClip selectSound;
    AudioClip errorSound;
    float healAnimationDuration;
    Generic displayFilter;
    Generic enabledFilter;
    Generic responsePromise;
    boolean showPokemonInfoOnSelect;
    IReceipt pokemonBagObservationReceipt;
    boolean dataDirty;
    EggIncubatorProto incubator;
    Generic itemToApply;
    boolean <RefreshPaused>k__BackingField;
    Generic <>f__am$cache25;
    Generic <>f__am$cache26;

    // Methods:
    void .ctor(...);
    boolean get_EnableTabView(...);
    void set_EnableTabView(...);
    boolean get_RefreshPaused(...);
    void set_RefreshPaused(...);
    void Start(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void DisplayToApplyItem(...);
    void Display(...);
    void PokemonSelected(...);
    void ApplyItemToPokemon(...);
    IEnumerator PlayHealthAnimation(...);
    void BlockUserInput(...);
    void RefreshLayout(...);
    void ObservePokemonBag(...);
    void SortPokemon(...);
    void SortPokemon(...);
    void OpenIncubatorSelector(...);
    void OnIncubatorSelected(...);
    void RefreshItemPreviewer(...);
    void OnUseIncubatorResult(...);
    void UpdateEggPageWithIncubator(...);
    void <Display>m__25B(...);
    void <Display>m__25C(...);
    boolean <ObservePokemonBag>m__260(...);
    boolean <ObservePokemonBag>m__261(...);
    void <OpenIncubatorSelector>m__262(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class IPokemonBagObserver {
    // Methods:
    void SetFilter(...);
}

// Namespace: Niantic.Holoholo.Items
class IIncubatorService {
    // Methods:
    Generic PutEggInIncubator(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonInventoryItemPreviewer {
    // Fields:
    Text titleText;
    Image icon;
    GameObject countParent;
    Text countLabel;
    IItemSpriteLookup itemSpriteLookup;
    int count;

    // Methods:
    void .ctor(...);
    int get_Count(...);
    void set_Count(...);
    void Init(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class TabView {
    // Fields:
    Scrollbar scrollBar;
    RectTransform header;
    RectTransform viewport;
    RectTransform content;
    float scrollSpeed;
    float snapTime;
    boolean isDragging;
    float snapPosition;
    float velocity;
    float prevPosition;
    float dragAmount;
    DrivenRectTransformTracker drivenRectTracker;
    int selectedTabIndex;
    TabSelectedEvent OnTabSelected;

    // Methods:
    void .ctor(...);
    float get_scrollPosition(...);
    void set_scrollPosition(...);
    int get_Count(...);
    int get_SelectedTabIndex(...);
    void set_SelectedTabIndex(...);
    void OnEnable(...);
    void OnDisable(...);
    void Rebuild(...);
    void LayoutComplete(...);
    void GraphicUpdateComplete(...);
    void CalculateLayoutInputHorizontal(...);
    void CalculateLayoutInputVertical(...);
    float get_minWidth(...);
    float get_preferredWidth(...);
    float get_flexibleWidth(...);
    float get_minHeight(...);
    float get_preferredHeight(...);
    float get_flexibleHeight(...);
    int get_layoutPriority(...);
    void SetLayoutHorizontal(...);
    void SetLayoutVertical(...);
    void OnBeginDrag(...);
    void OnDrag(...);
    void OnEndDrag(...);
    void LateUpdate(...);
    void UpdateSelection(...);
    void UpdateScrollbar(...);
    void SetDirty(...);
    void OnTransformChildrenChanged(...);
    Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnDrag(...);
    /*[17]*/ void OnBeginDrag(...);
    /*[18]*/ void OnEndDrag(...);
    /*[19]*/ void Rebuild(...);
    /*[20]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[21]*/ void LayoutComplete(...);
    /*[22]*/ void GraphicUpdateComplete(...);
    /*[23]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[24]*/ void SetLayoutHorizontal(...);
    /*[25]*/ void SetLayoutVertical(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void Rebuild(...);
    /*[36]*/ void LayoutComplete(...);
    /*[37]*/ void GraphicUpdateComplete(...);
    /*[38]*/ void OnBeginDrag(...);
    /*[39]*/ void OnDrag(...);
    /*[40]*/ void OnEndDrag(...);
    /*[41]*/ void LateUpdate(...);
    /*[42]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[43]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
}

// Namespace: 
class TabSelectedEvent {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize(...);
    /*[05]*/ void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize(...);
    /*[06]*/ MethodInfo FindMethod_Impl(...);
    /*[07]*/ BaseInvokableCall GetDelegate(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoGuiService {
    // Fields:
    PokemonInfoGuiController pokemonInfoGuiPrefab;
    PokemonDetailRenderer pokemonDetailRenderer;
    PokemonTypeBackground pokemonTypeBackground;
    IBehaviourService behaviourService;
    PokemonInfoGuiController <ActivePokemonInfoGui>k__BackingField;

    // Methods:
    void .ctor(...);
    PokemonInfoGuiController get_ActivePokemonInfoGui(...);
    void set_ActivePokemonInfoGui(...);
    void ShowPokemonInfo(...);
    void ShowPokemonInfo(...);
    void DismissPokemonInfo(...);
    void HidePokemonInfo(...);
    void RefreshPokemonInfo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ShowPokemonInfo(...);
    /*[05]*/ void ShowPokemonInfo(...);
    /*[06]*/ void DismissPokemonInfo(...);
    /*[07]*/ void HidePokemonInfo(...);
    /*[08]*/ void RefreshPokemonInfo(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoGuiController {
    // Fields:
    PokemonInfoPanel pokemonInfoPanelPrefab;
    PokemonInfoDynoScrollRect dynoScrollRect;
    RawImage renderedImage;
    GameObject backButtonObject;
    GameObject confirmButtonObject;
    IBehaviourService behaviourService;
    IPokemonTypeBackground pokemonTypeBackground;
    IPokemonDetailRenderer pokemonDetailRenderer;
    float pokemonDisplayScale;
    float pokemonFloatingVerticalOffset;
    Action screenDisplayedDelegate;
    Action screenDismissedDelegate;

    // Methods:
    void .ctor(...);
    void Display(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void Hide(...);
    IEnumerator InitializeComponents(...);
    void DestroyComponents(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoPanel {
    // Fields:
    int FADE_IN_ANIM_ID;
    int FADE_OUT_ANIM_ID;
    NicknamePopupGuiController nicknamePopupPrefab;
    GameMasterData gameMasterData;
    IUserPromptsService userPromptsService;
    IPokemonInfoGuiService guiWindowService;
    IInputEventService inputEventService;
    IToastService toastService;
    II18n i18n;
    IIncubatorSelectorService incubatorSelectorService;
    IIncubatorService incubatorService;
    IPokemonInventoryGuiService pokemonInventoryGuiService;
    IIapService iapService;
    IPokemonCutsceneService pokemonCutsceneService;
    IRpcHandler rpcHandler;
    IMusicService musicService;
    SoundController soundController;
    IMapsApi mapsApi;
    IColorUtil colorUtil;
    IUiCamera uiCamera;
    Factory nicknamePopupFactory;
    RectTransform pokemonUiRoot;
    RectTransform cpUiRoot;
    Text nameText;
    Text cpValueText;
    Image cpFillImage;
    Image cpDotImage;
    float cpArcRadius;
    RectTransform gymIndicator;
    Image gymLogo;
    Text cpUpgradeText;
    Text staminaUpgradeText;
    Text staminaText;
    Text staminaMaxText;
    Slider staminaProgressBar;
    Text weightText;
    Text heightText;
    Text type1Text;
    GameObject typeSpacer;
    Text type2Text;
    Text ability1TitleText;
    Text ability1PowerText;
    Text ability1TypeText;
    Text ability2TitleText;
    Text ability2PowerText;
    Text ability2TypeText;
    GameObject energyNub;
    Transform energyBar;
    Button transferButton;
    Toggle favoriteToggle;
    Text catchDateText;
    RawImage mapImage;
    GameObject mapRoot;
    int mapZoomLevel;
    RectTransform locationRoot;
    Text locationText;
    float sizeTagThreshold;
    Text weightTagText;
    Text heightTagText;
    PokemonInfoPanelUpgradeSection upgradeSection;
    GameObject upgradeFxPrefab;
    Transform upgradeFxAnchor;
    AudioClip upgradeSound;
    float upgradeAnimationTime;
    AnimationCurve upgradeRotationAnimationCurve;
    boolean debugFakeUpgrade;
    RectTransform eggUiRoot;
    RectTransform cpStandinRoot;
    ProgressBar eggProgressBar;
    Text eggCurrentDistanceText;
    Text eggTotalDistanceText;
    Text eggHatchMethodLabel;
    GameObject openIncubatorButton;
    String floatFormatting;
    String movePowerFloatFormatting;
    PokemonInfoDynoScrollRect scrollRect;
    IPokemonDetailRenderer detailRenderer;
    boolean isFavorite;
    Coroutine mapLoadCoroutine;
    boolean shouldLoadMap;
    PokemonProto <PokemonProto>k__BackingField;
    HoloCharacter <CharacterModel>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    PokemonProto get_PokemonProto(...);
    void set_PokemonProto(...);
    HoloCharacter get_CharacterModel(...);
    void set_CharacterModel(...);
    void Initialize(...);
    void OnDestroy(...);
    void OnEnable(...);
    void SetPokemonInfo(...);
    void ShowEggUI(...);
    void OpenIncubatorSelector(...);
    void OnIncubatorSelected(...);
    void OnEggIncubated(...);
    void UpdateDisplayCp(...);
    void ShowPokemonUI(...);
    void TryEvolvePokemon(...);
    void TryUpgradePokemon(...);
    IEnumerator ProcessUpgrade(...);
    IEnumerator LoadMapData(...);
    void EvolveConfirmedCallback(...);
    void PokemonEvolvedServerCallback(...);
    void TryTransferPokemon(...);
    void PokemonReleasedServerCallback(...);
    void SetFavorite(...);
    void SendFavoriteRequest(...);
    void OpenNicknamePopup(...);
    void ToggleFavorite(...);
    void <TryUpgradePokemon>m__249(...);
    void <EvolveConfirmedCallback>m__24A(...);
    void <TryTransferPokemon>m__24D(...);
    void <PokemonReleasedServerCallback>m__24E(...);
    void <SendFavoriteRequest>m__24F(...);
    void <OpenNicknamePopup>m__250(...);
    void <TryUpgradePokemon>m__251(...);
    void <TryUpgradePokemon>m__252(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class NicknamePopupGuiController {
    // Fields:
    IToastService toastService;
    IInputEventService inputEventService;
    InputField nicknameInput;
    PokemonProto pokemon;
    Promise completionPromise;

    // Methods:
    void .ctor(...);
    IPromise Init(...);
    void HandleDismiss(...);
    void Submit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo
class IMapsApi {
    // Methods:
    Generic GetReverseGeocodedAddress(...);
    Generic GetMapImage(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ NicknamePopupGuiController Create(...);
    /*[05]*/ NicknamePopupGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoPanelUpgradeSection {
    // Fields:
    Text candyLabelText;
    Text candyCountText;
    Text stardustCountText;
    Button upgradeButton;
    Text upgradeCandyCostText;
    Text upgradeStardustCostText;
    Button evolutionButton;
    Text evolutionCandyCostText;
    Sprite upgradeSprite;
    Sprite disabledUpgradeSprite;
    Color normalTextColor;
    Color lowCountColor;
    PokemonCandySprite pokemonCandySprite;
    II18n i18n;
    GameMasterData gameMasterData;
    IIapService iapService;
    IToastService toastService;
    String upgradeErrorMessage;
    String evolutionErrorMessage;
    Action OnUpgrade;
    Action OnEvolution;

    // Methods:
    void .ctor(...);
    void add_OnUpgrade(...);
    void remove_OnUpgrade(...);
    void add_OnEvolution(...);
    void remove_OnEvolution(...);
    void Init(...);
    void SetUp(...);
    void SetUpUpgradeButton(...);
    void SetUpEvolutionButton(...);
    void <Init>m__257(...);
    void <Init>m__258(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoDynoScrollRect {
    // Fields:
    Factory panelFactory;
    GameMasterData gameMasterData;

    // Methods:
    void .ctor(...);
    PokemonInfoPanel CreatePage(...);
    HoloPokemonType CurrentPokemonType(...);
    void UpdatePage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnBeginDrag(...);
    /*[17]*/ void OnInitializePotentialDrag(...);
    /*[18]*/ void OnDrag(...);
    /*[19]*/ void OnEndDrag(...);
    /*[20]*/ void OnScroll(...);
    /*[21]*/ void Rebuild(...);
    /*[22]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[23]*/ void LayoutComplete(...);
    /*[24]*/ void GraphicUpdateComplete(...);
    /*[25]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void SetLayoutHorizontal(...);
    /*[36]*/ void SetLayoutVertical(...);
    /*[37]*/ void Rebuild(...);
    /*[38]*/ void LayoutComplete(...);
    /*[39]*/ void GraphicUpdateComplete(...);
    /*[40]*/ void StopMovement(...);
    /*[41]*/ void OnScroll(...);
    /*[42]*/ void OnInitializePotentialDrag(...);
    /*[43]*/ void OnBeginDrag(...);
    /*[44]*/ void OnEndDrag(...);
    /*[45]*/ void OnDrag(...);
    /*[46]*/ void SetContentAnchoredPosition(...);
    /*[47]*/ void LateUpdate(...);
    /*[48]*/ void CalculateLayoutInputHorizontal(...);
    /*[49]*/ void CalculateLayoutInputVertical(...);
    /*[50]*/ float get_minWidth(...);
    /*[51]*/ float get_preferredWidth(...);
    /*[52]*/ float get_flexibleWidth(...);
    /*[53]*/ float get_minHeight(...);
    /*[54]*/ float get_preferredHeight(...);
    /*[55]*/ float get_flexibleHeight(...);
    /*[56]*/ int get_layoutPriority(...);
    /*[57]*/ void SetLayoutHorizontal(...);
    /*[58]*/ void SetLayoutVertical(...);
    /*[59]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[60]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[61]*/ HoloPokemonType CurrentPokemonType(...);
    /*[62]*/ void UpdatePage(...);
    /*[63]*/ PokemonInfoPanel CreatePage(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokemonInfoPanel Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokemonInfoPanel Create(...);
    /*[05]*/ PokemonInfoPanel Create(...);
}

// Namespace: Niantic.Holoholo.UI
class IPokemonDetailRenderer {
    // Methods:
    void add_OnRenderTextureChanged(...);
    void remove_OnRenderTextureChanged(...);
    float get_PokemonDisplayScale(...);
    void set_PokemonDisplayScale(...);
    float get_PokemonFloatingVerticalOffset(...);
    void set_PokemonFloatingVerticalOffset(...);
    PokemonDetailCamera get_CameraRig(...);
    Transform get_CharacterRoot(...);
    RenderTexture InitializeRender(...);
    void Destroy(...);
    HoloCharacter CreateEgg(...);
    HoloCharacter CreatePokemon(...);
    HoloCharacter CreatePokemon(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonDetailCamera {
    // Fields:
    GameObject currentEnv;
    GameObject envContainer;
    GameObject envEvolvePrefab;
    GameObject envEggHatchPrefab;
    GameObject envNewSpeciesPrefab;
    GameObject envLevelUpPrefab;
    Camera renderCamera;
    Vector3 defaultCamWorldPosition;
    Vector3 defaultCamOffset;
    Vector3 defaultCamRotation;
    Music evolveMusic;
    Music gotchaMusic;
    IPokemonCutsceneService pokemonCutsceneService;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void ShowEvolveAnimation(...);
    void ShowNewSpeciesCaughtAnimation(...);
    void ShowEggHatchAnimation(...);
    void ShowLevelUpAnimation(...);
    void ShowEnvAnimation(...);
    void RemoveCurrentEnv(...);
    void RefreshPokemon(...);
    void AnimatePokemonJump(...);
    void AnimatePokemonAttack(...);
    void PlayPokemonCry(...);
    void EvolveAnimationComplete(...);
    void EnableEggHatchedPokemon(...);
    void EggHatchAnimationComplete(...);
    void NewSpeciesCaughtAnimationComplete(...);
    void CheckToShowNewSpeciesAnimFromEvolve(...);
    void CheckToShowNewSpeciesAnimFromEggHatch(...);
    void ResetCameraToDefault(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IPokemonTypeBackground {
    // Methods:
    void Initialize(...);
    void TryToSwitchBackground(...);
    void CleanupBackgrounds(...);
    void Destroy(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonDetailRenderer {
    // Fields:
    IPokemonBoundsService pokemonBoundsService;
    float initialRotation;
    EnumScaleMode scaleMode;
    AnimationCurve pokemonScaleCurve;
    AnimationCurve pokemonFloatingVerticalOffsetCurve;
    float pokemonDisplayScale;
    float pokemonFloatingVerticalOffset;
    float minPokemonLocalScale;
    float maxPokemonLocalScale;
    float floatingPokemonHeight;
    PokemonAnim defaultAnimation;
    PokemonDetailCamera cameraRig;
    Transform characterRoot;
    Generic onRenderTextureChanged;
    RenderTexture renderTexture;
    Vector2 dimensions;

    // Methods:
    void .ctor(...);
    void add_OnRenderTextureChanged(...);
    void remove_OnRenderTextureChanged(...);
    float get_PokemonDisplayScale(...);
    void set_PokemonDisplayScale(...);
    float get_PokemonFloatingVerticalOffset(...);
    void set_PokemonFloatingVerticalOffset(...);
    PokemonDetailCamera get_CameraRig(...);
    Transform get_CharacterRoot(...);
    RenderTexture InitializeRender(...);
    IEnumerator CreateRenderTexture(...);
    void Destroy(...);
    void OnDestroy(...);
    void OnApplicationPause(...);
    HoloCharacter CreateEgg(...);
    HoloCharacter CreatePokemon(...);
    HoloCharacter CreatePokemon(...);
    HoloCharacter CreateCharacter(...);
    void CleanupTexture(...);
    float PokemonHeightM(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnRenderTextureChanged(...);
    /*[05]*/ void remove_OnRenderTextureChanged(...);
    /*[06]*/ float get_PokemonDisplayScale(...);
    /*[07]*/ void set_PokemonDisplayScale(...);
    /*[08]*/ float get_PokemonFloatingVerticalOffset(...);
    /*[09]*/ void set_PokemonFloatingVerticalOffset(...);
    /*[10]*/ PokemonDetailCamera get_CameraRig(...);
    /*[11]*/ Transform get_CharacterRoot(...);
    /*[12]*/ RenderTexture InitializeRender(...);
    /*[13]*/ void Destroy(...);
    /*[14]*/ HoloCharacter CreateEgg(...);
    /*[15]*/ HoloCharacter CreatePokemon(...);
    /*[16]*/ HoloCharacter CreatePokemon(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonTypeBackground {
    // Fields:
    int OldBgSolidOrderOffset = -3;
    int OldBgParticlesOffset = -2;
    int NewBgSolidOrderOffset = -1;
    int NewBgParticlesOrderOffset = 0;
    float transitionSpeed = 1.000000;
    int newType;
    int currentType;
    int sortingOrder;
    boolean animatingTransition;
    GameObject oldBgObj;
    GameObject newBgObj;
    cmod_reqd backgroundsList;
    IUiCamera uiCamera;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void TryToSwitchBackground(...);
    void OnSwitchBackgroundComplete(...);
    void CleanupBackgrounds(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ void TryToSwitchBackground(...);
    /*[06]*/ void CleanupBackgrounds(...);
    /*[07]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonCandySpritesService {
    // Fields:
    cmod_reqd candyColor;

    // Methods:
    void .ctor(...);
    CandyColor FamilyColor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ CandyColor FamilyColor(...);
}

// Namespace: Niantic.Holoholo.Cutscenes
class PokemonCutsceneService {
    // Fields:
    PokemonCutsceneGuiController pokemonCutsceneGuiController;
    PokemonCutsceneGuiController activePokemonCutsceneGui;
    Factory guiFactory;

    // Methods:
    void .ctor(...);
    IPokemonCutsceneGuiController get_ActivePokemonCutsceneGui(...);
    IPromise PlayEggHatchCutscene(...);
    IPromise PlayEvolveCutscene(...);
    IPromise PlayNewSpeciesCutscene(...);
    void CreateActiveGui(...);
    void DestroyActiveGui(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPokemonCutsceneGuiController get_ActivePokemonCutsceneGui(...);
    /*[05]*/ IPromise PlayEvolveCutscene(...);
    /*[06]*/ IPromise PlayEggHatchCutscene(...);
    /*[07]*/ IPromise PlayNewSpeciesCutscene(...);
}

// Namespace: Niantic.Holoholo.Cutscenes
class PokemonCutsceneGuiController {
    // Fields:
    RawImage renderedImage;
    RawImage renderedImageSilhouette;
    RectTransform cameraFramingRect;
    Image pokeInfoObscurer;
    RegisterToPokedexIcons registerToPokedexIcons;
    Animator animator;
    Music evolveMusic;
    Music evolveCompletionMusic;
    Direction newSpeciesWipeDirection;
    float newSpeciesWipeDuration;
    IPokemonDetailRenderer pokemonDetailRenderer;
    IPokemonInfoGuiService guiWindowService;
    SoundController soundController;
    IXpAwardService xpAwardService;
    Factory wipeFactory;
    boolean showNewSpeciesAnim;
    PokemonProto pokemonToEvolveTo;
    HoloCharacter currentCharacter;
    int currentCharacterLayer;
    PokemonProto currentPokemon;
    int fixedExpAward;
    Promise cutsceneCompletedPromise;

    // Methods:
    void .ctor(...);
    void HandleDestroy(...);
    IPromise PlayEvolveCutscene(...);
    IPromise PlayNewSpeciesCutscene(...);
    IPromise PlayEggHatchCutscene(...);
    boolean CheckAndTransitionToNewSpeciesCutcene(...);
    IPromise Initialize(...);
    void CutsceneCompleted(...);
    void InitializeRenderCharacter(...);
    void RefreshEvolvedPokemon(...);
    void ShowPokeInfoObscurer(...);
    void TweenDone(...);
    void EnableEggHatchedPokemon(...);
    void AnimatePokemon(...);
    void AnimatePokemonJump(...);
    void AnimatePokemonAttack(...);
    void AnimatePokemonAttack2(...);
    void PlayPokemonVoice(...);
    void EvolveAnimationComplete(...);
    void EggHatchAnimationComplete(...);
    void NewSpeciesCaughtAnimationComplete(...);
    void ShowEggHatchXp(...);
    void ShowEvolveXp(...);
    void <Initialize>m__E2(...);
    void <Initialize>m__E3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ IPromise PlayEvolveCutscene(...);
    /*[18]*/ IPromise PlayNewSpeciesCutscene(...);
    /*[19]*/ IPromise PlayEggHatchCutscene(...);
    /*[20]*/ boolean CheckAndTransitionToNewSpeciesCutcene(...);
    /*[21]*/ void EnableEggHatchedPokemon(...);
    /*[22]*/ void RefreshEvolvedPokemon(...);
    /*[23]*/ void AnimatePokemonJump(...);
    /*[24]*/ void AnimatePokemonAttack2(...);
    /*[25]*/ void PlayPokemonVoice(...);
    /*[26]*/ void EvolveAnimationComplete(...);
    /*[27]*/ void EggHatchAnimationComplete(...);
    /*[28]*/ void NewSpeciesCaughtAnimationComplete(...);
    /*[29]*/ void ShowEvolveXp(...);
    /*[30]*/ void ShowEggHatchXp(...);
}

// Namespace: 
class RegisterToPokedexIcons {
    // Fields:
    GridLayoutGroup pokedexGrid;
    GameObject pokeNavPrefab;
    Color silhouetteColor;
    AudioClip registerSound;
    PokemonProto pokemon;
    int pokemonId;

    // Methods:
    void .ctor(...);
    void SetPokedexIcons(...);
    void RegisterTeaserPokedex(...);
    void UndiscoverPokemonIcon(...);
    void DiscoverPokemonIcon(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Direction {
    // Fields:
    int value__;
    Direction Up = 0;
    Direction Down = 1;
    Direction Left = 2;
    Direction Right = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokemonCutsceneGuiController Create(...);
    /*[05]*/ PokemonCutsceneGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class PokedexListGuiController {
    // Fields:
    PokedexListAdapter pokedexListAdapterPrefab;
    ListView listViewPrefab;
    Text timesSeenText;
    Text timesCaughtText;
    RectTransform listContentContainer;
    AudioClip backSound;
    IPokedexInfoGuiService infoGuiService;
    ListView listView;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void ClickExit(...);
    void OnPokedexEntrySelected(...);
    ListView CreateListView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Inventory
class PokedexListAdapter {
    // Fields:
    PokedexListItemView itemViewPrefab;
    Generic OnItemSelected;

    // Methods:
    void .ctor(...);
    void add_OnItemSelected(...);
    void remove_OnItemSelected(...);
    PokedexListItemView CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ PokedexListItemView CreateView(...);
}

// Namespace: Niantic.Holoholo.Inventory
class PokedexListItemView {
    // Fields:
    Image background;
    Image captureIndicatorImage;
    Text entryNumberText;
    Image backShadow;
    Image iconImage;
    Text nameText;
    Color silhouetteColor;
    int entryNumber;
    Generic OnClick;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    void set_Name(...);
    String get_Name(...);
    void set_EntryNumber(...);
    int get_EntryNumber(...);
    void set_Icon(...);
    Sprite get_Icon(...);
    boolean get_Silhouette(...);
    void set_Silhouette(...);
    boolean get_Clickable(...);
    void set_Clickable(...);
    boolean get_CaptureIndicator(...);
    void set_CaptureIndicator(...);
    void SetStatus(...);
    void Click(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class IPokedexInfoGuiService {
    // Methods:
    IPromise ShowPokedexInfo(...);
    void DismissPokedexInfo(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class PokedexInfoGuiService {
    // Fields:
    PokedexInfoGuiController pokedexInfoGuiPrefab;
    Factory guiFactory;
    PokedexInfoGuiController <ActivePokemonInfoGui>k__BackingField;

    // Methods:
    void .ctor(...);
    PokedexInfoGuiController get_ActivePokemonInfoGui(...);
    void set_ActivePokemonInfoGui(...);
    IPromise ShowPokedexInfo(...);
    void DismissPokedexInfo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IPromise ShowPokedexInfo(...);
    /*[05]*/ void DismissPokedexInfo(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class PokedexInfoGuiController {
    // Fields:
    PokedexInfoPanel pokedexInfoPanelPrefab;
    PokedexInfoDynoScrollRect scrollRect;
    RawImage renderedImage;
    IPokemonDetailRenderer pokemonDetailRenderer;
    Promise dismissalPromise;

    // Methods:
    void .ctor(...);
    void Start(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    IPromise Display(...);
    void CreateScrollerContents(...);
    void ClickBackButton(...);
    void <Start>m__244(...);
    void <Display>m__245(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class PokedexInfoPanel {
    // Fields:
    GameObject pokedex_panel;
    GameObject details_panel;
    GameObject typesSection;
    GameObject autoLayoutSection;
    GameObject title_bar;
    RawImage renderedImage;
    GameObject clientTest;
    Text revNumText;
    Text numCaughtText;
    Text numSeenText;
    Text weightText;
    Text heightText;
    RectTransform typeSeparator;
    Text type1Text;
    Text type2Text;
    IPokemonDetailRenderer detailRenderer;
    Image capturedIndicator;
    Text nameText;
    Text entryNumberText;
    int <PokemonId>k__BackingField;
    HoloCharacter <CharacterModel>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_PokemonId(...);
    void set_PokemonId(...);
    HoloCharacter get_CharacterModel(...);
    void set_CharacterModel(...);
    boolean SetPokedex(...);
    String GetComponentName_Evo(...);
    int SumMax_EvoGeneration(...);
    void SetTextLabel(...);
    void SetImage(...);
    void SetRawImage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokedex
class PokedexInfoDynoScrollRect {
    // Fields:
    Factory panelFactory;
    GameMasterData gameMasterData;

    // Methods:
    void .ctor(...);
    PokedexInfoPanel CreatePage(...);
    void UpdatePage(...);
    HoloPokemonType CurrentPokemonType(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnBeginDrag(...);
    /*[17]*/ void OnInitializePotentialDrag(...);
    /*[18]*/ void OnDrag(...);
    /*[19]*/ void OnEndDrag(...);
    /*[20]*/ void OnScroll(...);
    /*[21]*/ void Rebuild(...);
    /*[22]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[23]*/ void LayoutComplete(...);
    /*[24]*/ void GraphicUpdateComplete(...);
    /*[25]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void SetLayoutHorizontal(...);
    /*[36]*/ void SetLayoutVertical(...);
    /*[37]*/ void Rebuild(...);
    /*[38]*/ void LayoutComplete(...);
    /*[39]*/ void GraphicUpdateComplete(...);
    /*[40]*/ void StopMovement(...);
    /*[41]*/ void OnScroll(...);
    /*[42]*/ void OnInitializePotentialDrag(...);
    /*[43]*/ void OnBeginDrag(...);
    /*[44]*/ void OnEndDrag(...);
    /*[45]*/ void OnDrag(...);
    /*[46]*/ void SetContentAnchoredPosition(...);
    /*[47]*/ void LateUpdate(...);
    /*[48]*/ void CalculateLayoutInputHorizontal(...);
    /*[49]*/ void CalculateLayoutInputVertical(...);
    /*[50]*/ float get_minWidth(...);
    /*[51]*/ float get_preferredWidth(...);
    /*[52]*/ float get_flexibleWidth(...);
    /*[53]*/ float get_minHeight(...);
    /*[54]*/ float get_preferredHeight(...);
    /*[55]*/ float get_flexibleHeight(...);
    /*[56]*/ int get_layoutPriority(...);
    /*[57]*/ void SetLayoutHorizontal(...);
    /*[58]*/ void SetLayoutVertical(...);
    /*[59]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[60]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[61]*/ HoloPokemonType CurrentPokemonType(...);
    /*[62]*/ void UpdatePage(...);
    /*[63]*/ PokedexInfoPanel CreatePage(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    PokedexInfoPanel Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokedexInfoPanel Create(...);
    /*[05]*/ PokedexInfoPanel Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PokedexInfoGuiController Create(...);
    /*[05]*/ PokedexInfoGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Items
class ItemInventoryGuiService {
    // Fields:
    ItemInventoryGuiController inventoryGuiPrefab;
    Factory inventoryGuiFactory;
    IItemInventoryGuiController <ActiveItemInventoryGui>k__BackingField;

    // Methods:
    void .ctor(...);
    IItemInventoryGuiController get_ActiveItemInventoryGui(...);
    void set_ActiveItemInventoryGui(...);
    Generic ShowInventory(...);
    void DismissInventory(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic ShowInventory(...);
    /*[05]*/ void DismissInventory(...);
}

// Namespace: Niantic.Holoholo.UI.Items
class ItemInventoryGuiController {
    // Fields:
    ItemListAdapter itemListAdapterPrefab;
    ListView itemListViewPrefab;
    Text itemCountText;
    Text maxItemCountText;
    Sprite recycleDialogBackground;
    RectTransform listContentContainer;
    AudioClip backSound;
    GameMasterData gameMasterData;
    GlobalSettings globalSettings;
    IUserPromptsService userPromptsService;
    IPokemonInventoryGuiService inventoryGuiService;
    II18n ii18n;
    Factory listAdapterFactory;
    ListView itemListView;
    ItemListAdapter itemListAdapter;
    Generic itemSelectionPromise;
    Generic usableFilter;
    Generic <>f__am$cache11;
    Generic <>f__am$cache12;
    Generic <>f__am$cache13;

    // Methods:
    void .ctor(...);
    Generic Initialize(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    ListView CreateItemListView(...);
    void UpdateItemListAdapterItems(...);
    void UpdateCountText(...);
    boolean CanItemBeRecycled(...);
    boolean CanItemBeUsed(...);
    void ItemSelected(...);
    void ItemRecycleSelected(...);
    void UseMedicine(...);
    int <UpdateItemListAdapterItems>m__23D(...);
    boolean <UseMedicine>m__23F(...);
    boolean <UseMedicine>m__240(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ Generic Initialize(...);
}

// Namespace: Niantic.Holoholo.Inventory
class ItemListAdapter {
    // Fields:
    ItemListItemView itemViewPrefab;
    Factory itemViewFactory;
    IItemSpriteLookup itemSpriteLookup;
    Generic OnItemSelected;
    Generic OnItemRecycleSelected;

    // Methods:
    void .ctor(...);
    void add_OnItemSelected(...);
    void remove_OnItemSelected(...);
    void add_OnItemRecycleSelected(...);
    void remove_OnItemRecycleSelected(...);
    ItemListItemView CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ItemListItemView CreateView(...);
}

// Namespace: Niantic.Holoholo.Inventory
class ItemListItemView {
    // Fields:
    IToastService toastService;
    EncounterInteractionState encounterInteractionState;
    WorldMapState worldMapState;
    Text titleText;
    Text descriptionsText;
    Text countText;
    GameObject countBox;
    Image iconImage;
    Button disabledStateButton;
    Button useButton;
    Image recycleImage;
    Button recycleButton;
    Color activeTextColor;
    Color inactiveTextColor;
    Color activeIconColor;
    Color inactiveIconColor;
    float activeCountBoxAlpha;
    float inactiveCountBoxAlpha;
    int count;
    HoloItemType itemType;
    Generic OnClick;
    Generic OnRecycleClick;

    // Methods:
    void .ctor(...);
    void add_OnClick(...);
    void remove_OnClick(...);
    void add_OnRecycleClick(...);
    void remove_OnRecycleClick(...);
    void set_ItemType(...);
    HoloItemType get_ItemType(...);
    void set_Title(...);
    String get_Title(...);
    void set_Descriptions(...);
    String get_Descriptions(...);
    void set_Count(...);
    int get_Count(...);
    void set_Icon(...);
    Sprite get_Icon(...);
    boolean get_Usable(...);
    void set_Usable(...);
    void set_Recyclable(...);
    Image get_IconImage(...);
    void Click(...);
    void DisabledClick(...);
    void ShowDefaultCantUse(...);
    void RecycleClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ItemListItemView Create(...);
    /*[05]*/ ItemListItemView Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ItemListAdapter Create(...);
    /*[05]*/ ItemListAdapter Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IItemInventoryGuiController Create(...);
    /*[05]*/ IItemInventoryGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.Items
class IItemInventoryGuiController {
    // Methods:
    Generic Initialize(...);
}

// Namespace: Niantic.Holoholo.UI
class PlayerProfileGuiService {
    // Fields:
    PlayerProfileGuiController playerProfileGuiPrefab;
    BadgeDetailGuiController badgeDetailGuiPrefab;
    Factory profileGuiFactory;
    PlayerProfileGuiController <ActiveProfileGui>k__BackingField;

    // Methods:
    void .ctor(...);
    PlayerProfileGuiController get_ActiveProfileGui(...);
    void set_ActiveProfileGui(...);
    void ShowLocalPlayerProfile(...);
    void DismissActiveProfile(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ShowLocalPlayerProfile(...);
    /*[05]*/ void DismissActiveProfile(...);
}

// Namespace: Niantic.Holoholo.UI
class PlayerProfileGuiController {
    // Fields:
    BadgeListItemView itemViewPrefab;
    ProgressBar xpProgressBar;
    Image xpBarImage;
    Image xpBarCircle;
    Image teamEmblem;
    Image teamEmblemSmall;
    Text levelText;
    Text teamNameText;
    Text playerNameText;
    Text xpText;
    Text startDateText;
    ListView badgeListView;
    PlayerBadgeListAdapter badgeListAdapter;
    PlayerAvatarStage avatarStagePrefab;
    cmod_reqd teamSprite;
    Color blueRedFill;
    Color yellowFill;
    ScrollRect scrollRect;
    AudioClip storefrontSound;
    AudioClip selectSound;
    GameMasterData gameMasterData;
    IRpcHandler rpcHandler;
    Factory storefrontGuiFactory;
    IActivityLogService activityLogService;
    IColorUtil colorUtil;
    PlayerAvatarStage avatarStage;
    IReceipt playerObservationReceipt;

    // Methods:
    void .ctor(...);
    PlayerAvatarStage get_AvatarStage(...);
    void Init(...);
    void HandleDestroy(...);
    void ClickExit(...);
    void RefreshPlayerUI(...);
    void RefreshBadgeUI(...);
    void RequestServerUpdate(...);
    void ClickStorefront(...);
    void ClickActivityLog(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Player
class BadgeListItemView {
    // Fields:
    PlayerBadgeProto badge;
    Text titleText;
    Text currentValueText;
    Text nextValueText;
    Image progressImage;
    Image badgeImage;
    Factory badgeDetailFactory;
    IBadgeService badgeService;

    // Methods:
    void .ctor(...);
    PlayerBadgeProto get_Badge(...);
    void set_Badge(...);
    void Refresh(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class PlayerBadgeProto {
    // Fields:
    int BadgeTypeFieldNumber = 1;
    int RankFieldNumber = 2;
    int StartValueFieldNumber = 3;
    int EndValueFieldNumber = 4;
    int CurrentValueFieldNumber = 5;
    Generic _parser;
    HoloBadgeType badgeType_;
    int rank_;
    int startValue_;
    int endValue_;
    double currentValue_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerBadgeProto Clone(...);
    HoloBadgeType get_BadgeType(...);
    void set_BadgeType(...);
    int get_Rank(...);
    void set_Rank(...);
    int get_StartValue(...);
    void set_StartValue(...);
    int get_EndValue(...);
    void set_EndValue(...);
    double get_CurrentValue(...);
    void set_CurrentValue(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerBadgeProto <_parser>m__1B1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerBadgeProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    BadgeDetailGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BadgeDetailGuiController Create(...);
    /*[05]*/ BadgeDetailGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class BadgeDetailGuiController {
    // Fields:
    Text badgeNameLabel;
    Text badgeDescriptionLabel;
    Text currentValueLabel;
    Text totalValueLabel;
    GameObject valueSlash;
    Image currentBadgeImage;
    Image progressFillBar;
    II18n i18n;
    IBadgeService badgeService;

    // Methods:
    void .ctor(...);
    void Initialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.PlayerAwards
class IBadgeService {
    // Methods:
    void ShowAwardedBadge(...);
    Sprite GetBadgeSprite(...);
    Sprite GetBadgeSprite(...);
}

// Namespace: Niantic.Holoholo.Player
class PlayerBadgeListAdapter {
    // Fields:
    cmod_reqd BASIC_BADGES;
    BadgeListItemView itemViewPrefab;
    Factory badgeItemViewFactory;
    Generic <>f__am$cache3;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Init(...);
    BadgeListItemView CreateView(...);
    boolean <Init>m__242(...);
    int <Init>m__243(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ BadgeListItemView CreateView(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    BadgeListItemView Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BadgeListItemView Create(...);
    /*[05]*/ BadgeListItemView Create(...);
}

// Namespace: Niantic.Holoholo.Avatar
class PlayerAvatarStage {
    // Fields:
    Transform avatarRoot;
    GameObject avatar;

    // Methods:
    void .ctor(...);
    Transform get_AvatarRoot(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IActivityLogService {
    // Methods:
    void ShowActivityLog(...);
    void DismissActivityLog(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ PlayerProfileGuiController Create(...);
    /*[05]*/ PlayerProfileGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class ActivityLogService {
    // Fields:
    ActivityLogGuiController activityLogGuiPrefab;
    Factory activityLogGuiFactory;
    ActivityLogGuiController <ActiveActivityLogGui>k__BackingField;

    // Methods:
    void .ctor(...);
    ActivityLogGuiController get_ActiveActivityLogGui(...);
    void set_ActiveActivityLogGui(...);
    void ShowActivityLog(...);
    void DismissActivityLog(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ShowActivityLog(...);
    /*[05]*/ void DismissActivityLog(...);
}

// Namespace: Niantic.Holoholo.UI
class ActivityLogGuiController {
    // Fields:
    ActivityLogEntryView entryViewPrefab;
    RectTransform content;
    IRpcHandler rpcHandler;
    IUserPromptsService userPromptService;
    Factory entryViewFactory;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Refresh(...);
    void UpdateEntries(...);
    void <Refresh>m__238(...);
    void <Refresh>m__239(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class ActivityLogEntryView {
    // Fields:
    Sprite pokestopSprite;
    ImageTextView iconViewPrefab;
    Image image;
    Text titleText;
    Text dateText;
    Text cpText;
    RectTransform itemGrid;
    SpriteLookup spriteLookup;
    IItemSpriteLookup itemSpriteLookup;
    II18n i18n;

    // Methods:
    void .ctor(...);
    void SetUp(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class ImageTextView {
    // Fields:
    Image image;
    Text text;

    // Methods:
    void .ctor(...);
    Image get_Image(...);
    void set_Image(...);
    Text get_Text(...);
    void set_Text(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ActivityLogEntryView Create(...);
    /*[05]*/ ActivityLogEntryView Create(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ActivityLogGuiController Create(...);
    /*[05]*/ ActivityLogGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Storefront
class StorefrontGuiController {
    // Fields:
    int DEFAULT_DAILY_BONUS_COINS = 100;
    BuyItemGuiController buyItemStatePrefab;
    StorefrontCategory storefrontCategoryPrefab;
    StorefrontButton storefrontButtonPrefab;
    CoinSpawner coinSpawnerPrefab;
    SmartCoinParticle coinParticlePrefab;
    AudioClip openSound;
    AudioClip closeSound;
    AudioClip dailyBonusSound;
    GameObject bonusPopup;
    Text bonusCoinLabel;
    IBehaviourService behaviourService;
    IUserPromptsService userPrompts;
    IIapService iapService;
    LoadingSpinner spinner;
    Factory buyItemGuiFactory;
    IRpcHandler rpcHandler;
    II18n i18n;
    GameMasterData gameMasterData;
    Transform categoryParent;
    Transform coinTarget;
    ScrollRect scrollRect;
    GameObject spinnerBg;
    GameObject spinnerSuccessText;
    AudioSource successSound;
    float spinnerSuccessTime;
    float spinnerScale;
    Generic queuedScrollCategory;
    Generic categories;

    // Methods:
    void .ctor(...);
    ScrollRect get_ScrollRect(...);
    void Init(...);
    void HandleDismiss(...);
    void ReceiveDailyBonus(...);
    void GetItems(...);
    void OnIapSelected(...);
    void OnCoinsSelected(...);
    IEnumerator SpinnerShowSuccess(...);
    void GenerateCoins(...);
    void BackPressed(...);
    void ScrollToCategory(...);
    void CloseGift(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void OnCoinsSelected(...);
    /*[18]*/ void OnIapSelected(...);
    /*[19]*/ void ScrollToCategory(...);
}

// Namespace: Niantic.Holoholo.Storefront
class BuyItemGuiController {
    // Fields:
    AudioSource closeSound;
    AudioSource clickSound;
    AudioSource successSound;
    Text nameLabel;
    Text descriptionLabel;
    Text countLabel;
    GameObject countGroup;
    GameObject buttonParent;
    Image itemImage;
    Text costLabel;
    Color hasEnoughCoinsColor;
    Color notEnoughCoinsColor;
    GameObject spinnerBg;
    GameObject spinnerSuccessText;
    float spinnerSuccessTime;
    float spinnerScale;
    boolean displayCounter;
    IUserPromptsService prompt;
    IImageDownloadService downloader;
    IInputEventService inputEventService;
    IIapService iap;
    IStorefrontGuiController storefrontState;
    GlobalSettings globalSettings;
    LoadingSpinner spinner;
    II18n i18n;
    GameMasterData gameMaster;
    IItemSpriteLookup spriteLookup;
    int cost;
    int count;
    IapItem iapItem;
    boolean outstandingPurchase;

    // Methods:
    void .ctor(...);
    void PostInject(...);
    void HandleDismiss(...);
    void Initialize(...);
    boolean CheckFullyUpgraded(...);
    void Init(...);
    void ClickBuy(...);
    IEnumerator SpinnerShowSuccess(...);
    void DisplayNotEnoughInventoryMessage(...);
    void DisplayNotEnoughCoinsMessage(...);
    void ClickBack(...);
    void <ClickBuy>m__27A(...);
    void <ClickBuy>m__27B(...);
    void <ClickBuy>m__27C(...);
    void <DisplayNotEnoughInventoryMessage>m__27D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void Initialize(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IapItem {
    // Fields:
    Generic currencyCosts;
    Generic grantedCurrency;
    Generic presentationData;
    Generic itemQuantities;
    String <Sku>k__BackingField;
    boolean <IsVendorItem>k__BackingField;
    boolean <CanBePurchased>k__BackingField;
    String <LocalCurrencyPrice>k__BackingField;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    String get_Sku(...);
    void set_Sku(...);
    String get_StrippedSku(...);
    boolean get_IsVendorItem(...);
    void set_IsVendorItem(...);
    boolean get_CanBePurchased(...);
    void set_CanBePurchased(...);
    String get_LocalCurrencyPrice(...);
    void set_LocalCurrencyPrice(...);
    int get_CoinCost(...);
    int get_GrantedCurrency(...);
    int get_Count(...);
    HoloIapItemCategory get_Category(...);
    int get_SortOrder(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class HoloIapItemCategory {
    // Fields:
    int value__;
    HoloIapItemCategory IAP_CATEGORY_NONE = 0;
    HoloIapItemCategory IAP_CATEGORY_BUNDLE = 1;
    HoloIapItemCategory IAP_CATEGORY_ITEMS = 2;
    HoloIapItemCategory IAP_CATEGORY_UPGRADES = 3;
    HoloIapItemCategory IAP_CATEGORY_POKECOINS = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Storefront
class StorefrontCategory {
    // Fields:
    Text categoryTitle;
    Transform buttonParent;
    GridLayoutGroup grid;
    int standardGridDimension;
    int twoWideGridWidth;
    IBehaviourService behaviourService;
    Generic buttons;
    HoloIapItemCategory <Category>k__BackingField;

    // Methods:
    void .ctor(...);
    HoloIapItemCategory get_Category(...);
    void set_Category(...);
    void Init(...);
    void AddIap(...);
    void AddIap(...);
    void AddCoin(...);
    void Resize(...);
    StorefrontButton GetItemButton(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class StorefrontButton {
    // Fields:
    AudioSource tapSound;
    Text nameLabel;
    Text countLabel;
    Text costLabel;
    GameObject coinCost;
    GameObject countBackground;
    Image image;
    boolean displayCount;
    IStorefrontGuiController storefrontState;
    II18n i18n;
    IItemSpriteLookup spriteLookup;
    IapItem <iapItem>k__BackingField;

    // Methods:
    void .ctor(...);
    IapItem get_iapItem(...);
    void set_iapItem(...);
    void Init(...);
    void Init(...);
    void Init(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Init(...);
    /*[05]*/ void Init(...);
    /*[06]*/ void OnClick(...);
}

// Namespace: Niantic.Holoholo.Storefront
class CoinSpawner {
    // Fields:
    IBehaviourService behaviourService;
    IIapService iapService;
    float spawnTime;
    int coinValue;
    boolean ticking;
    Generic coins;

    // Methods:
    void .ctor(...);
    void SpawnCoins(...);
    IEnumerator SpawnCoinsOverTime(...);
    void AddCoin(...);
    IEnumerator OnFirstCoinFinish(...);
    IEnumerator OnLastCoinFinish(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class SmartCoinParticle {
    // Fields:
    float delayVariance;
    float delayPerCoin;
    float minDelay;
    float maxDistance;
    float moveTime;
    float moveTimeVariance;
    float scaleVariance;
    float startMoveTimeBase;
    float startMoveVariance;
    float scaleDownPoint;
    AnimationCurve moveCurve;
    boolean <Finished>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_Finished(...);
    void set_Finished(...);
    void Spawn(...);
    IEnumerator Move(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    IBuyItemGuiController Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IBuyItemGuiController Create(...);
    /*[05]*/ IBuyItemGuiController Create(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IBuyItemGuiController {
    // Methods:
    void Initialize(...);
}

// Namespace: Niantic.Holoholo.UI
class SettingsGuiController {
    // Fields:
    AboutScreenGuiController aboutScreenPrefab;
    GameObject fpsCounterPrefab;
    Toggle toggleMusic;
    Toggle toggleSFX;
    Toggle toggleVibration;
    Toggle toggleFPSCounter;
    Toggle toggleBatterySaver;
    Toggle toggleEmailMarketing;
    RectTransform debugMenuRoot;
    Music mapMusic;
    AudioClip backSound;
    AboutScreenGuiController aboutScreen;
    GameObject quickStartScreen;
    GameObject fpsCounter;
    IMusicService musicService;
    IUserPromptsService userPromptsService;
    IBatterySaverService batterySaverService;
    IBundleManager bundleManager;
    IAuthenticationService authenticationService;
    WorldMapState worldMapState;
    IRpcHandler rpcHandler;
    IInputEventService inputService;
    II18n i18n;
    Factory quickStartFactory;
    Factory aboutScreenFactory;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void HandleDismiss(...);
    void HandleDestroy(...);
    void ClickExit(...);
    void ClickAbout(...);
    void ClickQuickStart(...);
    void ClickLogout(...);
    void ToggleMusic(...);
    void ToggleSfx(...);
    void ToggleBatterySaver(...);
    void ToggleVibration(...);
    void ToggleEmailMarketing(...);
    void ClickClearAssetCache(...);
    void ClickSupport(...);
    void ClickReportIssues(...);
    void ToggleFpsCounter(...);
    void ClickModelViewer(...);
    void <ToggleEmailMarketing>m__277(...);
    void <ClickSupport>m__278(...);
    void <ClickReportIssues>m__279(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.UI
class AboutScreenGuiController {
    // Fields:
    RectTransform copyrightView;
    RectTransform contentRoot;
    RectTransform eulaView;
    RectTransform licensesView;
    RectTransform privacyView;
    ScrollRect scrollRect;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    void LicensesButtonPressed(...);
    void TermsOfServiceButtonPressed(...);
    void PrivacyPolicyButtonPressed(...);
    void ShowView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ AboutScreenGuiController Create(...);
    /*[05]*/ AboutScreenGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI
class LevelUpGuiController {
    // Fields:
    cmod_reqd textLevel;
    Music levelUpMusic;
    float showRewardsDelay;
    IRpcHandler rpcHandler;
    IToastService toastService;
    IMapAvatar mapAvatar;
    LevelUpRewardsOutProto rewardsProto;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    IEnumerator ShowItemRewards(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void Initialize(...);
}

// Namespace: Holoholo.Rpc
class LevelUpRewardsOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int ItemsFieldNumber = 2;
    int ItemsUnlockedFieldNumber = 4;
    Generic _parser;
    Result result_;
    Generic _repeated_items_codec;
    Generic items_;
    Generic _repeated_itemsUnlocked_codec;
    Generic itemsUnlocked_;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    LevelUpRewardsOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_Items(...);
    Generic get_ItemsUnlocked(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    LevelUpRewardsOutProto <_parser>m__1B5(...);
    int <_repeated_itemsUnlocked_codec>m__1B6(...);
    Item <_repeated_itemsUnlocked_codec>m__1B7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ LevelUpRewardsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result AWARDED_ALREADY = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class EggHatchGuiController {
    // Fields:
    Text textHeadline;
    Text textHatching;
    GameObject buttonOK;
    Music eggHatchMusic;
    IPokemonCutsceneService pokemonCutsceneService;
    IToastService toastService;
    GameMasterData gameMasterData;
    IItemSpriteLookup itemSpriteLookup;
    II18n i18n;
    GetHatchedEggsOutProto hatchedEggProto;

    // Methods:
    void .ctor(...);
    void Click(...);
    void PlayHatchAnim(...);
    void Initialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ void Initialize(...);
}

// Namespace: Holoholo.Rpc
class GetHatchedEggsOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    int ExpAwardedFieldNumber = 3;
    int CandyAwardedFieldNumber = 4;
    int StardustAwardedFieldNumber = 5;
    Generic _parser;
    boolean success_;
    Generic _repeated_pokemonId_codec;
    Generic pokemonId_;
    Generic _repeated_expAwarded_codec;
    Generic expAwarded_;
    Generic _repeated_candyAwarded_codec;
    Generic candyAwarded_;
    Generic _repeated_stardustAwarded_codec;
    Generic stardustAwarded_;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetHatchedEggsOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    Generic get_PokemonId(...);
    Generic get_ExpAwarded(...);
    Generic get_CandyAwarded(...);
    Generic get_StardustAwarded(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetHatchedEggsOutProto <_parser>m__135(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetHatchedEggsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.UI.DebugMenu
class DebugGuiController {
    // Fields:
    GpsMenuGuiController gpsBookmarksGuiPrefab;
    ILocationProvider locationProvider;
    IMapController mapController;
    IUserPromptsService userPromptsService;
    Factory pickTeamUiControllerFactory;
    RootState rootState;
    IRpcHandler rpcHandler;

    // Methods:
    void .ctor(...);
    void ClickGpsBookmarks(...);
    void ClickGps(...);
    void ClickTeamSelect(...);
    void GotoPlayerPosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Map.Debug
class GpsMenuGuiController {
    // Fields:
    GameObject bookmarkButton;
    Generic OnGpsSelected;

    // Methods:
    void .ctor(...);
    void add_OnGpsSelected(...);
    void remove_OnGpsSelected(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class BatterySaverService {
    // Fields:
    ICameraRig cameraRig;
    IInputEventService inputService;
    float gyroCheckInterval;
    float turnScreenOffThreshold;
    float turnScreenOnThreshold;
    CanvasGroup blackOut;
    Canvas blackOutCanvas;
    Text debugOutput;
    float fadeTime;
    float initialDisableTime;
    float createdTime;
    float reducePhysicsChecksFactor;
    Coroutine screenFadingRoutine;
    Generic normalCullingMask;
    int initialPhysicsIterations;
    float initialFixedUpdateTime;
    Generic disabledCanvases;
    boolean screenOn;
    boolean saverEnabled;
    float lastGyroCheckTime;
    Generic <>f__am$cache14;

    // Methods:
    void .ctor(...);
    boolean get_Enabled(...);
    void set_Enabled(...);
    void DisableBatterySavingEffects(...);
    void ResetSaver(...);
    void Start(...);
    void Update(...);
    IEnumerator ScreenOff(...);
    IEnumerator ScreenOn(...);
    boolean <ResetSaver>m__223(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_Enabled(...);
    /*[05]*/ void set_Enabled(...);
}

// Namespace: Niantic.Holoholo.UI
class ColorUtil {
    // Fields:
    TeamColors defaultTeamColors;

    // Methods:
    void .ctor(...);
    TeamColors get_DefaultTeamColors(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ TeamColors get_DefaultTeamColors(...);
}

// Namespace: NianticLabs.Platform
class NianticPlugin {
    // Fields:
    LogLevel logLevel;
    int perFrameProcessingTimeMs;
    boolean isPaused;
    boolean firstResume;
    NativeEventDispatcher nativeDispatcher;

    // Methods:
    void .ctor(...);
    NianticPlugin InitializePlugin(...);
    void Awake(...);
    void Update(...);
    void OnApplicationFocus(...);
    void OnApplicationPause(...);
    void OnApplicationQuit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Platform
class LogLevel {
    // Fields:
    int value__;
    LogLevel OFF = 0;
    LogLevel FATAL = 1;
    LogLevel ERROR = 2;
    LogLevel WARNING = 3;
    LogLevel INFO = 4;
    LogLevel VERBOSE = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: NianticLabs.Platform
class NativeEventDispatcher {
    // Fields:
    Generic handlers;
    Generic protoParsers;
    Thread workerThread;
    Generic <>f__mg$cache0;
    Generic <>f__mg$cache1;
    Generic <>f__mg$cache2;
    Generic <>f__mg$cache3;
    Generic <>f__mg$cache4;
    Generic <>f__mg$cache5;
    Generic <>f__mg$cache6;
    Generic <>f__mg$cache7;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Stop(...);
    void AddListener(...);
    void RemoveListener(...);
    void RegisterParsers(...);
    void RegisterEventHandlers(...);
    void UnregisterEventHandlers(...);
    void DispatchEvents(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ HoloBoot Create(...);
    /*[05]*/ HoloBoot Create(...);
}

// Namespace: 
class BootStep {
    // Fields:
    Generic <coroutine>k__BackingField;
    String <errorMessageKey>k__BackingField;

    // Methods:
    void .ctor(...);
    Generic get_coroutine(...);
    void set_coroutine(...);
    String get_errorMessageKey(...);
    void set_errorMessageKey(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BootStepResult {
    // Fields:
    int value__;
    BootStepResult IN_PROGRESS = 0;
    BootStepResult FAILED = 1;
    BootStepResult SUCCEEDED = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class IGameState {
    // Methods:
    String get_Name(...);
    void EnterState(...);
    void ExitState(...);
    boolean get_IsActiveState(...);
    boolean get_IsLeafState(...);
    GameState get_ChildState(...);
    GameState get_ParentState(...);
}

// Namespace: Niantic.Holoholo.Internationalization
class I18n {
    // Fields:
    Generic languageTable;
    SystemLanguage language;
    ILocaleService localeService;

    // Methods:
    void .ctor(...);
    void Init(...);
    void SetUpLanguageTable(...);
    String Text(...);
    String TextFormat(...);
    boolean HasText(...);
    String BadgeName(...);
    String ItemName(...);
    String ItemDesc(...);
    String PokemonName(...);
    String PokemonDesc(...);
    String PokemonType(...);
    String PokemonCategory(...);
    String PokemonMoveName(...);
    String PokemonMoveDesc(...);
    void ReadLanguageTable(...);
    String ReadResourceFile(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void SetUpLanguageTable(...);
    /*[05]*/ String Text(...);
    /*[06]*/ String TextFormat(...);
    /*[07]*/ boolean HasText(...);
    /*[08]*/ String BadgeName(...);
    /*[09]*/ String ItemDesc(...);
    /*[10]*/ String ItemName(...);
    /*[11]*/ String PokemonName(...);
    /*[12]*/ String PokemonDesc(...);
    /*[13]*/ String PokemonType(...);
    /*[14]*/ String PokemonCategory(...);
    /*[15]*/ String PokemonMoveName(...);
    /*[16]*/ String PokemonMoveDesc(...);
}

// Namespace: Niantic.Holoholo.Internationalization
class I18nText {
    // Fields:
    String textKey;

    // Methods:
    void .ctor(...);
    void set_TextKey(...);
    String get_TextKey(...);
    void Start(...);
    void Refresh(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void Rebuild(...);
    /*[17]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[18]*/ void LayoutComplete(...);
    /*[19]*/ void GraphicUpdateComplete(...);
    /*[20]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[21]*/ void SetAllDirty(...);
    /*[22]*/ void SetLayoutDirty(...);
    /*[23]*/ void SetVerticesDirty(...);
    /*[24]*/ void SetMaterialDirty(...);
    /*[25]*/ Material get_defaultMaterial(...);
    /*[26]*/ Material get_material(...);
    /*[27]*/ void set_material(...);
    /*[28]*/ Material get_materialForRendering(...);
    /*[29]*/ Texture get_mainTexture(...);
    /*[30]*/ void Rebuild(...);
    /*[31]*/ void LayoutComplete(...);
    /*[32]*/ void GraphicUpdateComplete(...);
    /*[33]*/ void UpdateMaterial(...);
    /*[34]*/ void UpdateGeometry(...);
    /*[35]*/ void OnFillVBO(...);
    /*[36]*/ void OnPopulateMesh(...);
    /*[37]*/ void OnPopulateMesh(...);
    /*[38]*/ void SetNativeSize(...);
    /*[39]*/ boolean Raycast(...);
    /*[40]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[41]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[42]*/ void RecalculateMasking(...);
    /*[43]*/ void RecalculateClipping(...);
    /*[44]*/ RectTransform UnityEngine.UI.IClippable.get_rectTransform(...);
    /*[45]*/ void Cull(...);
    /*[46]*/ void SetClipRect(...);
    /*[47]*/ Material GetModifiedMaterial(...);
    /*[48]*/ Material GetModifiedMaterial(...);
    /*[49]*/ void Cull(...);
    /*[50]*/ void SetClipRect(...);
    /*[51]*/ void ParentMaskStateChanged(...);
    /*[52]*/ void RecalculateClipping(...);
    /*[53]*/ void RecalculateMasking(...);
    /*[54]*/ RectTransform UnityEngine.UI.IClippable.get_rectTransform(...);
    /*[55]*/ void CalculateLayoutInputHorizontal(...);
    /*[56]*/ void CalculateLayoutInputVertical(...);
    /*[57]*/ float get_minWidth(...);
    /*[58]*/ float get_preferredWidth(...);
    /*[59]*/ float get_flexibleWidth(...);
    /*[60]*/ float get_minHeight(...);
    /*[61]*/ float get_preferredHeight(...);
    /*[62]*/ float get_flexibleHeight(...);
    /*[63]*/ int get_layoutPriority(...);
    /*[64]*/ String get_text(...);
    /*[65]*/ void set_text(...);
    /*[66]*/ void CalculateLayoutInputHorizontal(...);
    /*[67]*/ void CalculateLayoutInputVertical(...);
    /*[68]*/ float get_minWidth(...);
    /*[69]*/ float get_preferredWidth(...);
    /*[70]*/ float get_flexibleWidth(...);
    /*[71]*/ float get_minHeight(...);
    /*[72]*/ float get_preferredHeight(...);
    /*[73]*/ float get_flexibleHeight(...);
    /*[74]*/ int get_layoutPriority(...);
}

// Namespace: Niantic.Holoholo
class TextEncryption {
    // Fields:
    cmod_reqd key;
    cmod_reqd vector;

    // Methods:
    void .cctor(...);
    String EncryptText(...);
    String DecryptText(...);
    cmod_reqd TransformText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AuthProviderButton {
    // Fields:
    RectTransform ButtonRoot;
    AuthTokenProvider ButtonProvider;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CustomizationCameraAnchor {
    // Fields:
    Transform anchor;
    CustomizationSlot slot;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class TextView {
    // Fields:
    int MaxCharacters = 16250;
    Text textFieldPrefab;
    cmod_reqd sources;
    Generic textFields;
    StringBuilder stringBuilder;
    ILocaleService localeService;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void Start(...);
    void SetText(...);
    void ConstructTextObject(...);
    void ClearStringBuilder(...);
    boolean <Start>m__2C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TextSource {
    // Fields:
    SystemLanguage language;
    TextAsset asset;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Onboarding
class HintUI {
    // Fields:
    CanvasGroup arrowIconGroup;
    float arrowFadeInTime;
    CanvasGroup touchIconGroup;
    float touchFadeInTime;

    // Methods:
    void .ctor(...);
    void Start(...);
    IEnumerator FadeInCanvasGroup(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BadgeSpriteSet {
    // Fields:
    HoloBadgeType badgeType;
    cmod_reqd sprites;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map.Debug
class DebugMapGestureHandler {
    // Fields:
    IMapController mapController;
    ILocationProvider locationProvider;
    Factory debugGuiFactory;
    IMapExploreState mapExploreState;
    IDebugGuiController debugGuiController;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnTapped(...);
    void LongPressed(...);
    void SpawnDebugGui(...);
    void DebugMoveToLocation(...);
    void DebugShiftMove(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IDebugGuiController Create(...);
    /*[05]*/ IDebugGuiController Create(...);
}

// Namespace: Niantic.Holoholo.UI.DebugMenu
class IDebugGuiController {
}

// Namespace: 
class Sound {
    // Fields:
    int value__;
    Sound Grab = 0;
    Sound Shake1 = 1;
    Sound Shake2 = 2;
    Sound Land1 = 3;
    Sound Land2 = 4;
    Sound Throw = 5;
    Sound Hit = 6;
    Sound Click = 7;
    Sound Burst = 8;
    Sound Open = 9;
    Sound HitPokemon = 10;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Vfx {
    // Fields:
    int value__;
    Vfx CatchAttemp = 0;
    Vfx CatchSuccess = 1;
    Vfx Despawn = 2;
    Vfx Drop = 3;
    Vfx Enter = 4;
    Vfx BreakOut = 5;
    Vfx Spawn = 6;
    Vfx SpinThrow = 7;
    Vfx Button = 8;
    Vfx Spin = 9;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Encounter
class PokeballGestureHandler {
    // Fields:
    float gestureFlickTime;
    Pokeball pokeball;
    Vector3 throwVelocityModifier;
    float maxThrowSpeed;
    float launchSpeedThreshold;
    float spinSpeedModifier;
    float launchAngle;
    float validSwipeAngleRange;
    Generic touchSequence;
    Generic tmpRaycastResults;
    boolean touchBegan;
    int touchId;
    Vector2 touchPosition;

    // Methods:
    void .ctor(...);
    float get_GestureFlickTime(...);
    void set_GestureFlickTime(...);
    Pokeball get_Pokeball(...);
    void set_Pokeball(...);
    Vector3 get_ThrowVelocityModifier(...);
    void set_ThrowVelocityModifier(...);
    float get_MaxThrowSpeed(...);
    void set_MaxThrowSpeed(...);
    float get_LaunchSpeedThreshold(...);
    void set_LaunchSpeedThreshold(...);
    float get_SpinSpeedModifier(...);
    void set_SpinSpeedModifier(...);
    float get_LaunchAngle(...);
    void set_LaunchAngle(...);
    void OnEnable(...);
    void OnDisable(...);
    void LateUpdate(...);
    void HandleTouchBegan(...);
    void HandleTouchMoved(...);
    Vector2 GetFlickVelocity(...);
    void HandleTouchEnded(...);
    Vector2 NormalizePosition(...);
    boolean IsFlickAngleValid(...);
    Touch GetTouchBefore(...);
    boolean CheckUIHit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Touch {
    // Fields:
    Vector2 position;
    float time;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter.MockSetup
class MockPokeball {
    // Fields:
    EncounterUIController uiController;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void HandleTouchBegan(...);
    void HandleTouchEnded(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Encounter
class EncounterResult {
    // Fields:
    int value__;
    EncounterResult CapturedPokemon = 0;
    EncounterResult UserFled = 1;
    EncounterResult PokemonFled = 2;
    EncounterResult Error = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class PositionPointerWidget {
    // Fields:
    Transform target;
    float width;
    float redrawThreshold;
    Vector3 lastScreenPosition;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);
    void OnPopulateMesh(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void Rebuild(...);
    /*[17]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[18]*/ void LayoutComplete(...);
    /*[19]*/ void GraphicUpdateComplete(...);
    /*[20]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[21]*/ void SetAllDirty(...);
    /*[22]*/ void SetLayoutDirty(...);
    /*[23]*/ void SetVerticesDirty(...);
    /*[24]*/ void SetMaterialDirty(...);
    /*[25]*/ Material get_defaultMaterial(...);
    /*[26]*/ Material get_material(...);
    /*[27]*/ void set_material(...);
    /*[28]*/ Material get_materialForRendering(...);
    /*[29]*/ Texture get_mainTexture(...);
    /*[30]*/ void Rebuild(...);
    /*[31]*/ void LayoutComplete(...);
    /*[32]*/ void GraphicUpdateComplete(...);
    /*[33]*/ void UpdateMaterial(...);
    /*[34]*/ void UpdateGeometry(...);
    /*[35]*/ void OnFillVBO(...);
    /*[36]*/ void OnPopulateMesh(...);
    /*[37]*/ void OnPopulateMesh(...);
    /*[38]*/ void SetNativeSize(...);
    /*[39]*/ boolean Raycast(...);
    /*[40]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[41]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
}

// Namespace: 
class MapMenuDrop {
    // Fields:
    Button targetButton;
    ActionButton actionButton;
    Animator actionMenu;
    Animator buttonSelected;

    // Methods:
    void .ctor(...);
    GameObject get_item(...);
    void OnDrop(...);
    void OnPointerEnter(...);
    void OnPointerExit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnDrop(...);
    /*[05]*/ void OnPointerExit(...);
    /*[06]*/ void OnPointerEnter(...);
}

// Namespace: 
class MenuButton {
    // Fields:
    int value__;
    MenuButton Items = 0;
    MenuButton Store = 1;
    MenuButton Pokemon = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Map.UI
class PokemonAndDistance {
    // Fields:
    int pokedexTypeId;
    float distance;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.AR
class ArService {
    // Fields:
    WebCamUtil webCamUtil;
    Generic OnToggleAr;
    boolean <BattleArMode>k__BackingField;
    boolean <EncounterArMode>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnToggleAr(...);
    void remove_OnToggleAr(...);
    boolean get_BattleArMode(...);
    void set_BattleArMode(...);
    boolean get_EncounterArMode(...);
    void set_EncounterArMode(...);
    boolean get_IsAvailable(...);
    void Start(...);
    void ToggleAR(...);
    IEnumerator RunInitialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnToggleAr(...);
    /*[05]*/ void remove_OnToggleAr(...);
    /*[06]*/ boolean get_BattleArMode(...);
    /*[07]*/ boolean get_EncounterArMode(...);
    /*[08]*/ boolean get_IsAvailable(...);
    /*[09]*/ void ToggleAR(...);
}

// Namespace: Niantic.Holoholo.WebCam
class WebCamUtil {
    // Fields:
    Generic <FrontCamera>k__BackingField;
    Generic <BackCamera>k__BackingField;
    WebCamUtilStatus <Status>k__BackingField;

    // Methods:
    void .ctor(...);
    cmod_reqd get_Devices(...);
    Generic get_FrontCamera(...);
    void set_FrontCamera(...);
    Generic get_BackCamera(...);
    void set_BackCamera(...);
    WebCamUtilStatus get_Status(...);
    void set_Status(...);
    IEnumerator Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class WebCamUtilStatus {
    // Fields:
    int value__;
    WebCamUtilStatus Initializing = 0;
    WebCamUtilStatus NotAvailable = 1;
    WebCamUtilStatus PermissionMissing = 2;
    WebCamUtilStatus Error = 3;
    WebCamUtilStatus Ready = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Gym
class ApproachMode {
    // Fields:
    int value__;
    ApproachMode BATTLE_PREP = 0;
    ApproachMode DEPLOY = 1;
    ApproachMode FRIENDLY_CHOICE = 2;
    ApproachMode PICK_TEAM = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymInRangeButton {
    // Fields:
    GymApproachState approachState;
    Button button;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DotState {
    // Fields:
    int value__;
    DotState EMPTY = 0;
    DotState FULL = 1;
    DotState LEADER = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Gym
class BattleBackground {
    // Fields:
    GameObject normalBackground;
    GameObject arBackground;

    // Methods:
    void .ctor(...);
    boolean get_IsArMode(...);
    void SwapMode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleCameraShakeType {
    // Fields:
    int value__;
    BattleCameraShakeType DAMAGE = 0;
    BattleCameraShakeType DODGE = 1;
    BattleCameraShakeType SPECIAL = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Battle
class QueuedActionResult {
    // Fields:
    int value__;
    QueuedActionResult Success = 0;
    QueuedActionResult Failure = 1;
    QueuedActionResult Replaced = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class AttackActionSubmission {
    // Fields:
    cmod_reqd SubmittedActions;
    Generic ResponseCallback;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleProtoExtensions {
    // Methods:
    boolean IsLocalPlayer(...);
    boolean HasSameId(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class AttackRing {
    // Fields:
    String TINT_COLOR_KEY = "_TintColor";
    Color defaultColor;
    Color onAttackColor;
    Color onDodgeColor;
    float colorFlashTime;
    AnimationCurve colorFlashCurve;
    float scaleUpTime;
    float scaleUpBump;
    float scaleDownTime;
    float innerCircleScaleDownTime;
    float minScale;
    float maxScale;
    float rippleDuration;
    float rippleExtraScale;
    AnimationCurve rippleAlphaCurve;
    MeshRenderer outerRing;
    MeshRenderer innerCircle;
    MeshRenderer ripple;
    BattlePokemon pokemon;
    BattleGestureHandler battleGestureHandler;
    Coroutine scaleRoutine;
    Coroutine colorFlashRoutine;
    Coroutine innerCircleScaleDownRoutine;
    Coroutine rippleRoutine;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void Tapped(...);
    void Released(...);
    IEnumerator OuterCircleScaler(...);
    IEnumerator InnerCircleScaler(...);
    void OnSuccessfulAttack(...);
    void OnSuccessfulDodge(...);
    IEnumerator FlashColor(...);
    IEnumerator Ripple(...);
    void OnHold(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class EnemyAlertIndicator {
    // Fields:
    Coroutine playAlertCoroutine;
    GameObject alertFxPrefab;
    float secondsEarly;
    IUiCamera uiCamera;
    GameMasterData gameMasterData;

    // Methods:
    void .ctor(...);
    EnemyBattlePokemon get_EnemyPokemon(...);
    void OnEnable(...);
    void OnDisable(...);
    void Play(...);
    IEnumerator PlayAlertCoroutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class Letterbox {
    // Fields:
    String LETTERBOX_ON = "Letterbox";
    float timeBeforeAttackToLetterbox;
    boolean letterboxPlayerSpecials;
    boolean letterboxEnemySpecials;
    Coroutine playLetterboxCoroutine;
    Animator animator;

    // Methods:
    void .ctor(...);
    EnemyBattlePokemon get_EnemyPokemon(...);
    PlayerBattlePokemon get_PlayerPokemon(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnSpecialAttackStarted(...);
    IEnumerator WaitAndPlayLetterbox(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class PlayerAlertReticle {
    // Fields:
    String ReticleOnState = "ReticleOn";
    String DodgeTrigger = "Dodge";
    Animator animator;
    float totalAnimationTime;
    float animationTimeToHit;
    Coroutine playRoutine;

    // Methods:
    void .ctor(...);
    EnemyBattlePokemon get_EnemyPokemon(...);
    PlayerBattlePokemon get_PlayerPokemon(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnAttackQueued(...);
    void OnAttackDodged(...);
    IEnumerator WaitAndPlay(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class BattleTimer {
    // Fields:
    Text label;
    IBattleFrameObservableService battleFrameObservableService;
    GameMasterData gameMasterData;
    float timeLeft;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void Start(...);
    void Update(...);
    void Reset(...);
    void UpdateTimeDisplay(...);
    void ShowText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class FollowEnemy {
    // Fields:
    IBehaviourService behaviourService;

    // Methods:
    void .ctor(...);
    BattlePokemon get_pokemon(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BattlePokemon get_pokemon(...);
}

// Namespace: Niantic.Holoholo.Battle
class FollowPlayer {
    // Fields:
    IBehaviourService behaviourService;

    // Methods:
    void .ctor(...);
    BattlePokemon get_pokemon(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ BattlePokemon get_pokemon(...);
}

// Namespace: Niantic.Holoholo.Battle
class FollowPokemon {
    // Fields:
    GymState gymState;
    Canvas rootCanvas;

    // Methods:
    void .ctor(...);
    BattlePokemon get_pokemon(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class NextPokemonDisplay {
    // Fields:
    Image pokemonImage;

    // Methods:
    void .ctor(...);
    void Init(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class NoPokemonLeftDisplay {
    // Fields:
    PlayerBattlePokemon playerPokemon;
    IBattleFrameObservableService battleFrameObservableService;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void OnFaint(...);
    void <OnFaint>m__77(...);
    boolean <OnFaint>m__78(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class PlayerCountUI {
    // Fields:
    IBattleFrameObservableService battleFrameObservableService;
    Text playerCountText;
    IReceipt frameObservationReceipt;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void ProcessBattleFrame(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class SpecialBar {
    // Fields:
    BattleGestureHandler battleGestureHandler;
    Image chargeBar;
    CanvasGroup alphaGroup;
    Color flashColor;
    float flashTime;
    AnimationCurve flashCurve;
    float fadeTime;
    AnimationCurve fadeCurve;
    Coroutine flashFadeCoroutine;
    IReceipt gestureObserveReceipt;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void UpdateFill(...);
    IEnumerator FlashAndFade(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Battle
class SurrenderButton {
    // Fields:
    IBattleFrameObservableService battleFrameObservableService;
    IUserPromptsService userPrompts;
    IReceipt frameObservationReceipt;

    // Methods:
    void .ctor(...);
    void Init(...);
    void OnDestroy(...);
    void TrySurrender(...);
    void ObserveFrame(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym
class GymLevelUtils {
    // Methods:
    int LevelForGymPoints(...);
    float LevelProgressForGymPoints(...);
    int TotalSlotsForLevel(...);
    int GymPointsForLevel(...);
    int MaxLevel(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class MapConfigs {
    // Fields:
    MapMode mapMode;
    MapConfig ImmersiveModeConfig;
    MapConfig CityViewModeConfig;
    MapGestureHandler gestureHandler;

    // Methods:
    void .ctor(...);
    void Start(...);
    void ToggleMapMode(...);
    void SetMapMode(...);
    MapMode GetMapMode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MapMode {
    // Fields:
    int value__;
    MapMode ImmersiveMode = 0;
    MapMode CityViewMode = 1;
    MapMode MapModeSize = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Cell {
    // Fields:
    ClientMapCellProto Data;

    // Methods:
    void .ctor(...);
    long GetTimestamp(...);
    Generic get_FortList(...);
    Generic get_SpawnPointList(...);
    Generic get_WildPokemonList(...);
    Generic get_DecimatedSpawnPoints(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ long GetTimestamp(...);
}

// Namespace: Holoholo.Rpc
class ClientMapCellProto {
    // Fields:
    int S2CellIdFieldNumber = 1;
    int AsOfTimeMsFieldNumber = 2;
    int FortFieldNumber = 3;
    int SpawnPointFieldNumber = 4;
    int WildPokemonFieldNumber = 5;
    int DeletedObjectFieldNumber = 6;
    int IsTruncatedListFieldNumber = 7;
    int FortSummaryFieldNumber = 8;
    int DecimatedSpawnPointFieldNumber = 9;
    int CatchablePokemonFieldNumber = 10;
    int NearbyPokemonFieldNumber = 11;
    Generic _parser;
    ulong s2CellId_;
    long asOfTimeMs_;
    Generic _repeated_fort_codec;
    Generic fort_;
    Generic _repeated_spawnPoint_codec;
    Generic spawnPoint_;
    Generic _repeated_wildPokemon_codec;
    Generic wildPokemon_;
    Generic _repeated_deletedObject_codec;
    Generic deletedObject_;
    boolean isTruncatedList_;
    Generic _repeated_fortSummary_codec;
    Generic fortSummary_;
    Generic _repeated_decimatedSpawnPoint_codec;
    Generic decimatedSpawnPoint_;
    Generic _repeated_catchablePokemon_codec;
    Generic catchablePokemon_;
    Generic _repeated_nearbyPokemon_codec;
    Generic nearbyPokemon_;
    Generic <>f__am$cache14;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ClientMapCellProto Clone(...);
    ulong get_S2CellId(...);
    void set_S2CellId(...);
    long get_AsOfTimeMs(...);
    void set_AsOfTimeMs(...);
    Generic get_Fort(...);
    Generic get_SpawnPoint(...);
    Generic get_WildPokemon(...);
    Generic get_DeletedObject(...);
    boolean get_IsTruncatedList(...);
    void set_IsTruncatedList(...);
    Generic get_FortSummary(...);
    Generic get_DecimatedSpawnPoint(...);
    Generic get_CatchablePokemon(...);
    Generic get_NearbyPokemon(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ClientMapCellProto <_parser>m__18A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ClientMapCellProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo
class CameraFollowingGround {
    // Fields:
    Transform cameraToFollow;
    float groundZOffset;

    // Methods:
    void .ctor(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.GameInput
class IInputManager {
    // Methods:
    void add_OnPrimary(...);
    void remove_OnPrimary(...);
    void add_OnPrimaryDown(...);
    void remove_OnPrimaryDown(...);
    void add_OnSecondary(...);
    void remove_OnSecondary(...);
    void add_OnSecondaryDown(...);
    void remove_OnSecondaryDown(...);
    boolean get_Primary(...);
    boolean get_PrimaryDown(...);
    Vector2 get_PrimaryPosition(...);
    Vector2 get_PrimaryDeltaPosition(...);
    boolean get_Secondary(...);
    boolean get_SecondaryDown(...);
    Vector2 get_SecondaryPosition(...);
    Vector2 get_SecondaryDeltaPosition(...);
    float get_ZoomDelta(...);
}

// Namespace: Niantic.Holoholo.Map
class PokemonEncounterResponse {
    // Fields:
    int value__;
    PokemonEncounterResponse Success = 0;
    PokemonEncounterResponse Failure = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class AbstractTileBuilder {
    // Fields:
    MapLayer layer;
    cmod_reqd kinds;
    IMapTileStore store;

    // Methods:
    void .ctor(...);
    void SetMapTileStore(...);
    void SetTileManager(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnPoint(...);
    void OnLinear(...);
    void OnMesh(...);
    void OnGmmBuilding(...);
    void OnArea(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnPoint(...);
    /*[13]*/ void OnLinear(...);
    /*[14]*/ void OnMesh(...);
    /*[15]*/ void OnGmmBuilding(...);
    /*[16]*/ void OnArea(...);
}

// Namespace: NianticLabs.Platform
class MapLayer {
    // Fields:
    int value__;
    MapLayer UNDEFINED = 0;
    MapLayer BOUNDARIES = 1;
    MapLayer BUILDINGS = 2;
    MapLayer LANDMASS = 3;
    MapLayer LANDUSE = 4;
    MapLayer PLACES = 5;
    MapLayer POIS = 6;
    MapLayer ROADS = 7;
    MapLayer TRANSIT = 8;
    MapLayer WATER = 9;
    MapLayer DEBUG_TILE_BOUNDARIES = 10;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class IMapTileStore {
    // Methods:
    MapTile GetTile(...);
}

// Namespace: Niantic.Holoholo
class Building {
    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class BuildingBuilder {
    // Fields:
    int BIT_0 = 1;
    int BIT_1 = 2;
    int BIT_2 = 4;
    float extrudeHeight;
    Material buildingMaterial;
    Material depthOnlyMaterial;
    GameObject tileObj;
    Generic buildingMeshesThisTile;

    // Methods:
    void .ctor(...);
    Material get_DepthOnlyMaterial(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    Mesh GenerateWallMesh(...);
    void OnGmmBuilding(...);
    void OnArea(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: Niantic.Holoholo
class GeometryExtractor {
    // Methods:
    void .ctor(...);
    void CreateMiteredWidePolyline(...);
    void CreateMiteredWidePolyline(...);
    void CreateMiteredWidePolylineInternal(...);
    void ProcessJoint(...);
    void CreateMiter(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ArrayDecorator`1 {
    // Fields:
    cmod_reqd decorated;
    int offset;
    int length;

    // Methods:
    void .ctor(...);
    int get_Length(...);
    var get_Item(...);
    void set_Item(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class ParkBuilder {
    // Fields:
    Material groundMaterial;
    GameObject tileObj;

    // Methods:
    void .ctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnArea(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: Niantic.Holoholo
class RoadBuilder {
    // Fields:
    cmod_reqd thicknesses;
    Material roadMaterial;
    Material roadOutlineMaterial;
    float roadOutlineSize;
    float roadZOffset;
    float roadOutlineZOffset;
    Generic vertices;
    Generic indices;
    Generic outlineVertices;
    Generic outlineIndices;
    GameObject tileObj;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnLinear(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: 
class RoadThickness {
    // Fields:
    float thickness;
    FeatureKind kind;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Platform
class FeatureKind {
    // Fields:
    int value__;
    FeatureKind UNDEFINED = 0;
    FeatureKind BASIN = 1;
    FeatureKind CANAL = 2;
    FeatureKind CEMETERY = 3;
    FeatureKind CINEMA = 4;
    FeatureKind COLLEGE = 5;
    FeatureKind COMMERCIAL = 6;
    FeatureKind COMMON = 7;
    FeatureKind DAM = 8;
    FeatureKind DITCH = 9;
    FeatureKind DOCK = 10;
    FeatureKind DRAIN = 11;
    FeatureKind FARM = 12;
    FeatureKind FARMLAND = 13;
    FeatureKind FARMYARD = 14;
    FeatureKind FOOTWAY = 15;
    FeatureKind FOREST = 16;
    FeatureKind GARDEN = 17;
    FeatureKind GLACIER = 18;
    FeatureKind GOLF_COURSE = 19;
    FeatureKind GRASS = 20;
    FeatureKind HIGHWAY = 21;
    FeatureKind HOSPITAL = 22;
    FeatureKind HOTEL = 23;
    FeatureKind INDUSTRIAL = 24;
    FeatureKind LAKE = 25;
    FeatureKind LAND = 26;
    FeatureKind LIBRARY = 27;
    FeatureKind MAJOR_ROAD = 28;
    FeatureKind MEADOW = 29;
    FeatureKind MINOR_ROAD = 30;
    FeatureKind NATURE_RESERVE = 31;
    FeatureKind OCEAN = 32;
    FeatureKind PARK = 33;
    FeatureKind PARKING = 34;
    FeatureKind PATH = 35;
    FeatureKind PEDESTRIAN = 36;
    FeatureKind PITCH = 37;
    FeatureKind PLACE_OF_WORSHIP = 38;
    FeatureKind PLAYA = 39;
    FeatureKind PLAYGROUND = 40;
    FeatureKind QUARRY = 41;
    FeatureKind RAILWAY = 42;
    FeatureKind RECREATION_AREA = 43;
    FeatureKind RESERVOIR = 44;
    FeatureKind RESIDENTIAL = 45;
    FeatureKind RETAIL = 46;
    FeatureKind RIVER = 47;
    FeatureKind RIVERBANK = 48;
    FeatureKind RUNWAY = 49;
    FeatureKind SCHOOL = 50;
    FeatureKind SPORTS_CENTER = 51;
    FeatureKind STADIUM = 52;
    FeatureKind STREAM = 53;
    FeatureKind TAXIWAY = 54;
    FeatureKind THEATRE = 55;
    FeatureKind UNIVERSITY = 56;
    FeatureKind URBAN_AREA = 57;
    FeatureKind WATER = 58;
    FeatureKind WETLAND = 59;
    FeatureKind WOOD = 60;
    FeatureKind DEBUG_TILE_OUTLINE = 61;
    FeatureKind DEBUG_TILE_SURFACE = 62;
    FeatureKind OTHER = 63;
    FeatureKind ANY = 2000;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo
class WaterBuilder {
    // Fields:
    Material waterMaterial;
    GameObject tileObj;

    // Methods:
    void .ctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnArea(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: Niantic.Holoholo
class WorldMapGui {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class HoloholoMapApi {
    // Methods:
    void .ctor(...);
    void ClearCache(...);
    void GetPosition(...);
    void GetView(...);
    void GetWorldLocation(...);
    void SetView(...);
    void SubscribeLayer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ClearCache(...);
    /*[05]*/ void GetView(...);
    /*[06]*/ void SetView(...);
    /*[07]*/ void GetPosition(...);
    /*[08]*/ void GetWorldLocation(...);
    /*[09]*/ void SubscribeLayer(...);
}

// Namespace: Niantic.Holoholo
class HoloholoMapTileEventHandler {
    // Methods:
    void .ctor(...);
    void ProcessEvents(...);
    void SetTileManager(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ProcessEvents(...);
    /*[05]*/ void SetTileManager(...);
}

// Namespace: Niantic.Holoholo.Map
class SkyDome {
    // Fields:
    float rotateSpeedDay;
    float rotateSpeedNight;
    ITimeOfDayService timeOfDayService;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class PokestopInteractionCamera {
    // Methods:
    void .ctor(...);
    void OnStart(...);
    void OnStop(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Holoholo.Pokestop
class IFortProtoObservableService {
}

// Namespace: Niantic.Holoholo.Items
class TroyDiskEffect {
    // Fields:
    float expireTime;
    ParticleSystem airParticles;
    float interactionModeParticleArcDegrees;
    ICameraRig cameraRig;
    Animator animator;
    IMapPokestop hostPokestop;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Awake(...);
    void Expire(...);
    void SetInteractionMode(...);
    void <Expire>m__A3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Factory {
    // Methods:
    void .ctor(...);
    TroyDiskEffect Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ TroyDiskEffect Create(...);
    /*[05]*/ TroyDiskEffect Create(...);
}

// Namespace: Niantic.Holoholo.Items
class IItem {
    // Methods:
    Item get_ItemId(...);
    HoloItemType get_ItemType(...);
    Sprite get_GuiSprite(...);
    Sprite get_AltSprite(...);
    ItemSettingsProto get_ItemSettings(...);
}

// Namespace: Niantic.Holoholo.Items
class ItemBase {
    // Fields:
    GameMasterData masterData;
    Sprite sprite;

    // Methods:
    void .ctor(...);
    Sprite get_GuiSprite(...);
    Sprite get_AltSprite(...);
    Item get_ItemId(...);
    ItemSettingsProto get_ItemSettings(...);
    HoloItemType get_ItemType(...);
    void Dispose(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ Item get_ItemId(...);
    /*[06]*/ HoloItemType get_ItemType(...);
    /*[07]*/ Sprite get_GuiSprite(...);
    /*[08]*/ Sprite get_AltSprite(...);
    /*[09]*/ ItemSettingsProto get_ItemSettings(...);
    /*[10]*/ Sprite get_AltSprite(...);
    /*[11]*/ void Dispose(...);
}

// Namespace: Niantic.Holoholo.Items
class ItemFactory {
    // Fields:
    DiContainer container;
    Generic itemPrefabs;

    // Methods:
    void .ctor(...);
    cmod_opt Create(...);
    IItem Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_opt Create(...);
    /*[05]*/ IItem Create(...);
}

// Namespace: Zenject
class DiContainer {
    // Fields:
    Generic _providers;
    Generic _installedInstallers;
    Generic _installsInProgress;
    DiContainer _parentContainer;
    Generic _resolvesInProgress;
    SingletonProviderCreator _singletonProviderFactory;
    SingletonRegistry _singletonRegistry;
    boolean _isValidating;
    boolean _hasLookedUpParent;
    Transform _defaultParent;
    Generic <>f__am$cacheA;
    Generic <>f__am$cacheB;
    Generic <>f__am$cacheC;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;
    Generic <>f__am$cache10;
    Generic <>f__am$cache11;
    Generic <>f__am$cache12;
    Generic <>f__am$cache13;
    Generic <>f__am$cache14;
    Generic <>f__am$cache15;
    Generic <>f__am$cache16;
    Generic <>f__am$cache17;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    SingletonProviderCreator get_SingletonProviderCreator(...);
    SingletonRegistry get_SingletonRegistry(...);
    Transform get_DefaultParent(...);
    DiContainer get_ParentContainer(...);
    boolean get_ChecksForCircularDependencies(...);
    Generic get_InstalledInstallers(...);
    boolean get_IsValidating(...);
    void set_IsValidating(...);
    Generic get_AllContracts(...);
    Generic get_AllConcreteTypes(...);
    DiContainer CreateSubContainer(...);
    void RegisterProvider(...);
    int UnregisterProvider(...);
    Generic ValidateResolve(...);
    Generic ValidateResolve(...);
    Generic ValidateValidatables(...);
    Generic GetAllProviderMatches(...);
    Generic GetProviderMatchesInternal(...);
    Generic GetProvidersForContract(...);
    Generic GetLocalProviders(...);
    IList ResolveAll(...);
    Generic ResolveTypeAll(...);
    void Install(...);
    void Install(...);
    void Install(...);
    void Install(...);
    boolean HasInstalled(...);
    boolean HasInstalled(...);
    void InstallInstallerInternal(...);
    ProviderLookupResult TryGetUniqueProvider(...);
    mvar Resolve(...);
    mvar SafeGetInstance(...);
    int GetContainerHeirarchyDistance(...);
    int GetContainerHeirarchyDistance(...);
    Generic GetDependencyContracts(...);
    Generic GetDependencyContracts(...);
    mvar InstantiateExplicit(...);
    mvar InstantiateInternal(...);
    void InjectExplicit(...);
    Component InstantiateComponent(...);
    GameObject InstantiatePrefabResourceExplicit(...);
    GameObject InstantiatePrefabResourceExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    GameObject InstantiatePrefabExplicit(...);
    GameObject InstantiateGameObject(...);
    mvar InstantiateComponentOnNewGameObjectExplicit(...);
    mvar InstantiatePrefabResourceForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    Transform GetTransformGroup(...);
    cmod_opt Instantiate(...);
    mvar Instantiate(...);
    cmod_opt InstantiateExplicit(...);
    cmod_opt InstantiateExplicit(...);
    mvar InstantiateExplicit(...);
    mvar InstantiateExplicit(...);
    cmod_opt InstantiateComponent(...);
    GameObject InstantiatePrefab(...);
    GameObject InstantiatePrefab(...);
    GameObject InstantiatePrefabResource(...);
    GameObject InstantiatePrefabResource(...);
    cmod_opt InstantiatePrefabForComponent(...);
    mvar InstantiatePrefabForComponent(...);
    cmod_opt InstantiatePrefabForComponent(...);
    mvar InstantiatePrefabForComponent(...);
    cmod_opt InstantiatePrefabForComponentExplicit(...);
    mvar InstantiatePrefabForComponentExplicit(...);
    cmod_opt InstantiatePrefabResourceForComponent(...);
    mvar InstantiatePrefabResourceForComponent(...);
    cmod_opt InstantiatePrefabResourceForComponentExplicit(...);
    mvar InstantiatePrefabResourceForComponentExplicit(...);
    cmod_opt InstantiateComponentOnNewGameObject(...);
    mvar InstantiateComponentOnNewGameObject(...);
    cmod_opt InstantiateComponentOnNewGameObjectExplicit(...);
    mvar InstantiateComponentOnNewGameObjectExplicit(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void InjectExplicit(...);
    void InjectExplicit(...);
    Generic ResolveTypeAll(...);
    cmod_opt Resolve(...);
    cmod_opt Resolve(...);
    cmod_opt TryResolve(...);
    cmod_opt TryResolve(...);
    mvar TryResolve(...);
    mvar TryResolve(...);
    mvar Resolve(...);
    mvar Resolve(...);
    cmod_opt Resolve(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    void UnbindAll(...);
    boolean Unbind(...);
    boolean Unbind(...);
    BindingConditionSetter BindInstance(...);
    BindingConditionSetter BindInstance(...);
    Generic Bind(...);
    UntypedBinder Bind(...);
    boolean HasBinding(...);
    boolean HasBinding(...);
    boolean HasBinding(...);
    void BindAllInterfacesToSingle(...);
    void BindAllInterfacesToSingle(...);
    void BindAllInterfacesToInstance(...);
    void BindAllInterfacesToInstance(...);
    Generic BindIFactoryUntyped(...);
    Generic BindIFactoryUntyped(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic Rebind(...);
    Generic Bind(...);
    Generic BindFacade(...);
    Generic BindFacade(...);
    UntypedBinder Bind(...);
    BindingConditionSetter BindGameObjectFactory(...);
    BindingConditionSetter BindGameObjectFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    Generic ValidateResolve(...);
    Generic ValidateObjectGraph(...);
    Generic ValidateObjectGraph(...);
    Generic ValidateObjectGraph(...);
    Generic ValidateObjectGraph(...);
    Generic ValidateObjectGraph(...);
    boolean TryTakingFromExtras(...);
    Generic <get_AllConcreteTypes>m__308(...);
    Type <get_AllConcreteTypes>m__309(...);
    boolean <get_AllConcreteTypes>m__30A(...);
    boolean <UnregisterProvider>m__30D(...);
    BindingId <UnregisterProvider>m__30E(...);
    ProviderBase <GetAllProviderMatches>m__30F(...);
    ProviderPair <GetProvidersForContract>m__311(...);
    ProviderPair <GetProvidersForContract>m__312(...);
    Type <ResolveTypeAll>m__314(...);
    boolean <ResolveTypeAll>m__315(...);
    int <TryGetUniqueProvider>m__318(...);
    ProviderBase <TryGetUniqueProvider>m__31A(...);
    boolean <TryGetUniqueProvider>m__31B(...);
    String <InstantiateInternal>m__31D(...);
    String <InjectExplicit>m__31E(...);
    Generic <UnbindAll>m__31F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean HasBinding(...);
    /*[05]*/ UntypedBinder Bind(...);
    /*[06]*/ Generic Bind(...);
    /*[07]*/ Generic Rebind(...);
    /*[08]*/ Generic BindIFactory(...);
    /*[09]*/ Generic BindIFactory(...);
    /*[10]*/ Generic BindIFactory(...);
    /*[11]*/ Generic BindIFactory(...);
    /*[12]*/ Generic BindIFactory(...);
    /*[13]*/ Generic BindIFactory(...);
    /*[14]*/ Generic BindIFactory(...);
    /*[15]*/ Generic BindIFactory(...);
    /*[16]*/ Generic BindIFactory(...);
    /*[17]*/ Generic BindIFactory(...);
    /*[18]*/ Generic BindIFactoryUntyped(...);
    /*[19]*/ Generic BindIFactoryUntyped(...);
    /*[20]*/ BindingConditionSetter BindInstance(...);
    /*[21]*/ BindingConditionSetter BindInstance(...);
    /*[22]*/ Generic Bind(...);
    /*[23]*/ UntypedBinder Bind(...);
    /*[24]*/ boolean Unbind(...);
    /*[25]*/ boolean Unbind(...);
    /*[26]*/ void UnbindAll(...);
    /*[27]*/ boolean HasBinding(...);
    /*[28]*/ boolean HasBinding(...);
    /*[29]*/ void BindAllInterfacesToSingle(...);
    /*[30]*/ void BindAllInterfacesToSingle(...);
    /*[31]*/ void BindAllInterfacesToInstance(...);
    /*[32]*/ void BindAllInterfacesToInstance(...);
    /*[33]*/ BindingConditionSetter BindFacadeFactory(...);
    /*[34]*/ BindingConditionSetter BindFacadeFactory(...);
    /*[35]*/ BindingConditionSetter BindFacadeFactory(...);
    /*[36]*/ BindingConditionSetter BindFacadeFactory(...);
    /*[37]*/ BindingConditionSetter BindGameObjectFactory(...);
    /*[38]*/ BindingConditionSetter BindGameObjectFactory(...);
    /*[39]*/ void Install(...);
    /*[40]*/ void Install(...);
    /*[41]*/ void Install(...);
    /*[42]*/ void Install(...);
    /*[43]*/ boolean HasInstalled(...);
    /*[44]*/ boolean HasInstalled(...);
    /*[45]*/ cmod_opt Instantiate(...);
    /*[46]*/ mvar Instantiate(...);
    /*[47]*/ cmod_opt InstantiateExplicit(...);
    /*[48]*/ mvar InstantiateExplicit(...);
    /*[49]*/ mvar InstantiateExplicit(...);
    /*[50]*/ GameObject InstantiatePrefabExplicit(...);
    /*[51]*/ GameObject InstantiatePrefabExplicit(...);
    /*[52]*/ GameObject InstantiatePrefabExplicit(...);
    /*[53]*/ mvar InstantiateComponentOnNewGameObjectExplicit(...);
    /*[54]*/ Component InstantiateComponent(...);
    /*[55]*/ cmod_opt InstantiateComponent(...);
    /*[56]*/ GameObject InstantiateGameObject(...);
    /*[57]*/ GameObject InstantiatePrefab(...);
    /*[58]*/ GameObject InstantiatePrefab(...);
    /*[59]*/ GameObject InstantiatePrefabResource(...);
    /*[60]*/ GameObject InstantiatePrefabResource(...);
    /*[61]*/ GameObject InstantiatePrefabResourceExplicit(...);
    /*[62]*/ GameObject InstantiatePrefabResourceExplicit(...);
    /*[63]*/ cmod_opt InstantiatePrefabForComponent(...);
    /*[64]*/ cmod_opt InstantiatePrefabForComponent(...);
    /*[65]*/ mvar InstantiatePrefabForComponent(...);
    /*[66]*/ mvar InstantiatePrefabForComponent(...);
    /*[67]*/ cmod_opt InstantiatePrefabForComponentExplicit(...);
    /*[68]*/ mvar InstantiatePrefabForComponentExplicit(...);
    /*[69]*/ mvar InstantiatePrefabForComponentExplicit(...);
    /*[70]*/ mvar InstantiatePrefabForComponentExplicit(...);
    /*[71]*/ mvar InstantiatePrefabForComponentExplicit(...);
    /*[72]*/ cmod_opt InstantiatePrefabResourceForComponent(...);
    /*[73]*/ mvar InstantiatePrefabResourceForComponent(...);
    /*[74]*/ cmod_opt InstantiatePrefabResourceForComponentExplicit(...);
    /*[75]*/ mvar InstantiatePrefabResourceForComponentExplicit(...);
    /*[76]*/ cmod_opt InstantiateComponentOnNewGameObject(...);
    /*[77]*/ mvar InstantiateComponentOnNewGameObject(...);
    /*[78]*/ cmod_opt InstantiateComponentOnNewGameObjectExplicit(...);
    /*[79]*/ mvar InstantiateComponentOnNewGameObjectExplicit(...);
    /*[80]*/ void InjectExplicit(...);
    /*[81]*/ void InjectGameObject(...);
    /*[82]*/ void InjectGameObject(...);
    /*[83]*/ void InjectGameObject(...);
    /*[84]*/ void InjectGameObject(...);
    /*[85]*/ void InjectGameObject(...);
    /*[86]*/ void Inject(...);
    /*[87]*/ void Inject(...);
    /*[88]*/ void Inject(...);
    /*[89]*/ void Inject(...);
    /*[90]*/ void Inject(...);
    /*[91]*/ void InjectExplicit(...);
    /*[92]*/ void InjectExplicit(...);
    /*[93]*/ Generic ResolveTypeAll(...);
    /*[94]*/ Generic ResolveTypeAll(...);
    /*[95]*/ mvar Resolve(...);
    /*[96]*/ cmod_opt Resolve(...);
    /*[97]*/ cmod_opt Resolve(...);
    /*[98]*/ cmod_opt TryResolve(...);
    /*[99]*/ cmod_opt TryResolve(...);
    /*[100]*/ mvar TryResolve(...);
    /*[101]*/ mvar TryResolve(...);
    /*[102]*/ mvar Resolve(...);
    /*[103]*/ mvar Resolve(...);
    /*[104]*/ cmod_opt Resolve(...);
    /*[105]*/ IList ResolveAll(...);
    /*[106]*/ Generic ResolveAll(...);
    /*[107]*/ Generic ResolveAll(...);
    /*[108]*/ Generic ResolveAll(...);
    /*[109]*/ Generic ResolveAll(...);
    /*[110]*/ Generic ResolveAll(...);
    /*[111]*/ IList ResolveAll(...);
    /*[112]*/ IList ResolveAll(...);
    /*[113]*/ IList ResolveAll(...);
    /*[114]*/ IList ResolveAll(...);
    /*[115]*/ Generic ValidateResolve(...);
    /*[116]*/ Generic ValidateResolve(...);
    /*[117]*/ Generic ValidateValidatables(...);
}

// Namespace: Zenject
class SingletonProviderCreator {
    // Fields:
    MethodSingletonProviderCreator _methodSingletonProviderCreator;
    TypeSingletonProviderCreator _typeSingletonProviderCreator;
    InstanceSingletonProviderCreator _instanceSingletonProviderCreator;
    FactorySingletonProviderCreator _factorySingletonProviderCreator;
    GameObjectSingletonProviderCreator _gameObjectSingletonProviderCreator;
    PrefabSingletonProviderCreator _prefabSingletonProviderCreator;
    PrefabResourceSingletonProviderCreator _prefabResourceSingletonProviderCreator;
    MonoBehaviourSingletonProviderCreator _monoBehaviourSingletonProviderCreator;

    // Methods:
    void .ctor(...);
    ProviderBase CreateProviderFromInstance(...);
    ProviderBase CreateProviderFromInstance(...);
    ProviderBase CreateProviderFromMethod(...);
    ProviderBase CreateProviderFromFactory(...);
    ProviderBase CreateProviderFromType(...);
    ProviderBase CreateProviderFromType(...);
    ProviderBase CreateProviderFromMonoBehaviour(...);
    ProviderBase CreateProviderFromPrefabResource(...);
    ProviderBase CreateProviderFromPrefab(...);
    ProviderBase CreateProviderFromGameObject(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class MethodSingletonProviderCreator {
    // Fields:
    Generic _creators;
    SingletonRegistry _singletonRegistry;

    // Methods:
    void .ctor(...);
    void RemoveCreator(...);
    IMethodSingletonLazyCreator AddCreator(...);
    boolean AreFunctionsEqual(...);
    MethodSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class SingletonRegistry {
    // Fields:
    Generic _singletonInfos;

    // Methods:
    void .ctor(...);
    Generic TryGetSingletonType(...);
    Generic TryGetSingletonType(...);
    Generic TryGetSingletonType(...);
    Generic TryGetSingletonType(...);
    void MarkSingleton(...);
    void MarkSingleton(...);
    void UnmarkSingleton(...);
    void UnmarkSingleton(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IMethodSingletonLazyCreator {
    // Methods:
    void DecRefCount(...);
    void IncRefCount(...);
    mvar GetInstance(...);
    Delegate get_CreateMethod(...);
}

// Namespace: Zenject
class MethodSingletonProvider {
    // Fields:
    SingletonRegistry _singletonRegistry;
    SingletonId _id;
    IMethodSingletonLazyCreator _lazyCreator;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class SingletonId {
    // Fields:
    Type ConcreteType;
    String ConcreteIdentifier;

    // Methods:
    void .ctor(...);
    int GetHashCode(...);
    boolean Equals(...);
    boolean Equals(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean Equals(...);
}

// Namespace: Zenject
class TypeSingletonProviderCreator {
    // Fields:
    Generic _creators;
    DiContainer _container;
    SingletonRegistry _singletonRegistry;

    // Methods:
    void .ctor(...);
    void RemoveCreator(...);
    TypeSingletonLazyCreator AddCreator(...);
    TypeSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class TypeSingletonLazyCreator {
    // Fields:
    DiContainer _container;
    SingletonId _id;
    TypeSingletonProviderCreator _owner;
    int _referenceCount;
    mvar _instance;

    // Methods:
    void .ctor(...);
    mvar GetInstance(...);
    void IncRefCount(...);
    void DecRefCount(...);
    Generic ValidateBinding(...);
    void InitInstance(...);
    Type GetTypeToInstantiate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class TypeSingletonProvider {
    // Fields:
    SingletonRegistry _singletonRegistry;
    SingletonId _id;
    TypeSingletonLazyCreator _lazyCreator;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class InstanceSingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;

    // Methods:
    void .ctor(...);
    void RemoveCreator(...);
    InstanceSingletonLazyCreator AddCreator(...);
    InstanceSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class InstanceSingletonLazyCreator {
    // Fields:
    mvar _instance;
    SingletonId _id;
    InstanceSingletonProviderCreator _owner;
    int _referenceCount;

    // Methods:
    void .ctor(...);
    mvar get_Instance(...);
    void DecRefCount(...);
    void IncRefCount(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class InstanceSingletonProvider {
    // Fields:
    SingletonRegistry _singletonRegistry;
    InstanceSingletonLazyCreator _lazyCreator;
    SingletonId _id;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class FactorySingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;

    // Methods:
    void .ctor(...);
    void RemoveCreator(...);
    Generic AddCreator(...);
    FactorySingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class FactorySingletonProvider {
    // Fields:
    SingletonId _id;
    SingletonRegistry _singletonRegistry;
    IFactorySingletonLazyCreator _lazyCreator;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class IFactorySingletonLazyCreator {
    // Methods:
    Generic ValidateBinding(...);
    mvar GetInstance(...);
    void DecRefCount(...);
    void IncRefCount(...);
}

// Namespace: Zenject
class GameObjectSingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Generic get_Creators(...);
    void RemoveCreator(...);
    GameObjectSingletonLazyCreator AddCreator(...);
    GameObjectSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class GameObjectSingletonLazyCreator {
    // Fields:
    DiContainer _container;
    GameObjectSingletonProviderCreator _owner;
    SingletonId _id;
    int _referenceCount;
    Component _component;

    // Methods:
    void .ctor(...);
    void IncRefCount(...);
    void DecRefCount(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class GameObjectSingletonProvider {
    // Fields:
    SingletonRegistry _singletonRegistry;
    SingletonId _id;
    GameObjectSingletonLazyCreator _creator;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class PrefabSingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;
    Generic _prefabMarks;

    // Methods:
    void .ctor(...);
    void MarkPrefab(...);
    void UnmarkPrefab(...);
    void RemoveCreator(...);
    PrefabSingletonLazyCreator AddCreator(...);
    PrefabSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PrefabSingletonLazyCreator {
    // Fields:
    DiContainer _container;
    PrefabSingletonProviderCreator _owner;
    PrefabSingletonId _id;
    int _referenceCount;
    GameObject _rootObj;

    // Methods:
    void .ctor(...);
    void IncRefCount(...);
    void DecRefCount(...);
    boolean ContainsComponent(...);
    mvar GetComponent(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PrefabSingletonId {
    // Fields:
    String ConcreteIdentifier;
    GameObject Prefab;

    // Methods:
    void .ctor(...);
    int GetHashCode(...);
    boolean Equals(...);
    boolean Equals(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean Equals(...);
}

// Namespace: Zenject
class PrefabSingletonProvider {
    // Fields:
    PrefabSingletonProviderCreator _owner;
    SingletonRegistry _singletonRegistry;
    PrefabSingletonLazyCreator _lazyCreator;
    Type _componentType;
    PrefabSingletonId _prefabId;
    SingletonId _singletonId;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class PrefabResourceSingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;
    Generic _resourceMarks;

    // Methods:
    void .ctor(...);
    void MarkResource(...);
    void UnmarkResource(...);
    void RemoveCreator(...);
    PrefabResourceSingletonLazyCreator AddCreator(...);
    PrefabResourceSingletonProvider CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PrefabResourceSingletonLazyCreator {
    // Fields:
    DiContainer _container;
    PrefabResourceSingletonProviderCreator _owner;
    PrefabResourceSingletonId _id;
    int _referenceCount;
    GameObject _rootObj;

    // Methods:
    void .ctor(...);
    void IncRefCount(...);
    void DecRefCount(...);
    boolean ContainsComponent(...);
    mvar GetComponent(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PrefabResourceSingletonId {
    // Fields:
    String ConcreteIdentifier;
    String ResourcePath;

    // Methods:
    void .ctor(...);
    int GetHashCode(...);
    boolean Equals(...);
    boolean Equals(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean Equals(...);
}

// Namespace: Zenject
class PrefabResourceSingletonProvider {
    // Fields:
    PrefabResourceSingletonProviderCreator _owner;
    SingletonRegistry _singletonRegistry;
    PrefabResourceSingletonLazyCreator _lazyCreator;
    Type _componentType;
    PrefabResourceSingletonId _resourceId;
    SingletonId _singletonId;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class MonoBehaviourSingletonProviderCreator {
    // Fields:
    SingletonRegistry _singletonRegistry;
    Generic _creators;
    DiContainer _container;
    Generic _gameObjectMarks;

    // Methods:
    void .ctor(...);
    void MarkGameObject(...);
    void UnmarkGameObject(...);
    void RemoveCreator(...);
    MonoBehaviourSingletonLazyCreator AddCreator(...);
    ProviderBase CreateProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class MonoBehaviourSingletonLazyCreator {
    // Fields:
    DiContainer _container;
    MonoBehaviourSingletonProviderCreator _owner;
    MonoBehaviourSingletonId _id;
    Component _instance;
    int _referenceCount;

    // Methods:
    void .ctor(...);
    GameObject get_GameObject(...);
    Type get_ComponentType(...);
    void IncRefCount(...);
    void DecRefCount(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class MonoBehaviourSingletonId {
    // Fields:
    Type ConcreteType;
    String ConcreteIdentifier;
    GameObject GameObject;

    // Methods:
    void .ctor(...);
    int GetHashCode(...);
    boolean Equals(...);
    boolean Equals(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean Equals(...);
}

// Namespace: Zenject
class ProviderBase {
    // Fields:
    BindingCondition _condition;

    // Methods:
    void .ctor(...);
    BindingCondition get_Condition(...);
    void set_Condition(...);
    boolean Matches(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);
    void Dispose(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ void Dispose(...);
}

// Namespace: Zenject
class BindingCondition {
    // Methods:
    void .ctor(...);
    boolean Invoke(...);
    IAsyncResult BeginInvoke(...);
    boolean EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ boolean Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ boolean EndInvoke(...);
}

// Namespace: 
class ProviderLookupResult {
    // Fields:
    int value__;
    ProviderLookupResult Success = 0;
    ProviderLookupResult Multiple = 1;
    ProviderLookupResult None = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Zenject
class BindingConditionSetter {
    // Fields:
    ProviderBase _provider;

    // Methods:
    void .ctor(...);
    void When(...);
    void WhenInjectedIntoInstance(...);
    void WhenInjectedInto(...);
    void WhenInjectedInto(...);
    void WhenNotInjectedInto(...);
    boolean <WhenInjectedInto`1>m__2CD(...);
    boolean <WhenNotInjectedInto`1>m__2CE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class UntypedBinder {
    // Methods:
    void .ctor(...);
    BindingConditionSetter ToLookup(...);
    BindingConditionSetter ToLookup(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToGetter(...);
    BindingConditionSetter ToGetter(...);
    BindingConditionSetter ToTransient(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToInstance(...);
    BindingConditionSetter ToSingleInstance(...);
    BindingConditionSetter ToSingleInstance(...);
    BindingConditionSetter ToSingleMethod(...);
    BindingConditionSetter ToSingleMethod(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToResource(...);
    BindingConditionSetter ToTransientPrefabResource(...);
    BindingConditionSetter ToTransientPrefab(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSinglePrefabResource(...);
    BindingConditionSetter ToSinglePrefabResource(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class BindingId {
    // Fields:
    Type Type;
    String Identifier;

    // Methods:
    void .ctor(...);
    int GetHashCode(...);
    boolean Equals(...);
    boolean Equals(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean Equals(...);
}

// Namespace: 
class ProviderPair {
    // Fields:
    ProviderBase Provider;
    DiContainer Container;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Items
class ItemSpriteLookup {
    // Fields:
    cmod_reqd sprites;
    cmod_reqd altSprites;
    cmod_reqd iapSprites;
    cmod_reqd currencySprites;
    Generic spriteLookup;
    Generic altSpriteLookup;
    Generic currencySpriteLookup;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void RegisterItem(...);
    Sprite GetSprite(...);
    Sprite GetAltSprite(...);
    Sprite GetSprite(...);
    Sprite GetCurrencySprite(...);
    Sprite GetSpriteHash(...);
    Sprite GetAltSpriteHash(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Sprite GetSprite(...);
    /*[05]*/ Sprite GetAltSprite(...);
    /*[06]*/ Sprite GetSprite(...);
    /*[07]*/ Sprite GetCurrencySprite(...);
    /*[08]*/ void RegisterItem(...);
}

// Namespace: 
class ItemSpritePair {
    // Fields:
    Item Item;
    Sprite Sprite;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class IapSkuSpritePair {
    // Fields:
    String IapSku;
    Sprite Sprite;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CurrencySpritePair {
    // Fields:
    CurrencyType Currency;
    Sprite Sprite;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class CurrencyType {
    // Fields:
    int value__;
    CurrencyType UNKNOWN = 0;
    CurrencyType POKECOIN = 1;
    CurrencyType STARDUST = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Items
class ItemsInstaller {
    // Fields:
    ItemSpriteLookup itemSpriteLookup;
    PlayerBuffService playerBuffServicePrefab;
    cmod_reqd itemPrefabs;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.Items
class PlayerBuffService {
    // Fields:
    PlayerBuffGuiController gameOverlayGuiPrefab;
    PlayerBuffGuiController gameOverlayGui;
    PlayerBuffSelectionGuiController selectionGuiPrefab;
    PlayerBuffSelectionGuiController selectionGui;
    IBehaviourService behaviourService;
    IUserPromptsService userPrompts;
    IItemFactory itemFactory;
    GameMasterData gameMasterData;
    ILocationProvider locationProvider;
    Generic activeBuffs;

    // Methods:
    void .ctor(...);
    Generic get_ActiveBuffs(...);
    void OnStartup(...);
    void AddBuff(...);
    void SelectBuff(...);
    boolean IsBuffTypeActive(...);
    void ActivateBuff(...);
    void Update(...);
    void UpdateAllActiveBuffs(...);
    void Show(...);
    void Hide(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void SelectBuff(...);
    /*[05]*/ Generic get_ActiveBuffs(...);
    /*[06]*/ boolean IsBuffTypeActive(...);
    /*[07]*/ void Show(...);
    /*[08]*/ void Hide(...);
}

// Namespace: Niantic.Holoholo.Items
class PlayerBuffGuiController {
    // Fields:
    Generic buffGuis;
    ActiveBuffGui activeBuffPrefab;
    RectTransform activeBuffsContainer;

    // Methods:
    void .ctor(...);
    void UpdateBuff(...);
    ActiveBuffGui NewBuff(...);
    void BuffComplete(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
}

// Namespace: Niantic.Holoholo.Items
class ActiveBuffGui {
    // Fields:
    Image buffImage;
    Image progress;
    Text timeLeftLabel;

    // Methods:
    void .ctor(...);
    void UpdateBuffInfo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Items
class PlayerBuffSelectionGuiController {
    // Fields:
    String SHOW = "Show";
    String USE = "Use";
    CanvasGroup backgroundGradient;
    GameObject buttonsContainer;
    RectTransform useButton;
    Image useButtonImage;
    Vector2 useButtonAnimatedOutPosition;
    Animator itemAnimator;
    AudioClip itemSound;
    AnimationParams animateIn;
    AnimationParams animateOut;
    IInputLayerStack inputLayerStack;
    Generic showPromise;

    // Methods:
    void .ctor(...);
    Generic Show(...);
    IEnumerator Animate(...);
    void UsePressed(...);
    void CancelPressed(...);
    IEnumerator AnimateItemSprite(...);
    void <UsePressed>m__B9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AnimationParams {
    // Fields:
    float Time;
    AnimationCurve BackgroundAlpha;
    AnimationCurve BlurCurve;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Items
class AppliedItemsProtoExt {
    // Methods:
    boolean HasItem(...);
    AppliedItemProto GetItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class AppliedItemProto {
    // Fields:
    int ItemFieldNumber = 1;
    int ItemTypeFieldNumber = 2;
    int ExpirationMsFieldNumber = 3;
    int AppliedMsFieldNumber = 4;
    Generic _parser;
    Item item_;
    HoloItemType itemType_;
    long expirationMs_;
    long appliedMs_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AppliedItemProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    HoloItemType get_ItemType(...);
    void set_ItemType(...);
    long get_ExpirationMs(...);
    void set_ExpirationMs(...);
    long get_AppliedMs(...);
    void set_AppliedMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AppliedItemProto <_parser>m__1A7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AppliedItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo.Items
class IncubationResult {
    // Fields:
    int value__;
    IncubationResult SUCCESS = 0;
    IncubationResult FAILURE = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Items
class IPlayerBuff {
    // Methods:
    long get_StartTimestamp(...);
    long get_EndTimestamp(...);
    boolean get_IsActive(...);
    void SetParent(...);
    IPromise Activate(...);
    void ActivateFromStartup(...);
}

// Namespace: Niantic.Holoholo.Items
class Incense {
    // Fields:
    IncenseMapPokemon incenseMapPokemonPrefab;
    IRpcHandler rpcHandler;
    IMapAvatar mapAvatar;
    IReceipt incenseSideChannel;
    IUserPromptsService userPrompts;
    IBehaviourService behaviourService;
    ILocationProvider locationProvider;
    GameObject avatarFxPrefab;
    GameObject avatarFx;
    GameObject pokemonFxPrefab;
    GameObject pokemonFx;
    IncenseMapPokemon activeIncensePokemon;
    Promise pendingActivatePromise;
    boolean <IsActive>k__BackingField;
    long <StartTimestamp>k__BackingField;
    long <EndTimestamp>k__BackingField;

    // Methods:
    void .ctor(...);
    Item get_ItemId(...);
    boolean get_IsActive(...);
    void set_IsActive(...);
    long get_StartTimestamp(...);
    void set_StartTimestamp(...);
    long get_EndTimestamp(...);
    void set_EndTimestamp(...);
    void ActivateFromStartup(...);
    void SetParent(...);
    IPromise Activate(...);
    void HandleUseActionResponse(...);
    void StartSideChannel(...);
    void SpawnIncenseMapPokemon(...);
    void EndSideChannel(...);
    void ApplyFX(...);
    void Cleanup(...);
    void OnDestroy(...);
    void Dispose(...);
    void <Activate>m__AE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ Item get_ItemId(...);
    /*[06]*/ HoloItemType get_ItemType(...);
    /*[07]*/ Sprite get_GuiSprite(...);
    /*[08]*/ Sprite get_AltSprite(...);
    /*[09]*/ ItemSettingsProto get_ItemSettings(...);
    /*[10]*/ Sprite get_AltSprite(...);
    /*[11]*/ Item get_ItemId(...);
    /*[12]*/ void Dispose(...);
    /*[13]*/ long get_StartTimestamp(...);
    /*[14]*/ long get_EndTimestamp(...);
    /*[15]*/ boolean get_IsActive(...);
    /*[16]*/ void SetParent(...);
    /*[17]*/ IPromise Activate(...);
    /*[18]*/ void ActivateFromStartup(...);
}

// Namespace: Niantic.Holoholo.Map
class IncenseMapPokemon {
    // Fields:
    GetIncensePokemonOutProto mapProto;
    IncenseEncounterOutProto encounterProto;
    GameObject spawnFxPrefab;
    IRpcHandler rpcHandler;
    IToastService toastService;
    IUserPromptsService userPromptsService;
    IEncounterState encounterState;

    // Methods:
    void .ctor(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    ulong get_EncounterId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    String get_SpawnPointId(...);
    void Initialize(...);
    void PlaySpawnFx(...);
    Generic SendEncounterRequest(...);
    boolean VerifyEncounterResult(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_Transform(...);
    /*[06]*/ ulong get_EncounterId(...);
    /*[07]*/ PokemonProto get_Pokemon(...);
    /*[08]*/ int get_PokemonId(...);
    /*[09]*/ LatLng get_Location(...);
    /*[10]*/ String get_SpawnPointId(...);
    /*[11]*/ HoloCharacter get_HoloCharacter(...);
    /*[12]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[13]*/ int get_Cp(...);
    /*[14]*/ Generic SendEncounterRequest(...);
    /*[15]*/ Generic TryCapture(...);
    /*[16]*/ void Destroy(...);
    /*[17]*/ ulong get_EncounterId(...);
    /*[18]*/ String get_SpawnPointId(...);
    /*[19]*/ PokemonProto get_Pokemon(...);
    /*[20]*/ int get_PokemonId(...);
    /*[21]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[22]*/ int get_Cp(...);
    /*[23]*/ Generic SendEncounterRequest(...);
    /*[24]*/ Generic TryCapture(...);
    /*[25]*/ void PlaySpawnFx(...);
    /*[26]*/ void HandleDestroy(...);
}

// Namespace: Holoholo.Rpc
class GetIncensePokemonOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int PokemonTypeIdFieldNumber = 2;
    int LatFieldNumber = 3;
    int LngFieldNumber = 4;
    int EncounterLocationFieldNumber = 5;
    int EncounterIdFieldNumber = 6;
    int DisappearTimeMsFieldNumber = 7;
    Generic _parser;
    Result result_;
    int pokemonTypeId_;
    double lat_;
    double lng_;
    String encounterLocation_;
    ulong encounterId_;
    long disappearTimeMs_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetIncensePokemonOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    int get_PokemonTypeId(...);
    void set_PokemonTypeId(...);
    double get_Lat(...);
    void set_Lat(...);
    double get_Lng(...);
    void set_Lng(...);
    String get_EncounterLocation(...);
    void set_EncounterLocation(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    long get_DisappearTimeMs(...);
    void set_DisappearTimeMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetIncensePokemonOutProto <_parser>m__147(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetIncensePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result INCENSE_ENCOUNTER_UNKNOWN = 0;
    Result INCENSE_ENCOUNTER_AVAILABLE = 1;
    Result INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class IncenseEncounterOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int PokemonFieldNumber = 2;
    int CaptureProbabilityFieldNumber = 3;
    Generic _parser;
    Result result_;
    PokemonProto pokemon_;
    CaptureProbabilityProto captureProbability_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    IncenseEncounterOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    void set_CaptureProbability(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    IncenseEncounterOutProto <_parser>m__149(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ IncenseEncounterOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result INCENSE_ENCOUNTER_UNKNOWN = 0;
    Result INCENSE_ENCOUNTER_SUCCESS = 1;
    Result INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
    Result POKEMON_INVENTORY_FULL = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Items
class LuckyEgg {
    // Fields:
    IRpcHandler rpcHandler;
    IMapAvatar mapAvatar;
    IUserPromptsService userPrommptsService;
    GameObject playerFxPrefab;
    GameObject playerFx;
    boolean <IsActive>k__BackingField;
    long <StartTimestamp>k__BackingField;
    long <EndTimestamp>k__BackingField;

    // Methods:
    void .ctor(...);
    Item get_ItemId(...);
    boolean get_IsActive(...);
    void set_IsActive(...);
    long get_StartTimestamp(...);
    void set_StartTimestamp(...);
    long get_EndTimestamp(...);
    void set_EndTimestamp(...);
    void SetParent(...);
    void ActivateFromStartup(...);
    IPromise Activate(...);
    void ApplyFX(...);
    void Dispose(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ Item get_ItemId(...);
    /*[06]*/ HoloItemType get_ItemType(...);
    /*[07]*/ Sprite get_GuiSprite(...);
    /*[08]*/ Sprite get_AltSprite(...);
    /*[09]*/ ItemSettingsProto get_ItemSettings(...);
    /*[10]*/ Sprite get_AltSprite(...);
    /*[11]*/ Item get_ItemId(...);
    /*[12]*/ void Dispose(...);
    /*[13]*/ long get_StartTimestamp(...);
    /*[14]*/ long get_EndTimestamp(...);
    /*[15]*/ boolean get_IsActive(...);
    /*[16]*/ void SetParent(...);
    /*[17]*/ IPromise Activate(...);
    /*[18]*/ void ActivateFromStartup(...);
}

// Namespace: Niantic.Holoholo.Items
class BuffSelectionState {
    // Fields:
    int value__;
    BuffSelectionState Canceled = 0;
    BuffSelectionState Selected = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Items
class IPokestopDisk {
    // Methods:
    void Activate(...);
    void EnterInteractionState(...);
    void ExitInteractionState(...);
    void Refresh(...);
}

// Namespace: Niantic.Holoholo.Items
class TroyDisk {
    // Fields:
    TroyDiskMapPokemon mapPokemonPrefab;
    TroyDiskEffect effectPrefab;
    IUserPromptsService userPromptsService;
    IBehaviourService behaviourService;
    IPlayerProximityService playerProximityService;
    GlobalSettings globalSettings;
    Factory effectFactory;
    IMapPokestop hostPokestop;
    TroyDiskEffect effect;
    TroyDiskMapPokemon activeMapPokemon;
    MapPokemonProto mapPokemonProto;
    IReceipt inRangeReceipt;
    IReceipt outOfRangeReceipt;
    Sprite slotSprite;

    // Methods:
    void .ctor(...);
    Item get_ItemId(...);
    Sprite get_AltSprite(...);
    void Activate(...);
    void OnDestroy(...);
    void Refresh(...);
    void EnterInteractionState(...);
    void ExitInteractionState(...);
    void SpawnEncounterPokemon(...);
    void DespawnPokemon(...);
    void <SpawnEncounterPokemon>m__BA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ Item get_ItemId(...);
    /*[06]*/ HoloItemType get_ItemType(...);
    /*[07]*/ Sprite get_GuiSprite(...);
    /*[08]*/ Sprite get_AltSprite(...);
    /*[09]*/ ItemSettingsProto get_ItemSettings(...);
    /*[10]*/ Sprite get_AltSprite(...);
    /*[11]*/ Item get_ItemId(...);
    /*[12]*/ void Dispose(...);
    /*[13]*/ void Activate(...);
    /*[14]*/ void EnterInteractionState(...);
    /*[15]*/ void ExitInteractionState(...);
    /*[16]*/ void Refresh(...);
}

// Namespace: Niantic.Holoholo.Map
class TroyDiskMapPokemon {
    // Fields:
    GameObject spawnFxPrefab;
    float minSpawnRange;
    float maxSpawnRange;
    IRpcHandler rpcHandler;
    IPoiDirectoryService poiDirectoryService;
    WorldMapRenderer worldMapRenderer;
    ILocationProvider locationProvider;
    IToastService toastService;
    IUserPromptsService userPromptsService;
    IEncounterState encounterState;
    MapPokemonProto mapProto;
    DiskEncounterOutProto encounterProto;
    Promise despawnPromise;

    // Methods:
    void .ctor(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    int get_Cp(...);
    ulong get_EncounterId(...);
    PokemonProto get_Pokemon(...);
    int get_PokemonId(...);
    String get_SpawnPointId(...);
    IPromise Initialize(...);
    void HandleDestroy(...);
    void PlaySpawnFx(...);
    Generic SendEncounterRequest(...);
    boolean VerifyEncounterResult(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GameObject get_GameObject(...);
    /*[05]*/ Transform get_Transform(...);
    /*[06]*/ ulong get_EncounterId(...);
    /*[07]*/ PokemonProto get_Pokemon(...);
    /*[08]*/ int get_PokemonId(...);
    /*[09]*/ LatLng get_Location(...);
    /*[10]*/ String get_SpawnPointId(...);
    /*[11]*/ HoloCharacter get_HoloCharacter(...);
    /*[12]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[13]*/ int get_Cp(...);
    /*[14]*/ Generic SendEncounterRequest(...);
    /*[15]*/ Generic TryCapture(...);
    /*[16]*/ void Destroy(...);
    /*[17]*/ ulong get_EncounterId(...);
    /*[18]*/ String get_SpawnPointId(...);
    /*[19]*/ PokemonProto get_Pokemon(...);
    /*[20]*/ int get_PokemonId(...);
    /*[21]*/ CaptureProbabilityProto get_CaptureProbability(...);
    /*[22]*/ int get_Cp(...);
    /*[23]*/ Generic SendEncounterRequest(...);
    /*[24]*/ Generic TryCapture(...);
    /*[25]*/ void PlaySpawnFx(...);
    /*[26]*/ void HandleDestroy(...);
}

// Namespace: Holoholo.Rpc
class DiskEncounterOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int PokemonFieldNumber = 2;
    int CaptureProbabilityFieldNumber = 3;
    Generic _parser;
    Result result_;
    PokemonProto pokemon_;
    CaptureProbabilityProto captureProbability_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DiskEncounterOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    CaptureProbabilityProto get_CaptureProbability(...);
    void set_CaptureProbability(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DiskEncounterOutProto <_parser>m__14B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DiskEncounterOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNKNOWN = 0;
    Result SUCCESS = 1;
    Result NOT_AVAILABLE = 2;
    Result NOT_IN_RANGE = 3;
    Result ENCOUNTER_ALREADY_FINISHED = 4;
    Result POKEMON_INVENTORY_FULL = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Platform
class NianticInventoryCache`2 {
    // Fields:
    Generic keyDefaultInstance;
    Generic valueDefaultInstance;
    long latestTimestamp;
    Generic inventory;
    Generic OnInventoryUpdate;
    Generic OnFullInventoryUpdate;

    // Methods:
    void .ctor(...);
    void add_OnInventoryUpdate(...);
    void remove_OnInventoryUpdate(...);
    void add_OnFullInventoryUpdate(...);
    void remove_OnFullInventoryUpdate(...);
    Generic GetCurrentItems(...);
    Generic GetItem(...);
    var ExtractKeyFrom(...);
    void AddPredictedUpdates(...);
    void AddPredictedDeletion(...);
    void RollbackPredictedDeletions(...);
    void RollbackPredictedUpdates(...);
    long GetLatestTimestamp(...);
    void HandleInventoryDelta(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class InventoryUpdateEventArgs {
    // Fields:
    Generic itemUpdates;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FullInventoryUpdateEventArgs {
    // Fields:
    Generic items;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ClientInventoryItem {
    // Fields:
    Generic serverState;
    Generic clientPrediction;

    // Methods:
    void .ctor(...);
    Generic GetItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ClientItemModel {
    // Fields:
    var gameItem;
    boolean isPrediction;

    // Methods:
    void .ctor(...);
    var get_GameItem(...);
    boolean get_IsPrediction(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ItemUpdate {
    // Fields:
    UpdateType updateType;
    Generic oldItem;
    Generic newItem;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UpdateType {
    // Fields:
    int value__;
    UpdateType ADD = 0;
    UpdateType MODIFY = 1;
    UpdateType REMOVE = 2;
    UpdateType PREDICTED_MODIFY = 3;
    UpdateType PREDICTED_REMOVE = 4;
    UpdateType ROLLED_BACK_MODIFY = 5;
    UpdateType ROLLED_BACK_REMOVE = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: NianticLabs.Samples
class AbstractTileBuilder {
    // Fields:
    MapLayer layer;
    cmod_reqd kinds;
    IMapTileStore store;

    // Methods:
    void .ctor(...);
    void SetMapTileStore(...);
    void SetTileManager(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnPoint(...);
    void OnLinear(...);
    void OnMesh(...);
    void OnGmmBuilding(...);
    void OnArea(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnPoint(...);
    /*[13]*/ void OnLinear(...);
    /*[14]*/ void OnMesh(...);
    /*[15]*/ void OnGmmBuilding(...);
    /*[16]*/ void OnArea(...);
}

// Namespace: NianticLabs.Samples
class IMapTileStore {
    // Methods:
    MapTile GetTile(...);
}

// Namespace: NianticLabs.Samples
class MapTile {
    // Fields:
    ulong id;
    double originX;
    double originY;
    double originZ;
    float size;
    int level;

    // Methods:
    void .ctor(...);
    ulong GetId(...);
    void GetOrigin(...);
    double GetSize(...);
    void UpdateTransform(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Samples.Builders
class AreaBuilder {
    // Fields:
    Material areaMaterial;
    Vector3 offset;
    GameObject tileObj;

    // Methods:
    void .ctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnArea(...);
    void OnMesh(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: NianticLabs.Samples.Builders
class BuildingBuilder {
    // Fields:
    Material buildingMaterial;
    GameObject tileObj;

    // Methods:
    void .ctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnMesh(...);
    void OnGmmBuilding(...);
    void OnBuilding(...);
    void GatherEdge(...);
    Mesh GenerateWalls(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: NianticLabs.Samples.Builders
class GeometryExtractor {
    // Methods:
    void .ctor(...);
    void CreateMiteredWidePolyline(...);
    void CreateMiteredWidePolyline(...);
    void CreateMiteredWidePolylineInternal(...);
    void ProcessJoint(...);
    void CreateMiter(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ArrayDecorator`1 {
    // Fields:
    cmod_reqd decorated;
    int offset;
    int length;

    // Methods:
    void .ctor(...);
    int get_Length(...);
    var get_Item(...);
    void set_Item(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Samples.Builders
class WideLineBuilder {
    // Fields:
    Material lineMaterial;
    float thickness;
    Generic vertices;
    Generic indices;
    GameObject mapObject;

    // Methods:
    void .ctor(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnLinear(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeginTile(...);
    /*[05]*/ void OnEndTile(...);
    /*[06]*/ void OnPoint(...);
    /*[07]*/ void OnLinear(...);
    /*[08]*/ void OnMesh(...);
    /*[09]*/ void OnGmmBuilding(...);
    /*[10]*/ void OnArea(...);
    /*[11]*/ void SetTileManager(...);
    /*[12]*/ void OnBeginTile(...);
    /*[13]*/ void OnEndTile(...);
    /*[14]*/ void OnPoint(...);
    /*[15]*/ void OnLinear(...);
    /*[16]*/ void OnMesh(...);
    /*[17]*/ void OnGmmBuilding(...);
    /*[18]*/ void OnArea(...);
}

// Namespace: NianticLabs.Samples
class MapTileManager {
    // Fields:
    Generic buildersByLayer;
    Generic currentLayerBuilders;
    Generic allBuilders;
    Generic tiles;
    Stopwatch processStopWatch;
    long MAX_PROCESSING_TIME_MS;
    Vector3 mapOffset;
    float mapScale;
    IEnumerator processEventsCoroutine;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Awake(...);
    void Start(...);
    void Stop(...);
    void Initialize(...);
    void SubscribeToLayer(...);
    void SubscribeToLayer(...);
    void OnCreateTile(...);
    void OnDeleteTile(...);
    void OnBeginTile(...);
    void OnEndTile(...);
    void OnLayer(...);
    void OnPoint(...);
    void OnLinear(...);
    void OnMesh(...);
    void OnGmmBuilding(...);
    void OnArea(...);
    boolean OnProcessingPauseCheck(...);
    MapTile GetTile(...);
    IEnumerator ProcessEvents(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnCreateTile(...);
    /*[05]*/ void OnDeleteTile(...);
    /*[06]*/ void OnBeginTile(...);
    /*[07]*/ void OnEndTile(...);
    /*[08]*/ void OnLayer(...);
    /*[09]*/ void OnPoint(...);
    /*[10]*/ void OnLinear(...);
    /*[11]*/ void OnMesh(...);
    /*[12]*/ void OnGmmBuilding(...);
    /*[13]*/ void OnArea(...);
    /*[14]*/ boolean OnProcessingPauseCheck(...);
    /*[15]*/ void SubscribeToLayer(...);
    /*[16]*/ MapTile GetTile(...);
}

// Namespace: Niantic.Holoholo.Encounter
class SwapTextureByTime {
    // Fields:
    ITimeOfDayService timeOfDayService;
    Material backgroundMaterial;
    Material foregroundMaterial;
    Texture textureDay;
    Texture textureNight;

    // Methods:
    void .ctor(...);
    Texture get_TextureForTimeOfDay(...);
    void Setup(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UserTasks
class TaskCompletionResult {
    // Fields:
    int value__;
    TaskCompletionResult Success = 0;
    TaskCompletionResult Failed = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: PokemonGoPlus
class MonoPInvokeCallbackAttribute {
    // Fields:
    Type type;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: PokemonGoPlus
class CentralState {
    // Fields:
    int value__;
    CentralState UNKNOWN = 0;
    CentralState RESETTING = 1;
    CentralState UNSUPPORTED = 2;
    CentralState UNAUTHORIZED = 3;
    CentralState POWERED_OFF = 4;
    CentralState POWERED_ON = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: PokemonGoPlus
class SfidaConnectState {
    // Fields:
    int value__;
    SfidaConnectState DISCONNECTED = 0;
    SfidaConnectState CONNECTED = 1;
    SfidaConnectState DISCOVERED = 2;
    SfidaConnectState CERTIFIED = 3;
    SfidaConnectState SOFTWARE_UPDATE = 4;
    SfidaConnectState FAILED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: PokemonGoPlus
class PgpState {
    // Fields:
    ulong actionTimestampMs;
    CentralState bluetoothState;
    SfidaConnectState sfidaState;
    double batteryLevel;
    ulong encounterId;
    String pokestopId;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: PokemonGoPlus
class PgpStateInternal {
    // Fields:
    ulong actionTimestampMs;
    CentralState bluetoothState;
    SfidaConnectState sfidaState;
    double batteryLevel;
    ulong encounterId;
    uint pokestopId;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: PokemonGoPlus
class ScannedSfida {
    // Fields:
    String deviceId;
    int buttonValue;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: PokemonGoPlus
class PgpApi {
    // Fields:
    ScannedSfidaDelegate scannedSfidaDelegate;
    OnLoadHandler OnLoadEvent;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_OnLoadEvent(...);
    void remove_OnLoadEvent(...);
    PgpState get_State(...);
    boolean IsGoPlusInstalled(...);
    void StartScanning(...);
    void StopScanning(...);
    void ReportScannedSfida(...);
    void GetScanResultsInternal(...);
    void GetScanResults(...);
    void StartSession(...);
    void StopSession(...);
    void OnLoad(...);
    void OnStart(...);
    void OnStop(...);
    void OnPause(...);
    void OnResume(...);
    void OnUpdate(...);
    void CheckResult(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScannedSfidaDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class OnLoadHandler {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class ScannedSfidaInternal {
    // Fields:
    uint device;
    int buttonValue;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DebugLogsDelegate {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: PokemonGoPlus
class PgpEntryPoints {
    // Fields:
    String dllSource = "PgpPlugin";
    PgpNativeBindings pgp;
    PgpApi pgpApi;

    // Methods:
    void .ctor(...);
    void CheckResult(...);
    cmod_opt GetProc(...);
    void LoadApiBindings(...);
    void GetPgpApi(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PgpNativeBindings {
    // Fields:
    uint PgpOnStart;
    uint PgpOnStop;
    uint PgpOnPause;
    uint PgpOnResume;
    uint PgpOnUpdate;
    uint PgpIsGoPlusInstalled;
    uint PgpStartScanning;
    uint PgpStopScanning;
    uint PgpGetScanResults;
    uint PgpGetPgpState;
    uint PgpStartSession;
    uint PgpStopSession;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PgpApi {
    // Fields:
    PgpOnStart_ PgpOnStart;
    PgpOnStop_ PgpOnStop;
    PgpOnPause_ PgpOnPause;
    PgpOnResume_ PgpOnResume;
    PgpOnUpdate_ PgpOnUpdate;
    PgpIsGoPlusInstalled_ PgpIsGoPlusInstalled;
    PgpStartScanning_ PgpStartScanning;
    PgpStopScanning_ PgpStopScanning;
    PgpGetScanResults_ PgpGetScanResults;
    PgpGetPgpState_ PgpGetPgpState;
    PgpStartSession_ PgpStartSession;
    PgpStopSession_ PgpStopSession;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PgpOnStart_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class ApiError {
    // Fields:
    int value__;
    ApiError SUCCESS = 0;
    ApiError PLUGIN_NOT_READY = 1;
    ApiError NOT_SUPPORTED = 2;
    ApiError NOT_IMPLEMENTED_YET = 3;
    ApiError INTERNAL_ERROR = 4;
    ApiError INVALID_PARAMETERS = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class PgpOnStop_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpOnPause_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpOnResume_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpOnUpdate_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpIsGoPlusInstalled_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpStartScanning_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpStopScanning_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpGetScanResults_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpGetPgpState_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpStartSession_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class PgpStopSession_ {
    // Methods:
    void .ctor(...);
    ApiError Invoke(...);
    IAsyncResult BeginInvoke(...);
    ApiError EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ ApiError Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ ApiError EndInvoke(...);
}

// Namespace: 
class NativeScannedSfidaDelegateType {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: PokemonGoPlus
class PluginUtils {
    // Methods:
    void .ctor(...);
    cmod_opt RecoverPluginEventParams(...);
    cmod_opt RecoverFromHandle(...);
    cmod_reqd RecoverArrayFromHandle(...);
    cmod_reqd RecoverArrayFromHandle(...);
    void ArrayAllocator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: PokemonGoPlus
class Plugin {
    // Fields:
    boolean isPaused;
    boolean firstResume;

    // Methods:
    void .ctor(...);
    Plugin InitializePlugin(...);
    void Awake(...);
    void Update(...);
    void OnApplicationFocus(...);
    void OnApplicationPause(...);
    void OnApplicationQuit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: PrefabEvolution
class EvolvePrefab {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleMockArService {
    // Fields:
    boolean arMode;
    Generic OnToggleAr;

    // Methods:
    void .ctor(...);
    void add_OnToggleAr(...);
    void remove_OnToggleAr(...);
    boolean get_BattleArMode(...);
    boolean get_EncounterArMode(...);
    boolean get_IsAvailable(...);
    void ToggleAR(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnToggleAr(...);
    /*[05]*/ void remove_OnToggleAr(...);
    /*[06]*/ boolean get_BattleArMode(...);
    /*[07]*/ boolean get_EncounterArMode(...);
    /*[08]*/ boolean get_IsAvailable(...);
    /*[09]*/ void ToggleAR(...);
}

// Namespace: 
class BattleMockRunner {
    // Fields:
    MockPokemonData playerPokemonData;
    MockPokemonData enemyPokemonData;
    PlayerBattlePokemon playerPokemon;
    EnemyBattlePokemon enemyPokemon;
    GameMasterData gameMaster;
    InputField sequence;
    int currMove;

    // Methods:
    void .ctor(...);
    IEnumerator Start(...);
    void PlayerAttack(...);
    void PlayerSpecialAttack(...);
    void PlayerDodge(...);
    void PlayerFaint(...);
    void PlayerSwap(...);
    void PlayerIntro(...);
    void PlayerReset(...);
    void EnemyAttack(...);
    void EnemySpecialAttack(...);
    void EnemyDodge(...);
    void EnemyFaint(...);
    void EnemySwap(...);
    void EnemyIntro(...);
    void EnemyReset(...);
    void DisplayMoveInfo(...);
    void CommitMoveChanges(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MockPokemonData {
    // Fields:
    int pokemonId;
    int move1;
    int move2;
    int hp;
    int cp;

    // Methods:
    void .ctor(...);
    PokemonProto get_pokemon(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class BattleTestInstaller {
    // Fields:
    BlobShadow shadowPrefab;
    PlayerBattlePokemon playerPokemon;
    EnemyBattlePokemon enemyPokemon;
    SoundController soundController;
    GameMasterData gameMaster;
    GameMasterDataService gameMasterService;
    RemoteConfigCache remoteConfigCache;
    BattleCameraController battleCameraController;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo
class GameMasterDataService {
    // Fields:
    RemoteConfigCache remoteConfigCache;
    boolean requestPending;
    Generic dataReadyCallbacks;
    GetGameMasterClientTemplatesOutProto <GameMasterDataResponse>k__BackingField;

    // Methods:
    void .ctor(...);
    GetGameMasterClientTemplatesOutProto get_GameMasterDataResponse(...);
    void set_GameMasterDataResponse(...);
    void RequestGameMasterData(...);
    void RequestGameMasterDataUpdate(...);
    void <RequestGameMasterDataUpdate>m__F2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ GetGameMasterClientTemplatesOutProto get_GameMasterDataResponse(...);
    /*[05]*/ void RequestGameMasterData(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class MockBattleFrameObservableService {
    // Fields:
    Action <>f__am$cache0;

    // Methods:
    void .ctor(...);
    boolean get_BattleActive(...);
    boolean get_ObservedSet(...);
    float get_TimeRemaining(...);
    IReceipt Observe(...);
    Generic StartGymBattle(...);
    boolean TryAttack(...);
    boolean TryDodge(...);
    boolean TrySpecialAttack(...);
    void TrySurrender(...);
    boolean TrySwap(...);
    Generic TryQueueLocalAction(...);
    void Destroy(...);
    Generic NextGymBattle(...);
    void ClearData(...);
    void <Observe>m__C0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_BattleActive(...);
    /*[05]*/ float get_TimeRemaining(...);
    /*[06]*/ Generic StartGymBattle(...);
    /*[07]*/ Generic NextGymBattle(...);
    /*[08]*/ boolean TryAttack(...);
    /*[09]*/ boolean TrySpecialAttack(...);
    /*[10]*/ boolean TryDodge(...);
    /*[11]*/ void TrySurrender(...);
    /*[12]*/ boolean TrySwap(...);
    /*[13]*/ Generic TryQueueLocalAction(...);
    /*[14]*/ void ClearData(...);
    /*[15]*/ void Destroy(...);
    /*[16]*/ IReceipt Observe(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class MockBattleTimingService {
    // Methods:
    void .ctor(...);
    float TimeUntilActionBegins(...);
    float TimeUntilAttackLands(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float TimeUntilActionBegins(...);
    /*[05]*/ float TimeUntilAttackLands(...);
    /*[06]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Battle
class MockBattleTransforms {
    // Methods:
    void .ctor(...);
    Transform get_Root(...);
    Transform get_PokemonRoot(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Transform get_Root(...);
    /*[05]*/ Transform get_PokemonRoot(...);
    /*[06]*/ void Destroy(...);
}

// Namespace: Niantic.Holoholo.Encounter.MockSetup
class EncounterTestInstaller {
    // Fields:
    NamePlate namePlatePrefab;
    MockEncounterPokemon encounterPokemon;
    EncounterToast toastPrefab;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.Encounter.MockSetup
class MockEncounterPokemon {
    // Fields:
    Action AssetLoaded;
    EncounterPokemonState <CurrentState>k__BackingField;
    boolean <IsAttacking>k__BackingField;
    WildPokemonProto <WildPokemonProto>k__BackingField;
    boolean <CanMove>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_AssetLoaded(...);
    void remove_AssetLoaded(...);
    EncounterPokemonState get_CurrentState(...);
    void set_CurrentState(...);
    boolean get_IsAttacking(...);
    void set_IsAttacking(...);
    Transform get_Waist(...);
    Transform get_Head(...);
    float get_OriginScale(...);
    WildPokemonProto get_WildPokemonProto(...);
    void set_WildPokemonProto(...);
    boolean get_CanMove(...);
    void set_CanMove(...);
    IMapPokemon get_MapPokemon(...);
    void EnterPokeball(...);
    void BreakOutPokeball(...);
    void Flee(...);
    void Update(...);
    void Init(...);
    Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_AssetLoaded(...);
    /*[05]*/ void remove_AssetLoaded(...);
    /*[06]*/ void Init(...);
    /*[07]*/ EncounterPokemonState get_CurrentState(...);
    /*[08]*/ IMapPokemon get_MapPokemon(...);
    /*[09]*/ Transform get_Waist(...);
    /*[10]*/ Transform get_Head(...);
    /*[11]*/ float get_OriginScale(...);
    /*[12]*/ boolean get_IsAttacking(...);
    /*[13]*/ boolean get_CanMove(...);
    /*[14]*/ void set_CanMove(...);
    /*[15]*/ Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    /*[16]*/ GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);
    /*[17]*/ void Flee(...);
    /*[18]*/ void EnterPokeball(...);
    /*[19]*/ void BreakOutPokeball(...);
    /*[20]*/ Transform Niantic.Holoholo.Encounter.IEncounterPokemon.get_transform(...);
    /*[21]*/ GameObject Niantic.Holoholo.Encounter.IEncounterPokemon.get_gameObject(...);
}

// Namespace: Niantic.Holoholo.Encounter.MockSetup
class MockRpcService {
    // Methods:
    void .ctor(...);
    Generic Send(...);
    IReceipt RegisterSideChannel(...);
    int AttackGym(...);
    int CatchPokemon(...);
    int ClaimCodename(...);
    int DebugDeletePlayer(...);
    int DebugUpdateInventory(...);
    int DeployPokemon(...);
    int Encounter(...);
    int EncounterTutorialComplete(...);
    int EvolvePokemon(...);
    int FortDetails(...);
    int FortSearch(...);
    int GetAssetDigest(...);
    int GetDownloadURL(...);
    int GetGameMasterClientTemplates(...);
    int GetGymDetails(...);
    int GetLevelUpRewards(...);
    int GetMapObjects(...);
    int GetPlayer(...);
    int GetPlayerProfile(...);
    int GetRemoteConfigVersions(...);
    int PlayerUpdate(...);
    int PollForTradeResponse(...);
    int RecallPokemon(...);
    int ReleasePokemon(...);
    int SetCurrentPokemon(...);
    int SetPlayerTeam(...);
    int SetAvatar(...);
    int MarkTutorialComplete(...);
    int StartGymBattle(...);
    int TradeOffer(...);
    int TradeResult(...);
    int TradeSearch(...);
    int UseItemCapture(...);
    int UseItemGym(...);
    int UseItemPotion(...);
    int UseItemRevive(...);
    int RecycleItem(...);
    int CollectDailyBonus(...);
    int CollectDefenderBonus(...);
    int UseItemXpBoost(...);
    int UseItemEggIncubator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Send(...);
    /*[05]*/ IReceipt RegisterSideChannel(...);
    /*[06]*/ int GetAssetDigest(...);
    /*[07]*/ int GetDownloadURL(...);
    /*[08]*/ int GetGameMasterClientTemplates(...);
    /*[09]*/ int GetRemoteConfigVersions(...);
    /*[10]*/ int SetAvatar(...);
    /*[11]*/ int MarkTutorialComplete(...);
    /*[12]*/ int FortDetails(...);
    /*[13]*/ int FortSearch(...);
    /*[14]*/ int Encounter(...);
    /*[15]*/ int GetMapObjects(...);
    /*[16]*/ int ClaimCodename(...);
    /*[17]*/ int GetGymDetails(...);
}

// Namespace: Niantic.Holoholo.Encounter.MockSetup
class EncounterTestRunner {
    // Fields:
    MockEncounterPokemon encounterPokemon;
    II18n i18n;

    // Methods:
    void .ctor(...);
    void Setup(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class GymAnimationTestInstaller {
    // Fields:
    GymAsset gymPrefab;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class MockRpcService {
    // Methods:
    void .ctor(...);
    int AttackGym(...);
    int CatchPokemon(...);
    int ClaimCodename(...);
    int DebugDeletePlayer(...);
    int DebugUpdateInventory(...);
    int DeployPokemon(...);
    int Encounter(...);
    int EncounterTutorialComplete(...);
    int EvolvePokemon(...);
    int FortDetails(...);
    int FortSearch(...);
    int GetAssetDigest(...);
    int GetDownloadURL(...);
    int GetGameMasterClientTemplates(...);
    int GetGymDetails(...);
    int GetLevelUpRewards(...);
    int GetMapObjects(...);
    int GetPlayer(...);
    int GetPlayerProfile(...);
    int GetRemoteConfigVersions(...);
    int PlayerUpdate(...);
    int PollForTradeResponse(...);
    int RecallPokemon(...);
    int ReleasePokemon(...);
    int SetCurrentPokemon(...);
    int SetPlayerTeam(...);
    int SetAvatar(...);
    int MarkTutorialComplete(...);
    int StartGymBattle(...);
    int TradeOffer(...);
    int TradeResult(...);
    int TradeSearch(...);
    int UseItemCapture(...);
    int UseItemGym(...);
    int UseItemPotion(...);
    int UseItemRevive(...);
    int RecycleItem(...);
    int CollectDailyBonus(...);
    int CollectDefenderBonus(...);
    int UseItemXpBoost(...);
    int UseItemEggIncubator(...);
    Generic Send(...);
    IReceipt RegisterSideChannel(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Send(...);
    /*[05]*/ IReceipt RegisterSideChannel(...);
    /*[06]*/ int GetAssetDigest(...);
    /*[07]*/ int GetDownloadURL(...);
    /*[08]*/ int GetGameMasterClientTemplates(...);
    /*[09]*/ int GetRemoteConfigVersions(...);
    /*[10]*/ int SetAvatar(...);
    /*[11]*/ int MarkTutorialComplete(...);
    /*[12]*/ int FortDetails(...);
    /*[13]*/ int FortSearch(...);
    /*[14]*/ int Encounter(...);
    /*[15]*/ int GetMapObjects(...);
    /*[16]*/ int ClaimCodename(...);
    /*[17]*/ int GetGymDetails(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class MockILocationProvider {
    // Methods:
    void .ctor(...);
    boolean get_HasValidLocation(...);
    boolean get_IsMeasuredLocation(...);
    LatLng get_Location(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LatLng get_Location(...);
    /*[05]*/ boolean get_HasValidLocation(...);
    /*[06]*/ boolean get_IsMeasuredLocation(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class MockIMapController {
    // Fields:
    Generic OnWorldScaleOrOriginChanged;

    // Methods:
    void .ctor(...);
    void add_OnWorldScaleOrOriginChanged(...);
    void remove_OnWorldScaleOrOriginChanged(...);
    boolean get_CompassLock(...);
    void set_CompassLock(...);
    MapConfig get_Config(...);
    void set_Config(...);
    boolean get_GPSLock(...);
    void set_GPSLock(...);
    boolean get_IsAnimating(...);
    LookAtCamera get_LookAtCamera(...);
    Camera get_MapCamera(...);
    float get_WorldScale(...);
    void FlyTo(...);
    boolean GetGroundLocation(...);
    boolean GetGroundPosition(...);
    Vector3 GetMapPosition(...);
    LatLng GetWorldLocation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnWorldScaleOrOriginChanged(...);
    /*[05]*/ void remove_OnWorldScaleOrOriginChanged(...);
    /*[06]*/ void FlyTo(...);
    /*[07]*/ LatLng GetWorldLocation(...);
    /*[08]*/ Vector3 GetMapPosition(...);
    /*[09]*/ boolean GetGroundPosition(...);
    /*[10]*/ boolean GetGroundLocation(...);
    /*[11]*/ LookAtCamera get_LookAtCamera(...);
    /*[12]*/ boolean get_GPSLock(...);
    /*[13]*/ void set_GPSLock(...);
    /*[14]*/ boolean get_IsAnimating(...);
    /*[15]*/ Camera get_MapCamera(...);
    /*[16]*/ boolean get_CompassLock(...);
    /*[17]*/ void set_CompassLock(...);
    /*[18]*/ MapConfig get_Config(...);
    /*[19]*/ void set_Config(...);
    /*[20]*/ float get_WorldScale(...);
}

// Namespace: Niantic.Holoholo.Gym.MockSetup
class GymDataMockRunner {
    // Fields:
    MapGym mapGym;
    PokemonFortProto mockGymData;
    GymLevelSettingsProto mockLevelSettings;
    long maxGymPoints;
    Text gymInfoDisplay;
    Slider prestigeSlider;

    // Methods:
    void .ctor(...);
    IEnumerator Start(...);
    void UpdateGymInfoDisplay(...);
    PokemonFortProto BuildMockGymData(...);
    void SliderChanged(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Pokestop.Test
class RewardItemRunner {
    // Fields:
    AwardItemBubble awardItemBubblePrefab;
    Transform spawnTransform;
    ItemSpriteLookup itemSpriteLookup;

    // Methods:
    void .ctor(...);
    void Spawn(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget.TestScene
class RecyclerViewTestRunner {
    // Fields:
    SpriteLookup spriteLookup;
    int elementCount;
    RecyclerView recycler;
    cmod_reqd mockTextFieldData;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Start(...);
    void SetRandomSlider(...);
    cmod_reqd BuildDataSet(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.TestScenes
class ModalInteractionTestScene {
    // Fields:
    IUserPromptsService userPrompts;
    IReceipt errorReceipt;

    // Methods:
    void .ctor(...);
    void ShowError(...);
    IEnumerator Defer(...);
    void Test2Buttons(...);
    void Test1Button(...);
    void <ShowError>m__C7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.TestScenes
class UserPromptsInstaller {
    // Fields:
    UserPromptsService userPromptsPrefab;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.Android
class AndroidContext {
    // Fields:
    AndroidJavaClass <UnityPlayer>k__BackingField;
    AndroidJavaObject <UnityActivity>k__BackingField;

    // Methods:
    void .ctor(...);
    AndroidJavaClass get_UnityPlayer(...);
    void set_UnityPlayer(...);
    AndroidJavaObject get_UnityActivity(...);
    void set_UnityActivity(...);
    void Awake(...);
    void Destroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AnimEventUtils {
    // Methods:
    void .ctor(...);
    void DestroySelf(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AnimTileUV {
    // Fields:
    Material animatedMat;
    float framesPerSecond;
    Vector2 uvOffset;
    Vector2 tileBase;
    int index;
    Material copyMat;
    cmod_reqd renderers;

    // Methods:
    void .ctor(...);
    void Start(...);
    IEnumerator updateTiling(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class DeferredInvoke {
    // Fields:
    Action action;
    float deferTime;
    DeferMode mode;

    // Methods:
    void .ctor(...);
    IReceipt Run(...);
    IReceipt EndOfFrame(...);
    IEnumerator Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DeferMode {
    // Fields:
    int value__;
    DeferMode Seconds = 0;
    DeferMode EndOfFrame = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Animation
class StaticMeshRendererState {
    // Fields:
    IReceipt deferredReceipt;

    // Methods:
    void .ctor(...);
    void OnStateEnter(...);
    void OnStateExit(...);
    void CancelWaitingDeferral(...);
    void SetSkinnedAndStaticMeshEnabled(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStateEnter(...);
    /*[05]*/ void OnStateUpdate(...);
    /*[06]*/ void OnStateExit(...);
    /*[07]*/ void OnStateMove(...);
    /*[08]*/ void OnStateIK(...);
    /*[09]*/ void OnStateMachineEnter(...);
    /*[10]*/ void OnStateMachineExit(...);
    /*[11]*/ void OnStateEnter(...);
    /*[12]*/ void OnStateUpdate(...);
    /*[13]*/ void OnStateExit(...);
    /*[14]*/ void OnStateMove(...);
    /*[15]*/ void OnStateIK(...);
    /*[16]*/ void OnStateMachineEnter(...);
    /*[17]*/ void OnStateMachineExit(...);
}

// Namespace: Niantic.Holoholo
class Yield {
    // Methods:
    YieldWhile While(...);
    YieldUntil Until(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class YieldWhile {
    // Fields:
    Generic yieldFunc;

    // Methods:
    void .ctor(...);
    boolean get_keepWaiting(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_Current(...);
    /*[05]*/ boolean MoveNext(...);
    /*[06]*/ void Reset(...);
    /*[07]*/ boolean get_keepWaiting(...);
}

// Namespace: Niantic.Holoholo
class YieldUntil {
    // Fields:
    Generic yieldFunc;

    // Methods:
    void .ctor(...);
    boolean get_keepWaiting(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_Current(...);
    /*[05]*/ boolean MoveNext(...);
    /*[06]*/ void Reset(...);
    /*[07]*/ boolean get_keepWaiting(...);
}

// Namespace: Niantic.Holoholo.Assets
class AssetDecoder {
    // Fields:
    int VERSION_LENGTH = 1;
    int IV_LENGTH = 16;
    int HMAC_LENGTH = 20;
    byte ENCRYPTION_VERSION = 1;
    int DECRYPT_MODE = 2;
    String sharedKey;
    Record assetDigest;

    // Methods:
    void .ctor(...);
    cmod_reqd GetHash(...);
    boolean ValidateBundle(...);
    IEnumerator Decode(...);
    cmod_reqd Decode(...);
    cmod_reqd DecodeEditor(...);
    cmod_reqd DecodeAndroid(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Assets
class AssetLoader {
    // Fields:
    Generic pendingRequests;
    Coroutine processRequestsCoroutine;
    AssetLoadRequestImpl activeRequest;
    IBundleManager bundleManager;

    // Methods:
    void .ctor(...);
    IAssetLoadRequest RequestAsset(...);
    void Update(...);
    IEnumerator LoadAsset(...);
    void CancelRequest(...);
    void <Update>m__CC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AssetLoadRequestImpl {
    // Fields:
    String bundleName;
    String assetName;
    AssetLoader loader;
    GameObject asset;
    boolean done;
    Generic OnLoaded;

    // Methods:
    void .ctor(...);
    void add_OnLoaded(...);
    void remove_OnLoaded(...);
    GameObject get_Asset(...);
    boolean get_Done(...);
    String get_BundleName(...);
    String get_AssetName(...);
    void Cancel(...);
    void LoadAsset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnLoaded(...);
    /*[05]*/ void remove_OnLoaded(...);
    /*[06]*/ String get_BundleName(...);
    /*[07]*/ String get_AssetName(...);
    /*[08]*/ GameObject get_Asset(...);
    /*[09]*/ boolean get_Done(...);
    /*[10]*/ void Cancel(...);
}

// Namespace: Niantic.Holoholo.Assets
class AssetRequestPriority {
    // Fields:
    int value__;
    AssetRequestPriority Preload = 0;
    AssetRequestPriority Normal = 1;
    AssetRequestPriority Immediate = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Assets
class BundleManager {
    // Fields:
    String assetDir;
    AssetDigest assetDigest;
    Generic bundleCache;
    Generic loadingQueue;
    Coroutine processRequestsRoutine;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void Init(...);
    void OnDestroy(...);
    String PokemonAssetName(...);
    IBundleRequest RequestAssetBundle(...);
    IEnumerator ProcessAssetRequests(...);
    IEnumerator ProcessAssetRequest(...);
    String GetCacheFilePath(...);
    void WriteToDisk(...);
    Stream FindAssetInDiskCache(...);
    IEnumerator DownloadAndCacheAsset(...);
    IEnumerator DownloadAsset(...);
    boolean VerifyCRC(...);
    void CleanAssetBundleCache(...);
    void ClearDiskCache(...);
    void <bundleCache>m__CD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String PokemonAssetName(...);
    /*[05]*/ IBundleRequest RequestAssetBundle(...);
    /*[06]*/ void CleanAssetBundleCache(...);
    /*[07]*/ void ClearDiskCache(...);
}

// Namespace: 
class BundleRequestImpl {
    // Fields:
    String <Name>k__BackingField;
    boolean <IsDone>k__BackingField;
    AssetBundle <AssetBundle>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_Name(...);
    void set_Name(...);
    boolean get_IsDone(...);
    void set_IsDone(...);
    AssetBundle get_AssetBundle(...);
    void set_AssetBundle(...);
    void OnComplete(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ boolean get_IsDone(...);
    /*[06]*/ AssetBundle get_AssetBundle(...);
}

// Namespace: 
class LoadOperation {
    // Fields:
    uint nextOperationId;
    String name;
    AssetRequestPriority priority;
    Generic callbacks;
    uint operationId;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    int CompareTo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Assets
class CRC32 {
    // Fields:
    cmod_reqd CRC32Table;

    // Methods:
    void .cctor(...);
    uint Compute(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ReApplyShaders {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScaleParticles {
    // Fields:
    Generic initialSizes;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void UpdateScale(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Audio
class AudioSourceExt {
    // Methods:
    void PlaySFX(...);
    void PlaySFX(...);
    void PlayUISFX(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Audio
class PlaySFX {
    // Fields:
    AudioClip sound;

    // Methods:
    void .ctor(...);
    void PlaySound(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleCameras {
    // Fields:
    float battleScreenTopDefault;
    float battleScreenBottomDefault;
    cmod_reqd shakeTypes;
    Generic camSequences;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    float WrapAng(...);
    float WrapDeg(...);
    float bezierEase(...);
    void ClearBattleCameras(...);
    void AddBattleCamera(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraShakeType {
    // Fields:
    String name;
    float side_range;
    float up_range;
    float forward_range;
    float time;
    float value_start;
    float rate_start;
    float value_end;
    float rate_end;
    float damp;
    boolean last;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BattleCameraType {
    // Fields:
    String next;
    float posAngY;
    float posAngX;
    float posAngZ;
    float posDist;
    float posHgt;
    float offsAngY;
    float offsAngX;
    float vertCtr;
    float speedIn;
    float speedOut;
    float duration;
    float waitMoveTime;
    float moveTime;
    CameraInterpolation interp;
    CameraTarget camTarget;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class CameraInterpolation {
    // Fields:
    int value__;
    CameraInterpolation CAM_INTERP_CUT = 0;
    CameraInterpolation CAM_INTERP_LINEAR = 1;
    CameraInterpolation CAM_INTERP_SMOOTH = 2;
    CameraInterpolation CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = 3;
    CameraInterpolation CAM_INTERP_DEPENDS = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class CameraTarget {
    // Fields:
    int value__;
    CameraTarget CAM_TARGET_ATTACKER = 0;
    CameraTarget CAM_TARGET_ATTACKER_EDGE = 1;
    CameraTarget CAM_TARGET_ATTACKER_GROUND = 2;
    CameraTarget CAM_TARGET_DEFENDER = 3;
    CameraTarget CAM_TARGET_DEFENDER_EDGE = 4;
    CameraTarget CAM_TARGET_DEFENDER_GROUND = 5;
    CameraTarget CAM_TARGET_ATTACKER_DEFENDER = 6;
    CameraTarget CAM_TARGET_ATTACKER_DEFENDER_EDGE = 7;
    CameraTarget CAM_TARGET_DEFENDER_ATTACKER = 8;
    CameraTarget CAM_TARGET_DEFENDER_ATTACKER_EDGE = 9;
    CameraTarget CAM_TARGET_ATTACKER_DEFENDER_MIRROR = 11;
    CameraTarget CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = 12;
    CameraTarget CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = 13;
    CameraTarget CAM_TARGET_ATTACKER_DEFENDER_WORLD = 14;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class BattleCameraTarget {
    // Fields:
    int pokemonID;
    float angle;
    float scale;
    Vector3 pos;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class CameraBillboard {
    // Fields:
    boolean faceAway;
    Camera lookAtCam;

    // Methods:
    void .ctor(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class CameraExt {
    // Methods:
    void DisableLayer(...);
    void EnableLayer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class CameraRigStack {
    // Fields:
    Generic controllerStack;
    ICameraController EmptyController;
    Camera <MainCamera>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    int get_MapObjectsLayerMask(...);
    int get_MapCharactersLayerMask(...);
    void HideMap(...);
    void ShowMap(...);
    void HideMapCharacters(...);
    void ShowMapCharacters(...);
    Camera get_MainCamera(...);
    void set_MainCamera(...);
    void SetControllingCamera(...);
    void SetLegacyCameraControlsActive(...);
    void PushController(...);
    void PopController(...);
    void ClearControllers(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Camera get_MainCamera(...);
    /*[05]*/ void PushController(...);
    /*[06]*/ void PopController(...);
    /*[07]*/ void ClearControllers(...);
    /*[08]*/ void SetControllingCamera(...);
    /*[09]*/ void HideMap(...);
    /*[10]*/ void ShowMap(...);
    /*[11]*/ void HideMapCharacters(...);
    /*[12]*/ void ShowMapCharacters(...);
}

// Namespace: 
class EmptyCameraController {
    // Methods:
    void .ctor(...);
    void OnStart(...);
    void OnStop(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Holoholo.CameraRig
class SplineCameraController {
    // Fields:
    float animationTime;
    float cameraAnimateT;
    AnimationCurve translationCurve;
    AnimationCurve rotationCurve;
    Action OnComplete;
    ISpline <Path>k__BackingField;
    Vector3 <TargetLookAt>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_OnComplete(...);
    void remove_OnComplete(...);
    ISpline get_Path(...);
    void set_Path(...);
    Vector3 get_TargetLookAt(...);
    void set_TargetLookAt(...);
    ISpline BuildCameraSwoopPath(...);
    void Init(...);
    void OnStart(...);
    void OnStop(...);
    void Reset(...);
    IEnumerator AnimateCamera(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStart(...);
    /*[05]*/ void OnStop(...);
}

// Namespace: Niantic.Procedural
class ISpline {
    // Methods:
    Vector3 PositionSample(...);
    Vector3 ForwardSample(...);
    boolean get_Closed(...);
}

// Namespace: 
class CameraFacingBillboard {
    // Fields:
    float pixelScale;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Idle2Chance {
    // Fields:
    boolean toLand;

    // Methods:
    void .ctor(...);
    void SetToLand(...);
    void OnStateEnter(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnStateEnter(...);
    /*[05]*/ void OnStateUpdate(...);
    /*[06]*/ void OnStateExit(...);
    /*[07]*/ void OnStateMove(...);
    /*[08]*/ void OnStateIK(...);
    /*[09]*/ void OnStateMachineEnter(...);
    /*[10]*/ void OnStateMachineExit(...);
    /*[11]*/ void OnStateEnter(...);
    /*[12]*/ void OnStateUpdate(...);
    /*[13]*/ void OnStateExit(...);
    /*[14]*/ void OnStateMove(...);
    /*[15]*/ void OnStateIK(...);
    /*[16]*/ void OnStateMachineEnter(...);
    /*[17]*/ void OnStateMachineExit(...);
}

// Namespace: 
class AnimAttackEvent {
    // Fields:
    String vfxName;
    int pIdx;
    OnEventEvent EventEvent;

    // Methods:
    void .ctor(...);
    void add_EventEvent(...);
    void remove_EventEvent(...);
    void Awake(...);
    void AttackParticleThis(...);
    void AttackParticleBone_Origin(...);
    void AttackParticleBone_Waist(...);
    void AttackParticleBone_Waist_Head(...);
    void AttackParticleBone_Waist_Neck_Head(...);
    void AttackParticleBone_Waist_Neck3_Head(...);
    void AttackParticleBone_Waist_Spine_Head(...);
    void AttackParticleBone_Waist_Spine2_Head(...);
    void AttackParticleBone_Waist_Spine2_Neck_Head(...);
    void AttackParticleBone_Waist_Spine2_Neck2_Head(...);
    void AttackParticleBone_Waist_Spine2_Neck3_Head(...);
    void AttackParticleBone_Waist_Spine3_Neck2_Head(...);
    void AttackParticleBone_Waist_Spine7_Head(...);
    void AttackParticleBone_Head_Gyarados(...);
    void AttackParticleBone_Waist_RFeelerABC(...);
    void AttackParticleBone_Waist_RHand(...);
    void AttackParticleBone_Waist_RArm_RForeArm_RHand(...);
    void AttackParticleBone_Waist_Spine_RArm_RForeArm_RHand(...);
    void AttackParticleBone_Waist_Spine2_RArm_RForeArm_RHand(...);
    void AttackParticleBone_Waist_Spine_RShoulder_RArm_RForeArm_RHand(...);
    void AttackParticleBone_Waist_Spine2_RShoulder_RArm_RForeArm_RHand(...);
    void AttackParticleBone_Waist_Spine2_RShoulder2_RArm_RForeArm_RHand(...);
    void AttackParticle_MainCamera(...);
    void AttackEvent(...);
    void particleAtChild(...);
    void setUpParticle(...);
    GameObject createParticleFromPrefab(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class OnEventEvent {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class AnimClipEventManager {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AnimEvent {
    // Fields:
    Material copyMat;
    cmod_reqd renderers;

    // Methods:
    void .ctor(...);
    void Start(...);
    void CreateSoundEffect(...);
    void CreateParticle(...);
    void CreateParticleBone_Origin(...);
    void CreateParticleBone_Waist(...);
    void CreateParticleBone_Waist_Head(...);
    void CreateParticleBone_Waist_Spine2_Head(...);
    void CreateParticleBone_Waist_Spine2_Neck_Head(...);
    void CreateParticleBone_Waist_Spine2_Neck2_Head(...);
    void CreateParticleBone_Pokeball(...);
    void CreateParticle_MainCamera(...);
    void particle_at_child(...);
    void SetCharacterColor(...);
    void DisableCharacterColor(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class EyeIrisUV {
    // Fields:
    Transform eyeJoint;
    Transform ltIrisJoint;
    Transform rtIrisJoint;
    Material eyeMat;
    Vector2 offsetNormalMap;
    Vector2 uvOffset;
    Vector2 uvOffsetMask;
    Vector2 uvLIrisOffset;
    Vector2 uvRIrisOffset;
    cmod_reqd renderers;

    // Methods:
    void .ctor(...);
    void Start(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class JointUV {
    // Fields:
    Transform driverJoint;
    Material drivenMat;
    Vector2 offsetNormalMap;
    float uDiv;
    float vDiv;
    Vector2 uvOffset;
    Vector2 uvOffsetMask;
    Vector2 tileBase;
    Vector2 tileMask;
    cmod_reqd renderers;

    // Methods:
    void .ctor(...);
    void Start(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class JointVisibility {
    // Fields:
    Transform driverJoint;
    SkinnedMeshRenderer invisTranslateX;
    SkinnedMeshRenderer visTranslateX;
    SkinnedMeshRenderer visTranslateY;
    SkinnedMeshRenderer visTranslateZ;
    SkinnedMeshRenderer visRotateX;
    SkinnedMeshRenderer visRotateY;
    SkinnedMeshRenderer visRotateZ;
    SkinnedMeshRenderer visScaleX;
    SkinnedMeshRenderer visScaleY;
    SkinnedMeshRenderer visScaleZ;

    // Methods:
    void .ctor(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class MaterialColorProperty {
    // Fields:
    int ID;
    String colorPropertyName;
    Color color;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class IPokemonMaterialLerp {
    // Methods:
    GameObject get_Character(...);
    void set_Character(...);
    float get_Duration(...);
    void set_Duration(...);
    void DoMaterialLerp(...);
}

// Namespace: 
class EmissionPointGroup {
    // Fields:
    int value__;
    EmissionPointGroup None = 0;
    EmissionPointGroup Origin = 1;
    EmissionPointGroup Waist = 2;
    EmissionPointGroup EmitterFX = 4;
    EmissionPointGroup OriginWaist = 3;
    EmissionPointGroup OriginEmitt = 5;
    EmissionPointGroup AllEmitters = 7;
    EmissionPointGroup WaistEmitt = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Assets.Character
class xformToUV_OFFSET {
    // Fields:
    cmod_reqd driverJoints;
    int jointCountOffset;
    Material drivenMat;
    Vector3 uv_Frames;
    Vector2 uv_Step;
    cmod_reqd uvOffSetP;
    MaterialPropertyBlock materialPropertyBlock;
    cmod_reqd materialPropertyID;
    Coroutine uvJointCO;
    cmod_reqd renderers;
    Renderer uvOffsetRenderer;
    cmod_reqd yPosPrev;

    // Methods:
    void .ctor(...);
    void initUVCache(...);
    Vector2 posY_to_UV(...);
    IEnumerator GetDriverJoint_yPOS(...);
    void Start(...);
    void OnEnable(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PlayerIcon {
    // Fields:
    Image playerImage;
    Image teamIcon;
    Image xpBar;
    Color teamColor;
    String teamHexBlue;
    String teamHexRed;
    String teamHexYellow;
    String teamHexNone;
    PlayerAvatarPortrait avatarPortrait;
    IReceipt playerObservationReceipt;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void SetTeamIcon(...);
    void HandlePlayerProtoUpdated(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class RotateCharacter {
    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class AsyncLoadingLRUCache`2 {
    // Fields:
    Generic activeValues;
    Generic lruCache;
    Generic loadingFunction;
    Generic unloadingFunction;
    TaskQueue queue;

    // Methods:
    void .ctor(...);
    Generic Request(...);
    void CancelRequest(...);
    void MaybeUnload(...);
    void <AsyncLoadingLRUCache>m__D5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class TaskQueue {
    // Fields:
    Generic queue;
    int numProcessing;
    int maxConcurrent;
    int sequenceNumber;

    // Methods:
    void .ctor(...);
    void set_MaxConcurrent(...);
    void Start(...);
    TaskHandle Enqueue(...);
    boolean Remove(...);
    TaskHandle ChangePriority(...);
    IEnumerator Process(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TaskHandle {
    // Fields:
    float priority;
    int sequenceNumber;

    // Methods:
    void .ctor(...);
    float get_Priority(...);
    int get_SequenceNumber(...);
    int GetHashCode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ValueContainer`1 {
    // Fields:
    var value;
    TaskHandle taskHandle;
    Generic onLoadedCallbacks;
    boolean loaded;
    boolean evicted;
    int callbackCount;

    // Methods:
    void .ctor(...);
    int AddOnLoadedCallback(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LoadRequestHandle {
    // Fields:
    int handle;

    // Methods:
    void .ctor(...);
    int get_Handle(...);
    int GetHashCode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class InventoryCache {
    // Methods:
    void .ctor(...);
    void RegisterRpcSideChannels(...);
    Request BuildSideChannelRequest(...);
    void handleSideChannelResponse(...);
    HoloInventoryKeyProto ExtractKeyFrom(...);
    InventoryCache Create(...);
    void <BuildSideChannelRequest>m__DC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ HoloInventoryKeyProto ExtractKeyFrom(...);
}

// Namespace: Holoholo.Rpc
class HoloInventoryKeyProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    int ItemFieldNumber = 2;
    int PokedexEntryIdFieldNumber = 3;
    int PlayerStatsFieldNumber = 4;
    int PlayerCurrencyFieldNumber = 5;
    int PlayerCameraFieldNumber = 6;
    int InventoryUpgradesFieldNumber = 7;
    int AppliedItemsFieldNumber = 8;
    int EggIncubatorsFieldNumber = 9;
    int PokemonFamilyIdFieldNumber = 10;
    Generic _parser;
    mvar type_;
    TypeOneofCase typeCase_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    HoloInventoryKeyProto Clone(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    Item get_Item(...);
    void set_Item(...);
    int get_PokedexEntryId(...);
    void set_PokedexEntryId(...);
    boolean get_PlayerStats(...);
    void set_PlayerStats(...);
    boolean get_PlayerCurrency(...);
    void set_PlayerCurrency(...);
    boolean get_PlayerCamera(...);
    void set_PlayerCamera(...);
    boolean get_InventoryUpgrades(...);
    void set_InventoryUpgrades(...);
    boolean get_AppliedItems(...);
    void set_AppliedItems(...);
    boolean get_EggIncubators(...);
    void set_EggIncubators(...);
    int get_PokemonFamilyId(...);
    void set_PokemonFamilyId(...);
    TypeOneofCase get_TypeCase(...);
    void ClearType(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    HoloInventoryKeyProto <_parser>m__DA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ HoloInventoryKeyProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class TypeOneofCase {
    // Fields:
    int value__;
    TypeOneofCase None = 0;
    TypeOneofCase PokemonId = 1;
    TypeOneofCase Item = 2;
    TypeOneofCase PokedexEntryId = 3;
    TypeOneofCase PlayerStats = 4;
    TypeOneofCase PlayerCurrency = 5;
    TypeOneofCase PlayerCamera = 6;
    TypeOneofCase InventoryUpgrades = 7;
    TypeOneofCase AppliedItems = 8;
    TypeOneofCase EggIncubators = 9;
    TypeOneofCase PokemonFamilyId = 10;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Collections
class LRUCache`2 {
    // Fields:
    Generic map;
    Generic onEvict;
    int <Capacity>k__BackingField;

    // Methods:
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    int get_Capacity(...);
    void set_Capacity(...);
    void Add(...);
    void Add(...);
    boolean ContainsKey(...);
    boolean Contains(...);
    boolean TryGetValue(...);
    boolean Remove(...);
    boolean Remove(...);
    void Clear(...);
    void Evict(...);
    void CopyTo(...);
    Generic GetEnumerator(...);
    int get_Count(...);
    boolean get_IsReadOnly(...);
    Generic get_Keys(...);
    Generic get_Values(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ int get_Count(...);
    /*[06]*/ boolean get_IsReadOnly(...);
    /*[07]*/ void Add(...);
    /*[08]*/ void Clear(...);
    /*[09]*/ boolean Contains(...);
    /*[10]*/ void CopyTo(...);
    /*[11]*/ boolean Remove(...);
    /*[12]*/ Generic GetEnumerator(...);
}

// Namespace: Niantic.Holoholo.Collections
class LazyDictionary`2 {
    // Fields:
    Generic items;
    Generic itemsToAdd;
    Generic itemsToRemove;
    Generic onRemoveValue;
    Generic values;

    // Methods:
    void .ctor(...);
    void Add(...);
    void Remove(...);
    void Commit(...);
    Generic get_Values(...);
    int get_Count(...);
    void RemoveInternal(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ValueCollection {
    // Fields:
    Generic source;

    // Methods:
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    void Add(...);
    void Clear(...);
    boolean Contains(...);
    void CopyTo(...);
    boolean Remove(...);
    Generic GetEnumerator(...);
    int get_Count(...);
    boolean get_IsReadOnly(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ int get_Count(...);
    /*[06]*/ boolean get_IsReadOnly(...);
    /*[07]*/ void Add(...);
    /*[08]*/ void Clear(...);
    /*[09]*/ boolean Contains(...);
    /*[10]*/ void CopyTo(...);
    /*[11]*/ boolean Remove(...);
    /*[12]*/ Generic GetEnumerator(...);
}

// Namespace: Niantic.Holoholo.Collections
class LazyDictionaryEntry`1 {
    // Fields:
    var value;
    long version;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class LimitedQueue`1 {
    // Fields:
    int capacity;

    // Methods:
    void .ctor(...);
    void Enqueue(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic System.Collections.Generic.IEnumerable<T>.GetEnumerator(...);
    /*[05]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[06]*/ int get_Count(...);
    /*[07]*/ boolean System.Collections.ICollection.get_IsSynchronized(...);
    /*[08]*/ mvar System.Collections.ICollection.get_SyncRoot(...);
    /*[09]*/ void System.Collections.ICollection.CopyTo(...);
}

// Namespace: Niantic.Holoholo.Collections
class TextLimitedQueue {
    // Methods:
    void .ctor(...);
    String ToString(...);
    void WriteToFile(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic System.Collections.Generic.IEnumerable<T>.GetEnumerator(...);
    /*[05]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[06]*/ int get_Count(...);
    /*[07]*/ boolean System.Collections.ICollection.get_IsSynchronized(...);
    /*[08]*/ mvar System.Collections.ICollection.get_SyncRoot(...);
    /*[09]*/ void System.Collections.ICollection.CopyTo(...);
}

// Namespace: Niantic.Holoholo.Collections
class LinkedHashMap`2 {
    // Fields:
    Generic dict;
    Generic list;
    Generic keyCollection;
    Generic valueCollection;

    // Methods:
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    void Add(...);
    boolean ContainsKey(...);
    boolean Remove(...);
    boolean RemoveFirst(...);
    boolean RemoveLast(...);
    boolean TryGetValue(...);
    void Add(...);
    void Clear(...);
    boolean Contains(...);
    void CopyTo(...);
    boolean Remove(...);
    Generic GetEnumerator(...);
    int get_Count(...);
    boolean get_IsReadOnly(...);
    Generic get_First(...);
    Generic get_Last(...);
    Generic get_Keys(...);
    Generic get_Values(...);
    var get_Item(...);
    void set_Item(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ void Add(...);
    /*[06]*/ boolean ContainsKey(...);
    /*[07]*/ boolean Remove(...);
    /*[08]*/ boolean TryGetValue(...);
    /*[09]*/ var get_Item(...);
    /*[10]*/ void set_Item(...);
    /*[11]*/ Generic get_Keys(...);
    /*[12]*/ Generic get_Values(...);
    /*[13]*/ int get_Count(...);
    /*[14]*/ boolean get_IsReadOnly(...);
    /*[15]*/ void Add(...);
    /*[16]*/ void Clear(...);
    /*[17]*/ boolean Contains(...);
    /*[18]*/ void CopyTo(...);
    /*[19]*/ boolean Remove(...);
    /*[20]*/ Generic GetEnumerator(...);
}

// Namespace: 
class KeyCollection {
    // Methods:
    void .ctor(...);
    Generic GetEnumerator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ int get_Count(...);
    /*[06]*/ boolean get_IsReadOnly(...);
    /*[07]*/ void Add(...);
    /*[08]*/ void Clear(...);
    /*[09]*/ boolean Contains(...);
    /*[10]*/ void CopyTo(...);
    /*[11]*/ boolean Remove(...);
    /*[12]*/ Generic GetEnumerator(...);
    /*[13]*/ Generic GetEnumerator(...);
}

// Namespace: 
class ValueCollection {
    // Methods:
    void .ctor(...);
    Generic GetEnumerator(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ int get_Count(...);
    /*[06]*/ boolean get_IsReadOnly(...);
    /*[07]*/ void Add(...);
    /*[08]*/ void Clear(...);
    /*[09]*/ boolean Contains(...);
    /*[10]*/ void CopyTo(...);
    /*[11]*/ boolean Remove(...);
    /*[12]*/ Generic GetEnumerator(...);
    /*[13]*/ Generic GetEnumerator(...);
}

// Namespace: 
class KeyValueCollectionBase`1 {
    // Fields:
    Generic linkedHashMap;

    // Methods:
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    void Add(...);
    void Clear(...);
    boolean Contains(...);
    void CopyTo(...);
    boolean Remove(...);
    Generic GetEnumerator(...);
    int get_Count(...);
    boolean get_IsReadOnly(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[05]*/ int get_Count(...);
    /*[06]*/ boolean get_IsReadOnly(...);
    /*[07]*/ void Add(...);
    /*[08]*/ void Clear(...);
    /*[09]*/ boolean Contains(...);
    /*[10]*/ void CopyTo(...);
    /*[11]*/ boolean Remove(...);
    /*[12]*/ Generic GetEnumerator(...);
}

// Namespace: Niantic.Holoholo.Collections
class ListQueue`1 {
    // Fields:
    Generic list;

    // Methods:
    void .ctor(...);
    int get_Count(...);
    int get_TailIndex(...);
    void Enqueue(...);
    var Dequeue(...);
    var Peek(...);
    boolean Contains(...);
    boolean Remove(...);
    void Clear(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class ObjectPool {
    // Fields:
    int DEFAULT_CAPACITY = 1000;
    int capacity;
    int count;
    Generic pooledObjects;
    Generic prefabMap;

    // Methods:
    void .ctor(...);
    GameObject Get(...);
    void Recycle(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Collections
class PriorityQueue`1 {
    // Fields:
    Generic heap;
    Generic comparer;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    int get_Count(...);
    boolean get_IsSynchronized(...);
    mvar get_SyncRoot(...);
    void Enqueue(...);
    var Dequeue(...);
    var Peek(...);
    boolean Remove(...);
    boolean RemoveAt(...);
    Generic GetEnumerator(...);
    void CopyTo(...);
    void HeapifyUp(...);
    void HeapifyDown(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ int get_Count(...);
    /*[05]*/ boolean get_IsSynchronized(...);
    /*[06]*/ mvar get_SyncRoot(...);
    /*[07]*/ void CopyTo(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic GetEnumerator(...);
}

// Namespace: Niantic.Collections.QuadTree
class CircleIntersection {
    // Fields:
    float radiusSqr;
    Vector2 <Center>k__BackingField;
    float <Radius>k__BackingField;

    // Methods:
    void .ctor(...);
    Vector2 get_Center(...);
    void set_Center(...);
    float get_Radius(...);
    void set_Radius(...);
    boolean IntersectsPoint(...);
    boolean IntersectsRect(...);
    boolean IntersectsLineSegment(...);
    boolean IntersectsLineSegment(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean IntersectsPoint(...);
    /*[05]*/ boolean IntersectsLineSegment(...);
    /*[06]*/ boolean IntersectsRect(...);
}

// Namespace: Niantic.Collections.QuadTree
class IQuadTreePointElement {
    // Methods:
    Vector2 get_Position(...);
}

// Namespace: Niantic.Collections.QuadTree
class IQuadTreeIntersectionShape {
    // Methods:
    boolean IntersectsPoint(...);
    boolean IntersectsLineSegment(...);
    boolean IntersectsRect(...);
}

// Namespace: Niantic.Collections.QuadTree
class QuadTree`1 {
    // Fields:
    Generic root;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    Generic RecursivelyIterateNodes(...);
    Rect get_Bounds(...);
    Generic get_Nodes(...);
    Generic get_Leaves(...);
    void Insert(...);
    Generic GetIntersectingElements(...);
    boolean <get_Leaves>m__DD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Node`1 {
    // Fields:
    cmod_reqd children;
    cmod_reqd elements;
    int <ElementCount>k__BackingField;
    Rect <Bounds>k__BackingField;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    int get_ElementCount(...);
    void set_ElementCount(...);
    Rect get_Bounds(...);
    void set_Bounds(...);
    boolean get_IsLeaf(...);
    Generic get_Children(...);
    void Subdivide(...);
    void InsertAsLeaf(...);
    Generic GetChildWithLeastPopulation(...);
    void InsertAsNonLeaf(...);
    void Insert(...);
    Generic GetIntersectingElements(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Task {
    // Fields:
    ThreadPriority priority;
    Generic routine;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    IEnumerator Start(...);
    IEnumerator RunAction(...);
    IEnumerator RunAction(...);
    Generic Bind(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator Start(...);
}

// Namespace: 
class PriorityComparer {
    // Methods:
    void .ctor(...);
    int Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ int Compare(...);
}

// Namespace: Niantic.Holoholo.Connectivity
class VersionCheck {
    // Methods:
    void .ctor(...);
    int Compare(...);
    int Order(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ int Compare(...);
}

// Namespace: 
class ConstraintRotation {
    // Fields:
    Transform driver;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class DefenderBonusCollector {
    // Fields:
    Button button;
    Text timeLeftText;
    Image timeLeftFill;
    Text deployedCountLabel;
    II18n i18n;
    IDefenderBonusService defenderBonusService;
    IUserPromptsService userPromptsService;
    GameMasterData gameMaster;
    boolean collected;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnClick(...);
    IEnumerator PeriodicUpdate(...);
    void <OnClick>m__E4(...);
    void <OnClick>m__E5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IDefenderBonusService {
    // Methods:
    boolean get_HasAvailableBonus(...);
    boolean get_HasDeployedPokemon(...);
    int get_NumDeployedPokemon(...);
    long get_TimeToCollect(...);
    String get_TimeLeftString(...);
    float get_PercentOfTimeToCollect(...);
    Generic ClaimBonus(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class BehaviourService {
    // Fields:
    Generic prefabFactory;
    Generic universalFactory;
    IBehaviourService <Instance>k__BackingField;

    // Methods:
    void .ctor(...);
    IBehaviourService get_Instance(...);
    void set_Instance(...);
    cmod_opt GetBehaviour(...);
    cmod_opt GetInstance(...);
    void Awake(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_opt GetBehaviour(...);
    /*[05]*/ cmod_opt GetInstance(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstallPrefabAttribute {
    // Fields:
    cmod_reqd <BindingTypes>k__BackingField;
    boolean <Transient>k__BackingField;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    cmod_reqd get_BindingTypes(...);
    void set_BindingTypes(...);
    boolean get_Transient(...);
    void set_Transient(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstallPrefabFactoryAttribute {
    // Fields:
    Type <FactoryType>k__BackingField;

    // Methods:
    void .ctor(...);
    Type get_FactoryType(...);
    void set_FactoryType(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstalledPrefabFactory {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstalledPrefabFactory`1 {
    // Fields:
    DiContainer container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstalledPrefabFactory`2 {
    // Fields:
    DiContainer container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstalledPrefabFactory`3 {
    // Fields:
    DiContainer container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class InstalledPrefabFactory`4 {
    // Fields:
    DiContainer container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class DiContainerExt {
    // Methods:
    BindingConditionSetter BindGameObjectFactory(...);
    cmod_opt InstantiatePrefab(...);
    void BindAllPrefabInstalledDependencies(...);
    Generic IteratePrefabDependencies(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PrefabDependency {
    // Fields:
    MonoBehaviour <Reference>k__BackingField;
    cmod_reqd <BindingTypes>k__BackingField;
    boolean <Transient>k__BackingField;
    Type <FactoryType>k__BackingField;
    boolean <InstalledFactory>k__BackingField;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    MonoBehaviour get_Reference(...);
    void set_Reference(...);
    cmod_reqd get_BindingTypes(...);
    void set_BindingTypes(...);
    boolean get_Transient(...);
    void set_Transient(...);
    Type get_FactoryType(...);
    void set_FactoryType(...);
    boolean get_InstalledFactory(...);
    void set_InstalledFactory(...);
    void InstallFactory(...);
    String ToString(...);
    String <ToString>m__E7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class FactoryBinderExt {
    // Methods:
    BindingConditionSetter ToPrefab(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class GenericBinderExt {
    // Methods:
    BindingConditionSetter ToTransientPrefab(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class IRootGameState {
}

// Namespace: Niantic.Holoholo.DependencyInjection
class UnknownRefException {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class HoloholoInstaller {
    // Fields:
    GameState rootStatePrefab;
    SpriteLookup spriteLookupPrefab;
    SoundController soundControllerPrefab;
    ArService arServicePrefab;
    ButtonReactiveFX buttonFxPrefab;
    ScreenTransitionFX screenTransitionFxPrefab;
    IapService iapServicePrefab;
    AuthenticationService authenticationServicePrefab;
    NianticPlugin pluginInstance;

    // Methods:
    void .ctor(...);
    void Awake(...);
    GameObject PrefabFactoryImpl(...);
    mvar UniversalFactoryImpl(...);
    NianticPlugin get_PlatformPlugin(...);
    void InstallBindings(...);
    IRootGameState <InstallBindings>m__E8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
    /*[08]*/ void InstallBindings(...);
}

// Namespace: Niantic.Holoholo.UI
class ButtonReactiveFX {
    // Fields:
    RectTransform rect;

    // Methods:
    void .ctor(...);
    void DestroySelf(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class ScreenTransitionFX {
    // Fields:
    Animator animator;

    // Methods:
    void .ctor(...);
    void DestroySelf(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IapService {
    // Fields:
    String POKECOIN_CURRENCY_TYPE = "POKECOIN";
    String STARDUST_CURRENCY_TYPE = "STARDUST";
    String CATEGORY_PRESENTATION_TYPE = "CATEGORY";
    String SORT_PRESENTATION_TYPE = "SORT";
    String POKECOIN_CATEGORY = "POKECOINS";
    String UPGRADE_CATEGORY = "UPGRADES";
    String ITEMS_CATEGORY = "ITEMS";
    String POKE_BALL_ITEM = "ITEM_POKE_BALL";
    String GREAT_BALL_ITEM = "ITEM_GREAT_BALL";
    String ULTRA_BALL_ITEM = "ITEM_ULTRA_BALL";
    String MASTER_BALL_ITEM = "ITEM_MASTER_BALL";
    String POTION_ITEM = "ITEM_POTION";
    String SUPER_POTION_ITEM = "ITEM_SUPER_POTION";
    String HYPER_POTION_ITEM = "ITEM_HYPER_POTION";
    String MAX_POTION_ITEM = "ITEM_MAX_POTION";
    String REVIVE_ITEM = "ITEM_REVIVE";
    String MAX_REVIVE_ITEM = "ITEM_MAX_REVIVE";
    String LUCKY_EGG_ITEM = "ITEM_LUCKY_EGG";
    String INCENSE_ORDINARY_ITEM = "ITEM_INCENSE_ORDINARY";
    String INCENSE_SPICY_ITEM = "ITEM_INCENSE_SPICY";
    String INCENSE_COOL_ITEM = "ITEM_INCENSE_COOL";
    String INCENSE_FLORAL_ITEM = "ITEM_INCENSE_FLORAL";
    String TROY_DISK_ITEM = "ITEM_TROY_DISK";
    String RAZZ_BERRY_ITEM = "ITEM_RAZZ_BERRY";
    String BLUK_BERRY_ITEM = "ITEM_BLUK_BERRY";
    String NANAB_BERRY_ITEM = "ITEM_NANAB_BERRY";
    String WEPAR_BERRY_ITEM = "ITEM_WEPAR_BERRY";
    String PINAP_BERRY_ITEM = "ITEM_PINAP_BERRY";
    String INCUBATOR_BASIC_ITEM = "ITEM_INCUBATOR_BASIC";
    String INCBUATOR_BASIC_UNLIMITED_ITEM = "ITEM_INCUBATOR_BASIC_UNLIMITED";
    String POKEMON_STORAGE_UPGRADE_ITEM = "ITEM_POKEMON_STORAGE_UPGRADE";
    String ITEM_STORAGE_UPGRADE_ITEM = "ITEM_ITEM_STORAGE_UPGRADE";
    float IAP_REFRESH_TIME = 15.000000;
    float pollInterval;
    GameMasterData gameMasterData;
    IRpcHandler rpcHandler;
    IapState iapState;
    Generic iapItems;
    Generic upsightDict;
    Generic onSingleRefresh;
    Coroutine singleRefreshCoroutine;
    int lastServerCoins;
    boolean hasCheckedDailyBonus;
    boolean onHold;
    Generic <>f__am$cacheB;
    Generic <>f__am$cacheC;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__switch$map3;
    Generic <>f__switch$map4;
    Generic <>f__switch$map5;
    Generic <>f__switch$map6;

    // Methods:
    void .ctor(...);
    Generic get_IapItems(...);
    int get_Coins(...);
    void set_Coins(...);
    int get_Stardusts(...);
    boolean get_DailyBonusReady(...);
    void Initialize(...);
    void OnStoreRefresh(...);
    void Refresh(...);
    IEnumerator RunSingleRefresh(...);
    Generic Buy(...);
    IEnumerator BuyProcess(...);
    void RecordPurchaseAnalytics(...);
    void HoldObserver(...);
    void ReleaseObserver(...);
    void AddCoins(...);
    IEnumerator ProcessEvents(...);
    Generic CheckDailyBonus(...);
    CurrencyType StringToCurrency(...);
    PresentationType StringToPresentationType(...);
    HoloIapItemCategory StringToCategory(...);
    Item StringToItemType(...);
    boolean <get_Coins>m__280(...);
    boolean <get_Stardusts>m__281(...);
    String <OnStoreRefresh>m__282(...);
    int <OnStoreRefresh>m__285(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ void OnStoreRefresh(...);
    /*[07]*/ Generic get_IapItems(...);
    /*[08]*/ int get_Coins(...);
    /*[09]*/ int get_Stardusts(...);
    /*[10]*/ boolean get_DailyBonusReady(...);
    /*[11]*/ void Refresh(...);
    /*[12]*/ Generic Buy(...);
    /*[13]*/ Generic CheckDailyBonus(...);
    /*[14]*/ void HoldObserver(...);
    /*[15]*/ void ReleaseObserver(...);
    /*[16]*/ void AddCoins(...);
    /*[17]*/ IReceipt Observe(...);
}

// Namespace: NianticLabs.Platform
class IapState {
    // Fields:
    int value__;
    IapState UNDEFINED = 0;
    IapState INITIALIZING = 1;
    IapState TRANSACTION_IN_PROGRESS = 2;
    IapState READY = 3;
    IapState REFRESHING_STORE_STATE = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Storefront
class PresentationType {
    // Fields:
    int value__;
    PresentationType UNKNOWN = 0;
    PresentationType CATEGORY = 1;
    PresentationType SORT = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Auth
class AuthenticationService {
    // Fields:
    String ProviderAuthTokenKey = "60b01025-c1ea-422c-9b0e-d70bf489de7f";
    String FirstTimeAuthCompletedKey = "e12a216a-121e-11e6-a148-3e1d05defe78";
    String TrackingDisabledKey = "b7cde183-53c5-416e-9814-43d911e70b7f";
    String clientId;
    String clientSecret;
    String debugServerHost;
    String nightlyServerHost;
    String dogfoodServerHost;
    String releaseServerHost;
    String releaseQaServerHost;
    int minimumTrackingAge;
    IRpcHandler rpcHandler;
    Coroutine connectionRoutine;
    AuthenticationResults connectionResults;
    Generic connectionPromise;
    TokenManager tokenManager;
    AuthEvent currentAuthState;
    boolean currentUserUnderMinimumMarketingAge;
    Generic AuthorizationRevoked;
    boolean <IsConnected>k__BackingField;
    Generic <>f__switch$map1;
    Generic <>f__switch$map2;

    // Methods:
    void .ctor(...);
    void add_AuthorizationRevoked(...);
    void remove_AuthorizationRevoked(...);
    boolean get_IsConnected(...);
    void set_IsConnected(...);
    boolean get_CachedAuthTokenExists(...);
    AuthTokenProvider get_CachedAuthTokenProvider(...);
    boolean get_FirstTimeAuthCompleted(...);
    void set_FirstTimeAuthCompleted(...);
    boolean get_TrackingDisabled(...);
    void set_TrackingDisabled(...);
    boolean get_UserAboveMinimumMarketingAge(...);
    String get_CachedAuthTokenProviderId(...);
    void set_CachedAuthTokenProviderId(...);
    String get_ServerHost(...);
    void OnDisable(...);
    Generic AttemptGoogleLogin(...);
    Generic AttemptGoogleLogin(...);
    Generic AttemptPtcLogin(...);
    Generic AttemptPtcLogin(...);
    Generic AttemptCachedLogin(...);
    void CancelPendingConnection(...);
    void SignOut(...);
    void RevokeAuthentication(...);
    void DebugClearData(...);
    IEnumerator RunAuthentication(...);
    void InitializeTokenManager(...);
    IEnumerator RunInitialPtcLogin(...);
    void PtcExceptionHandler(...);
    void HandleAuthEvents(...);
    void OptOutOfTracking(...);
    boolean BirthdateUnderMinimumTrackingAge(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_AuthorizationRevoked(...);
    /*[05]*/ void remove_AuthorizationRevoked(...);
    /*[06]*/ boolean get_CachedAuthTokenExists(...);
    /*[07]*/ AuthTokenProvider get_CachedAuthTokenProvider(...);
    /*[08]*/ boolean get_FirstTimeAuthCompleted(...);
    /*[09]*/ boolean get_TrackingDisabled(...);
    /*[10]*/ boolean get_UserAboveMinimumMarketingAge(...);
    /*[11]*/ boolean get_IsConnected(...);
    /*[12]*/ Generic AttemptGoogleLogin(...);
    /*[13]*/ Generic AttemptPtcLogin(...);
    /*[14]*/ Generic AttemptCachedLogin(...);
    /*[15]*/ void CancelPendingConnection(...);
    /*[16]*/ void SignOut(...);
    /*[17]*/ void DebugClearData(...);
}

// Namespace: Niantic.Holoholo.Auth
class AuthenticationResults {
    // Fields:
    String ErrorMessage;
    String RedirectUrl;
    boolean ShowServerLockout;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Auth
class TokenManager {
    // Fields:
    String serverHostPort;
    ITokenSource tokenSource;
    boolean started;
    boolean refreshingToken;
    boolean tokenSourceHasStaleCachedToken;
    IMessage token;
    InternalState state;
    AuthEventHandler AuthEvents;

    // Methods:
    void .ctor(...);
    void Finalize(...);
    void add_AuthEvents(...);
    void remove_AuthEvents(...);
    void Start(...);
    void Stop(...);
    void Dispose(...);
    void GetTokenCallback(...);
    void ChannelAuthEventCallback(...);
    void NotifyAuthEvents(...);
    void HandleEvent(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: NianticLabs.Auth
class ITokenSource {
    // Methods:
    String get_AuthenticationProviderId(...);
    void GetToken(...);
    void RefreshToken(...);
    void ClearToken(...);
}

// Namespace: 
class InternalState {
    // Fields:
    int value__;
    InternalState NO_TOKEN = 0;
    InternalState STOPPING = 1;
    InternalState GETTING_NEW_TOKEN = 2;
    InternalState REFRESHING_TOKEN = 3;
    InternalState SETTING_TOKEN = 4;
    InternalState AUTHORIZED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class AuthEventHandler {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class AuthEvent {
    // Fields:
    int value__;
    AuthEvent UNAUTHORIZED = 0;
    AuthEvent AUTHORIZATION_PENDING = 1;
    AuthEvent AUTHORIZED = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class HoloholoBootstrap {
    // Methods:
    void .ctor(...);
    void Initialize(...);
    void BootstrapGame(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class FieldInfoExt {
    // Methods:
    boolean HasAttribute(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class UniversalFactoryExt {
    // Methods:
    cmod_opt GetInstance(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.DependencyInjection
class PrefabFactory {
    // Methods:
    cmod_opt Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class BlacklistedGameObject {
    // Fields:
    cmod_reqd removeForDevices;
    cmod_reqd removeForPlatforms;

    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PlatformAvailablity {
    // Fields:
    int value__;
    PlatformAvailablity None = 0;
    PlatformAvailablity iOS = 1;
    PlatformAvailablity Android = 2;
    PlatformAvailablity Editor = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Encounter
class FullscreenQuad {
    // Fields:
    float planeDistance;
    boolean keepAspectRatio;
    float aspectRatio;

    // Methods:
    void .ctor(...);
    boolean get_KeepAspectRatio(...);
    void set_KeepAspectRatio(...);
    float get_AspectRatio(...);
    void set_AspectRatio(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScoreData {
    // Fields:
    int exp;
    String detail;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScreenShotHUD {
    // Methods:
    void .ctor(...);
    void Update(...);
    void ToggleSnapshotMode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ShadowTarget {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.FX
class MovieFrameMaterial {
    // Fields:
    float frameRate;
    cmod_reqd frames;
    Material targetMaterial;
    Material <AnimatedMaterial>k__BackingField;

    // Methods:
    void .ctor(...);
    Material get_AnimatedMaterial(...);
    void set_AnimatedMaterial(...);
    void Awake(...);
    IEnumerator Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Filters
class BilateralFilter {
    // Fields:
    float DELTA_TIME_STEP = 0.050000;
    int FILTER_STEPS = 100;
    float filteringTime;
    cmod_reqd inputBuffer;
    int bufferIndex;
    float <SigmaS>k__BackingField;
    float <SigmaR>k__BackingField;

    // Methods:
    void .ctor(...);
    float get_SigmaS(...);
    void set_SigmaS(...);
    float get_SigmaR(...);
    void set_SigmaR(...);
    float Filter(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FlameLight {
    // Fields:
    Light flameLight;
    float intensity;
    float range;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class IPromise`1 {
    // Methods:
    Generic When(...);
    Generic Then(...);
    Generic Then(...);
    Generic Error(...);
    Generic Finally(...);
    CustomYieldInstruction get_Yield(...);
}

// Namespace: Niantic.Holoholo
class IPromise`2 {
    // Methods:
    Generic When(...);
    Generic Then(...);
    Generic Error(...);
    Generic Finally(...);
    CustomYieldInstruction get_Yield(...);
}

// Namespace: Niantic.Holoholo
class Promise`1 {
    // Fields:
    Generic whenFuncs;
    Action thenFuncs;
    Generic thenPayloadFuncs;
    Generic errorFuncs;
    Action finallyFuncs;
    boolean completeCalled;
    boolean errorCalled;
    var completedValue;
    String errorValue;

    // Methods:
    void .ctor(...);
    boolean get_Completed(...);
    void Complete(...);
    void Error(...);
    Generic Error(...);
    Generic Then(...);
    Generic Then(...);
    Generic When(...);
    Generic Finally(...);
    CustomYieldInstruction get_Yield(...);
    boolean <get_Yield>m__EB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic When(...);
    /*[05]*/ Generic Then(...);
    /*[06]*/ Generic Then(...);
    /*[07]*/ Generic Error(...);
    /*[08]*/ Generic Finally(...);
    /*[09]*/ CustomYieldInstruction get_Yield(...);
}

// Namespace: Niantic.Holoholo
class Promise`2 {
    // Fields:
    Generic whenFuncs;
    Generic errorFuncs;
    Generic thenFuncs;
    Action finallyFuncs;
    boolean completeCalled;
    boolean errorCalled;
    var completedValue;
    String errorValue;
    var returnedValue;

    // Methods:
    void .ctor(...);
    boolean get_Completed(...);
    void Complete(...);
    void Error(...);
    Generic Error(...);
    Generic Then(...);
    Generic When(...);
    Generic Finally(...);
    CustomYieldInstruction get_Yield(...);
    boolean <get_Yield>m__EC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic When(...);
    /*[05]*/ Generic Then(...);
    /*[06]*/ Generic Error(...);
    /*[07]*/ Generic Finally(...);
    /*[08]*/ CustomYieldInstruction get_Yield(...);
}

// Namespace: Niantic.Holoholo
class Receipt {
    // Fields:
    Receipt Empty;
    Action onComplete;
    Action <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Complete(...);
    void <Empty>m__ED(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Complete(...);
}

// Namespace: Niantic.Functional
class Sequences {
    // Methods:
    Generic Zip(...);
    Generic Map(...);
    Generic Map(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class Tuple {
    // Methods:
    Generic Make(...);
    Generic Make(...);
    Generic Make(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class Tuple`2 {
    // Fields:
    var <First>k__BackingField;
    var <Second>k__BackingField;

    // Methods:
    void .ctor(...);
    var get_First(...);
    void set_First(...);
    var get_Second(...);
    void set_Second(...);
    void Swap(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class Tuple`3 {
    // Fields:
    var <First>k__BackingField;
    var <Second>k__BackingField;
    var <Third>k__BackingField;

    // Methods:
    void .ctor(...);
    var get_First(...);
    void set_First(...);
    var get_Second(...);
    void set_Second(...);
    var get_Third(...);
    void set_Third(...);
    void Swap(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class Tuple`4 {
    // Fields:
    var <First>k__BackingField;
    var <Second>k__BackingField;
    var <Third>k__BackingField;
    var <Fourth>k__BackingField;

    // Methods:
    void .ctor(...);
    var get_First(...);
    void set_First(...);
    var get_Second(...);
    void set_Second(...);
    var get_Third(...);
    void set_Third(...);
    var get_Fourth(...);
    void set_Fourth(...);
    void Swap(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FxSlowMo {
    // Fields:
    float normal_speed;
    float quarter_speed;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CloudUrlEntry {
    // Fields:
    String url;
    DateTime retrieved;
    Generic onCloudUrlResolvedCallbacks;
    boolean rpcInFlight;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class BootSceneLoader {
    // Fields:
    String bootSceneName;

    // Methods:
    void .ctor(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraHelper {
    // Methods:
    float Wrap(...);
    float WrapAng(...);
    float TanToAbsCos(...);
    float Square(...);
    Vector3 ThreePlaneIntesect(...);
    Vector3 SeePokemon(...);
    Vector3 SeeNPokemon(...);
    Vector3 SeeTwoPokemon(...);
    Vector3 SeeSpheresAndDiscs(...);
    boolean OrbitalFocus(...);
    CameraTransform Blend(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SmoothParams {
    // Fields:
    float maxAcceleration;
    float maxSpeed;
    float gain;
    float damp;
    float minValue;
    float maxValue;
    boolean wrapValue;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Sphere3 {
    // Fields:
    Vector3 p;
    float r;

    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Disc3 {
    // Fields:
    Vector3 p;
    Vector3 n;
    float r;

    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FovSide {
    // Fields:
    int value__;
    FovSide UP = 0;
    FovSide DOWN = 1;
    FovSide LEFT = 2;
    FovSide RIGHT = 3;
    FovSide NUM_SIDES = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class TargetIDPos {
    // Fields:
    int pidx;
    float scale;
    Vector3 pos;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CameraRaycast {
    // Methods:
    void .ctor(...);
    void Start(...);
    void Raycast(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CurrentBundleVersion {
    // Fields:
    String version;
    uint iversion;

    // Methods:
    void .cctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DisableOnStart {
    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class HoloGesture {
    // Fields:
    int value__;
    HoloGesture None = 0;
    HoloGesture GestureRight = 1;
    HoloGesture GestureLeft = 2;
    HoloGesture GestureUp = 3;
    HoloGesture GestureDown = 4;
    HoloGesture _MAX = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class EventMgr {
    // Fields:
    OnGesture EventGesture;

    // Methods:
    void .ctor(...);
    void add_EventGesture(...);
    void remove_EventGesture(...);
    void BroadcastGesture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class OnGesture {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class Floater {
    // Fields:
    float bobCycleDuration;
    float bobHeight;
    float yCycleDuration;
    float yTwistDegrees;
    float zCycleDuration;
    float zTwistDegrees;
    float bottom;
    float PI_2;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Awake(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokemonEvolution {
    // Fields:
    HoloPokemonId uniqueId;
    int generation;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class GameMasterDataLoadException {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: 
class HoloEntryPoint {
    // Fields:
    Generic upsightDict;

    // Methods:
    void .ctor(...);
    int GetAssetDigest(...);
    int GetDownloadURL(...);
    int GetGameMasterClientTemplates(...);
    int GetRemoteConfigVersions(...);
    int SetAvatar(...);
    int MarkTutorialComplete(...);
    int FortDetails(...);
    int FortSearch(...);
    int Encounter(...);
    int GetMapObjects(...);
    int ClaimCodename(...);
    int GetGymDetails(...);
    int Send(...);
    int Send(...);
    cmod_opt Parse(...);
    Generic Send(...);
    IReceipt RegisterSideChannel(...);
    void RecordItemUsage(...);
    cmod_opt <Parse`1>m__101(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Send(...);
    /*[05]*/ IReceipt RegisterSideChannel(...);
    /*[06]*/ int GetAssetDigest(...);
    /*[07]*/ int GetDownloadURL(...);
    /*[08]*/ int GetGameMasterClientTemplates(...);
    /*[09]*/ int GetRemoteConfigVersions(...);
    /*[10]*/ int SetAvatar(...);
    /*[11]*/ int MarkTutorialComplete(...);
    /*[12]*/ int FortDetails(...);
    /*[13]*/ int FortSearch(...);
    /*[14]*/ int Encounter(...);
    /*[15]*/ int GetMapObjects(...);
    /*[16]*/ int ClaimCodename(...);
    /*[17]*/ int GetGymDetails(...);
}

// Namespace: 
class HoloLang {
    // Fields:
    II18n i18nCache;

    // Methods:
    II18n get_i18n(...);
    boolean HasString(...);
    String Localized(...);
    String Localized_BadgeName(...);
    String Localized_PokemonName(...);
    String Localized_PokemonName(...);
    String Localized_PokemonCategory(...);
    String Localized_PokemonCategory(...);
    String Localized_PokemonDesc(...);
    String Localized_PokemonDesc(...);
    String Localized_PokemonType(...);
    String Localized_PokemonType(...);
    String Localized_PokemonMoveName(...);
    String Localized_PokemonMoveDesc(...);
    String Localized_PokemonMoveName(...);
    String Localized_PokemonMoveDesc(...);
    String Localized_ItemName(...);
    String Localized_ItemDesc(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MathUtil {
    // Methods:
    void .ctor(...);
    Vector3 GetTranslationFromMatrix(...);
    Quaternion GetRotationFromMatrix(...);
    Vector3 GetScaleFromMatrix(...);
    void SetTransformFromMatrix(...);
    Vector3 ScreenToWorldPoint(...);
    Ray ScreenPointToRay(...);
    boolean ContainsAngleDeg(...);
    float Angle360(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PlayerService {
    // Fields:
    PlayerInfo cachedPlayerInfo;
    InventoryCache inventory;
    ulong currentPokemon;
    int currentPokeball;
    Generic eggHatchList;
    Generic badgeAwardList;
    boolean leveledUp;
    LevelUpRewardsOutProto cachedLevelUpRewards;
    IRpcHandler rpcHandler;
    GameMasterData gameMaster;
    PlayerService instance;
    boolean <InfinitePokeballs>k__BackingField;
    IPokemonBag <PokemonBag>k__BackingField;
    IPokedex <Pokedex>k__BackingField;
    IItemBag <ItemBag>k__BackingField;
    Generic <>f__am$cacheF;
    Generic <>f__am$cache10;

    // Methods:
    void .ctor(...);
    PlayerInfo get_CachedPlayerInfo(...);
    PlayerStatsProto get_PlayerStats(...);
    InventoryCache get_InventoryCache(...);
    PlayerService get_Instance(...);
    void InitializeInstance(...);
    void Initialize(...);
    void RegisterInventorySideChannel(...);
    void RegisterEggHatchSideChannel(...);
    Request eggHatchSideChannelRequest(...);
    void HandleEggHatchSideChannelResponse(...);
    boolean EggsReadyToHatch(...);
    GetHatchedEggsOutProto PopHatchedEgg(...);
    void RegisterBadgeSideChannel(...);
    Request BadgeSideChannelRequest(...);
    void HandleBadgeSideChannelResponse(...);
    boolean BadgesReadyToShow(...);
    void ProcessBadges(...);
    int GetCandyCountForPokemon(...);
    int GetCandyCountForPokemonFamily(...);
    ClientPlayerProto GetPlayerProfile(...);
    String GetPlayerName(...);
    void SetPlayerName(...);
    int GetPlayerTeam(...);
    Generic SetPlayerTeam(...);
    int GetPlayerAvatar(...);
    PlayerAvatarProto get_PlayerAvatarData(...);
    boolean GetPlayerTutorialComplete(...);
    Generic RequestPlayerFromServer(...);
    void GetPlayerCallback(...);
    void SetCurrentPokeball(...);
    boolean get_InfinitePokeballs(...);
    void set_InfinitePokeballs(...);
    PokemonProto get_CurrentPokemon(...);
    ItemProto get_CurrentPokeball(...);
    void SetFirstPokemon(...);
    void SetCurrentPokemon(...);
    void SetCurrentPokemonByPokemonId(...);
    IPokemonBag get_PokemonBag(...);
    void set_PokemonBag(...);
    IPokedex get_Pokedex(...);
    void set_Pokedex(...);
    IItemBag get_ItemBag(...);
    void set_ItemBag(...);
    int get_MaxItems(...);
    int get_MaxPokemon(...);
    Generic get_AppliedItems(...);
    Generic get_Incubators(...);
    EggIncubatorProto GetIncubator(...);
    boolean TryGetLevelUpRewards(...);
    void RequestLevelUpRewards(...);
    InventoryCache GetInventoryCacheForDebug(...);
    long GetNextDailyBonusMs(...);
    long GetNextDefenderBonusMs(...);
    ContactSettingsProto GetContactSettings(...);
    IPromise ToggleEmailMarketing(...);
    void HandleOnFullInventoryUpdate(...);
    void HandleOnInventoryUpdate(...);
    void LogInventoryUpdate(...);
    void <eggHatchSideChannelRequest>m__106(...);
    void <BadgeSideChannelRequest>m__107(...);
    void <RequestLevelUpRewards>m__10A(...);
    boolean <HandleOnFullInventoryUpdate>m__10C(...);
    boolean <HandleOnInventoryUpdate>m__10D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
}

// Namespace: 
class PlayerInfo {
    // Fields:
    ClientPlayerProto PlayerProto;
    PlayerStatsProto PlayerStats;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class ClientPlayerProto {
    // Fields:
    int CreationTimeMsFieldNumber = 1;
    int NameFieldNumber = 2;
    int TeamFieldNumber = 5;
    int TutorialCompleteFieldNumber = 7;
    int PlayerAvatarProtoFieldNumber = 8;
    int MaxPokemonStorageFieldNumber = 9;
    int MaxItemStorageFieldNumber = 10;
    int DailyBonusProtoFieldNumber = 11;
    int EquippedBadgeProtoFieldNumber = 12;
    int ContactSettingsProtoFieldNumber = 13;
    int CurrencyBalanceFieldNumber = 14;
    Generic _parser;
    long creationTimeMs_;
    String name_;
    int team_;
    Generic _repeated_tutorialComplete_codec;
    Generic tutorialComplete_;
    PlayerAvatarProto playerAvatarProto_;
    int maxPokemonStorage_;
    int maxItemStorage_;
    DailyBonusProto dailyBonusProto_;
    EquippedBadgeProto equippedBadgeProto_;
    ContactSettingsProto contactSettingsProto_;
    Generic _repeated_currencyBalance_codec;
    Generic currencyBalance_;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;
    Generic <>f__am$cache10;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ClientPlayerProto Clone(...);
    long get_CreationTimeMs(...);
    void set_CreationTimeMs(...);
    String get_Name(...);
    void set_Name(...);
    int get_Team(...);
    void set_Team(...);
    Generic get_TutorialComplete(...);
    PlayerAvatarProto get_PlayerAvatarProto(...);
    void set_PlayerAvatarProto(...);
    int get_MaxPokemonStorage(...);
    void set_MaxPokemonStorage(...);
    int get_MaxItemStorage(...);
    void set_MaxItemStorage(...);
    DailyBonusProto get_DailyBonusProto(...);
    void set_DailyBonusProto(...);
    EquippedBadgeProto get_EquippedBadgeProto(...);
    void set_EquippedBadgeProto(...);
    ContactSettingsProto get_ContactSettingsProto(...);
    void set_ContactSettingsProto(...);
    Generic get_CurrencyBalance(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ClientPlayerProto <_parser>m__1BA(...);
    int <_repeated_tutorialComplete_codec>m__1BB(...);
    TutorialCompletion <_repeated_tutorialComplete_codec>m__1BC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ClientPlayerProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DailyBonusProto {
    // Fields:
    int NextCollectTimestampMsFieldNumber = 1;
    int NextDefenderBonusCollectTimestampMsFieldNumber = 2;
    Generic _parser;
    long nextCollectTimestampMs_;
    long nextDefenderBonusCollectTimestampMs_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DailyBonusProto Clone(...);
    long get_NextCollectTimestampMs(...);
    void set_NextCollectTimestampMs(...);
    long get_NextDefenderBonusCollectTimestampMs(...);
    void set_NextDefenderBonusCollectTimestampMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DailyBonusProto <_parser>m__1BF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DailyBonusProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EquippedBadgeProto {
    // Fields:
    int EquippedBadgeFieldNumber = 1;
    int LevelFieldNumber = 2;
    int NextEquipChangeAllowedTimestampMsFieldNumber = 3;
    Generic _parser;
    HoloBadgeType equippedBadge_;
    int level_;
    long nextEquipChangeAllowedTimestampMs_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EquippedBadgeProto Clone(...);
    HoloBadgeType get_EquippedBadge(...);
    void set_EquippedBadge(...);
    int get_Level(...);
    void set_Level(...);
    long get_NextEquipChangeAllowedTimestampMs(...);
    void set_NextEquipChangeAllowedTimestampMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EquippedBadgeProto <_parser>m__1C0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EquippedBadgeProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ContactSettingsProto {
    // Fields:
    int SendMarketingEmailsFieldNumber = 1;
    int SendPushNotificationsFieldNumber = 2;
    Generic _parser;
    boolean sendMarketingEmails_;
    boolean sendPushNotifications_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ContactSettingsProto Clone(...);
    boolean get_SendMarketingEmails(...);
    void set_SendMarketingEmails(...);
    boolean get_SendPushNotifications(...);
    void set_SendPushNotifications(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ContactSettingsProto <_parser>m__1BE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ContactSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TutorialCompletion {
    // Fields:
    int value__;
    TutorialCompletion LEGAL_SCREEN = 0;
    TutorialCompletion AVATAR_SELECTION = 1;
    TutorialCompletion ACCOUNT_CREATION = 2;
    TutorialCompletion POKEMON_CAPTURE = 3;
    TutorialCompletion NAME_SELECTION = 4;
    TutorialCompletion POKEMON_BERRY = 5;
    TutorialCompletion USE_ITEM = 6;
    TutorialCompletion FIRST_TIME_EXPERIENCE_COMPLETE = 7;
    TutorialCompletion POKESTOP_TUTORIAL = 8;
    TutorialCompletion GYM_TUTORIAL = 9;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PlayerStatsProto {
    // Fields:
    int LevelFieldNumber = 1;
    int ExperienceFieldNumber = 2;
    int PrevLevelExpFieldNumber = 3;
    int NextLevelExpFieldNumber = 4;
    int KmWalkedFieldNumber = 5;
    int NumPokemonEncounteredFieldNumber = 6;
    int NumUniquePokedexEntriesFieldNumber = 7;
    int NumPokemonCapturedFieldNumber = 8;
    int NumEvolutionsFieldNumber = 9;
    int PokeStopVisitsFieldNumber = 10;
    int NumberOfPokeballThrownFieldNumber = 11;
    int NumEggsHatchedFieldNumber = 12;
    int BigMagikarpCaughtFieldNumber = 13;
    int NumBattleAttackWonFieldNumber = 14;
    int NumBattleAttackTotalFieldNumber = 15;
    int NumBattleDefendedWonFieldNumber = 16;
    int NumBattleTrainingWonFieldNumber = 17;
    int NumBattleTrainingTotalFieldNumber = 18;
    int PrestigeRaisedTotalFieldNumber = 19;
    int PrestigeDroppedTotalFieldNumber = 20;
    int NumPokemonDeployedFieldNumber = 21;
    int NumPokemonCaughtByTypeFieldNumber = 22;
    int SmallRattataCaughtFieldNumber = 23;
    Generic _parser;
    int level_;
    long experience_;
    long prevLevelExp_;
    long nextLevelExp_;
    float kmWalked_;
    int numPokemonEncountered_;
    int numUniquePokedexEntries_;
    int numPokemonCaptured_;
    int numEvolutions_;
    int pokeStopVisits_;
    int numberOfPokeballThrown_;
    int numEggsHatched_;
    int bigMagikarpCaught_;
    int numBattleAttackWon_;
    int numBattleAttackTotal_;
    int numBattleDefendedWon_;
    int numBattleTrainingWon_;
    int numBattleTrainingTotal_;
    int prestigeRaisedTotal_;
    int prestigeDroppedTotal_;
    int numPokemonDeployed_;
    Generic _repeated_numPokemonCaughtByType_codec;
    Generic numPokemonCaughtByType_;
    int smallRattataCaught_;
    Generic <>f__am$cache19;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerStatsProto Clone(...);
    int get_Level(...);
    void set_Level(...);
    long get_Experience(...);
    void set_Experience(...);
    long get_PrevLevelExp(...);
    void set_PrevLevelExp(...);
    long get_NextLevelExp(...);
    void set_NextLevelExp(...);
    float get_KmWalked(...);
    void set_KmWalked(...);
    int get_NumPokemonEncountered(...);
    void set_NumPokemonEncountered(...);
    int get_NumUniquePokedexEntries(...);
    void set_NumUniquePokedexEntries(...);
    int get_NumPokemonCaptured(...);
    void set_NumPokemonCaptured(...);
    int get_NumEvolutions(...);
    void set_NumEvolutions(...);
    int get_PokeStopVisits(...);
    void set_PokeStopVisits(...);
    int get_NumberOfPokeballThrown(...);
    void set_NumberOfPokeballThrown(...);
    int get_NumEggsHatched(...);
    void set_NumEggsHatched(...);
    int get_BigMagikarpCaught(...);
    void set_BigMagikarpCaught(...);
    int get_NumBattleAttackWon(...);
    void set_NumBattleAttackWon(...);
    int get_NumBattleAttackTotal(...);
    void set_NumBattleAttackTotal(...);
    int get_NumBattleDefendedWon(...);
    void set_NumBattleDefendedWon(...);
    int get_NumBattleTrainingWon(...);
    void set_NumBattleTrainingWon(...);
    int get_NumBattleTrainingTotal(...);
    void set_NumBattleTrainingTotal(...);
    int get_PrestigeRaisedTotal(...);
    void set_PrestigeRaisedTotal(...);
    int get_PrestigeDroppedTotal(...);
    void set_PrestigeDroppedTotal(...);
    int get_NumPokemonDeployed(...);
    void set_NumPokemonDeployed(...);
    Generic get_NumPokemonCaughtByType(...);
    int get_SmallRattataCaught(...);
    void set_SmallRattataCaught(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerStatsProto <_parser>m__19F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerStatsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Niantic.Holoholo
class IPokemonBag {
    // Methods:
    void add_OnPokemonBagUpdated(...);
    void remove_OnPokemonBagUpdated(...);
    Generic get_AllPokemon(...);
    int get_Count(...);
    PokemonProto GetPokemon(...);
    boolean HasPokemon(...);
    boolean HasAvailablePokemon(...);
    Generic ReleasePokemon(...);
    Generic EvolvePokemon(...);
    Generic FavoritePokemon(...);
    Generic NicknamePokemon(...);
}

// Namespace: Niantic.Holoholo
class IPokedex {
    // Methods:
    boolean HasEncountered(...);
    boolean HasCaptured(...);
    int GetTimesEncountered(...);
    int GetTimesCaptured(...);
    int GetEvolutionStonePieces(...);
    int GetEvolutionStones(...);
}

// Namespace: 
class IItemBag {
    // Methods:
    void add_OnItemsUpdated(...);
    void remove_OnItemsUpdated(...);
    Generic get_AllItems(...);
    int GetItemCount(...);
    int GetTotalItems(...);
    ItemProto GetItem(...);
    IPromise UseItemOnPokemon(...);
    Generic UseItemForEncounterCapture(...);
    Generic RecycleItem(...);
}

// Namespace: Holoholo.Rpc
class ItemProto {
    // Fields:
    int ItemFieldNumber = 1;
    int CountFieldNumber = 2;
    int UnseenFieldNumber = 3;
    Generic _parser;
    Item item_;
    int count_;
    boolean unseen_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ItemProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    int get_Count(...);
    void set_Count(...);
    boolean get_Unseen(...);
    void set_Unseen(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ItemProto <_parser>m__19D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class RemoteConfigurationType {
    // Fields:
    int value__;
    RemoteConfigurationType ASSET_DIGEST = 0;
    RemoteConfigurationType GAME_MASTER = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Record {
    // Fields:
    ulong version;
    String path;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class InvalidSetupException {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: 
class RotateEuler {
    // Fields:
    float xDegreesSec;
    float yDegreesSec;
    float zDegreesSec;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SeqInfo {
    // Fields:
    Generic Collection;

    // Methods:
    void .cctor(...);
    void ClearSequences(...);
    void AddSequence(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Command {
    // Fields:
    int value__;
    Command VFX = 0;
    Command F2FVFX = 1;
    Command SFX = 2;
    Command CAM = 3;
    Command ANIM = 4;
    Command WAIT = 5;
    Command SYS = 6;
    Command SHAKE = 7;
    Command SCALE = 8;
    Command SINK = 9;
    Command EVENT = 10;
    Command MODE = 11;
    Command HIDE = 12;
    Command UNHIDE = 13;
    Command SPIN = 14;
    Command SQUISH = 15;
    Command BACKGROUND = 16;
    Command RESET_BACKGROUND = 17;
    Command SILHOUETTE = 18;
    Command RESET_SILHOUETTE = 19;
    Command HIDE_OTHER = 20;
    Command UNHIDE_OTHER = 21;
    Command DSCVFX = 22;
    Command _MAX = 23;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Actor {
    // Fields:
    int value__;
    Actor NONE = 0;
    Actor ATTACKER = 1;
    Actor DEFENDER = 2;
    Actor CAMERA = 3;
    Actor _MAX = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Record {
    // Fields:
    Command action;
    Actor actor;
    String modifier;
    String original;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class SystemTicker {
    // Methods:
    void .ctor(...);
    float get_Time(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float get_Time(...);
}

// Namespace: 
class TurnToFace {
    // Fields:
    TargetType targetType;
    GameObject specificObject;
    boolean faceAway;

    // Methods:
    void .ctor(...);
    void Update(...);
    void TurnTo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TargetType {
    // Fields:
    int value__;
    TargetType MAIN_CAMERA = 0;
    TargetType SPECIFIED_OBJECT = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class HideShow {
    // Fields:
    cmod_reqd hideList;
    cmod_reqd showList;

    // Methods:
    void .ctor(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DamageResult {
    // Fields:
    int damage;
    int staminaBonus;
    Effect effectiveness;
    boolean missed;
    boolean critical;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Effect {
    // Fields:
    int value__;
    Effect NO_DAMAGE = 0;
    Effect REDUCED_DAMAGE = 1;
    Effect NORMAL_DAMAGE = 2;
    Effect INCREASED_DAMAGE = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class EllipsoidPokemon {
    // Fields:
    float radiusM;
    float heightM;
    float headRadiusM;
    float groundM;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class HoloUtil {
    // Fields:
    double EARTH_RADIUS_METERS = 6371000.000000;
    float FAVORITE_POWER_MUX = 1.500000;
    Vector2 ReferenceResolution;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    CylinderPokemon Get_PokemonCameraCylinder(...);
    EllipsoidPokemon Get_PokemonCollisionEllipsoid(...);
    int DivideCeil(...);
    cmod_opt Clamp(...);
    cmod_opt Min(...);
    cmod_opt Max(...);
    int Wrap(...);
    float Wrap(...);
    GameObject GetParent(...);
    cmod_opt GetParentWithComponent(...);
    void DestroyAllChildObjects(...);
    void SetImageColor(...);
    void SetTextInChild(...);
    void SetUIText(...);
    boolean RandBool(...);
    boolean RunningOnDevice(...);
    Vector2 GetMainGameViewSize(...);
    Vector2 PixelSpaceToNormSpace(...);
    Vector2 NormSpaceToPixelSpace(...);
    float UIScreenScale(...);
    boolean PointerIsDepressed(...);
    boolean PointerGetPos(...);
    void SyncLayers(...);
    void SetLayers(...);
    void ScaleParticleComponents(...);
    void SetParticleSortingOrderToParent(...);
    Color ConvertHexToColor(...);
    void PlayPokemonAnimation(...);
    void PlayPokemonAttack(...);
    void PlayAnimation(...);
    int PokemonCombatPoints(...);
    float PokemonStamina(...);
    float PokemonAttack(...);
    float PokemonDefense(...);
    float PokemonCombatRating(...);
    float TrainerDifficultyScalar(...);
    String FormatKm(...);
    String FormatFloatOptionalDecimals(...);
    void Print(...);
    void PrintVec(...);
    void PrintVec(...);
    void PrintGameObjectInfo(...);
    void DestroyChildren(...);
    String GetPlatformString(...);
    Platform GetPlatformRPC(...);
    boolean TryBadgeAward(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class Platform {
    // Fields:
    int value__;
    Platform PLATFORM_UNSET = 0;
    Platform PLATFORM_IOS = 1;
    Platform PLATFORM_ANDROID = 2;
    Platform PLATFORM_OSX = 3;
    Platform PLATFORM_WINDOWS = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class IconMaker {
    // Fields:
    Camera iconCamera;
    int firstIdx;
    int lastIdx;
    float angle;
    float pitch;
    float wait;
    float delay;
    float timeout;
    int retries;
    int pokemonIdx;
    float waitLoaded;
    float waitTimeout;
    float maxCameraDist;
    float tallestPokemonHeight;
    int numTries;
    float prevNormalizedTime;
    boolean looped;
    boolean ready;
    boolean captured;
    int resWidthN;
    int resHeightN;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Capture(...);
    void OnGUI(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Internal
class ItemBagImpl {
    // Fields:
    Generic allItems;
    InventoryCache inventory;
    GameMasterData gameMaster;
    IRpcHandler rpcHandler;
    Generic upsightDict;
    Action OnItemsUpdated;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void add_OnItemsUpdated(...);
    void remove_OnItemsUpdated(...);
    Generic get_AllItems(...);
    int GetItemCount(...);
    int GetTotalItems(...);
    ItemProto GetItem(...);
    IPromise UseItemOnPokemon(...);
    Generic UseItemForEncounterCapture(...);
    Generic RecycleItem(...);
    void HandleOnFullInventoryUpdate(...);
    void HandleOnInventoryUpdate(...);
    void CheatAddCamera(...);
    void CheatRemoveCamera(...);
    void LogInventoryUpdate(...);
    int <GetTotalItems>m__112(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnItemsUpdated(...);
    /*[05]*/ void remove_OnItemsUpdated(...);
    /*[06]*/ Generic get_AllItems(...);
    /*[07]*/ int GetItemCount(...);
    /*[08]*/ int GetTotalItems(...);
    /*[09]*/ ItemProto GetItem(...);
    /*[10]*/ IPromise UseItemOnPokemon(...);
    /*[11]*/ Generic UseItemForEncounterCapture(...);
    /*[12]*/ Generic RecycleItem(...);
}

// Namespace: Niantic.Holoholo.Internal.MockServer
class MockServerPlayer {
    // Fields:
    double lat;
    double lng;
    String name;
    int team;
    double itemCaptureMult;
    double itemFleeMult;
    boolean itemStopMovement;
    boolean itemTargetMax;
    boolean itemTargetSlow;
    boolean itemTargetNoAttack;
    PlayerStatsProto stats;
    InventoryCache inventory;
    IItemBag itemBag;
    IPokedex pokedex;
    IPokemonBag pokemonBag;

    // Methods:
    void .ctor(...);
    ClientPlayerProto GetProto(...);
    void SetFromProto(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Internal
class PokedexImpl {
    // Fields:
    Generic dict;

    // Methods:
    void .ctor(...);
    boolean HasCaptured(...);
    boolean HasEncountered(...);
    boolean HasEvolutionStonePieces(...);
    boolean HasEvolutionStones(...);
    int GetTimesCaptured(...);
    int GetTimesEncountered(...);
    int GetEvolutionStonePieces(...);
    int GetEvolutionStones(...);
    void HandleOnFullInventoryUpdate(...);
    void HandleOnInventoryUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean HasEncountered(...);
    /*[05]*/ boolean HasCaptured(...);
    /*[06]*/ int GetTimesEncountered(...);
    /*[07]*/ int GetTimesCaptured(...);
    /*[08]*/ int GetEvolutionStonePieces(...);
    /*[09]*/ int GetEvolutionStones(...);
}

// Namespace: Niantic.Holoholo.Internal
class PokemonBagImpl {
    // Fields:
    Generic allPokemon;
    InventoryCache inventory;
    IRpcHandler rpcHandler;
    Generic upsightDict;
    Generic pokemonCount;
    Action OnPokemonBagUpdated;

    // Methods:
    void .ctor(...);
    void add_OnPokemonBagUpdated(...);
    void remove_OnPokemonBagUpdated(...);
    int get_Count(...);
    Generic get_AllPokemon(...);
    PokemonProto GetPokemon(...);
    boolean HasPokemon(...);
    boolean HasAvailablePokemon(...);
    Generic ReleasePokemon(...);
    Generic EvolvePokemon(...);
    Generic NicknamePokemon(...);
    Generic FavoritePokemon(...);
    void ResetAllPokemon(...);
    void HandleOnFullInventoryUpdate(...);
    void HandleOnInventoryUpdate(...);
    void NofityPokemonBagUpdated(...);
    void LogInventoryUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_OnPokemonBagUpdated(...);
    /*[05]*/ void remove_OnPokemonBagUpdated(...);
    /*[06]*/ Generic get_AllPokemon(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ PokemonProto GetPokemon(...);
    /*[09]*/ boolean HasPokemon(...);
    /*[10]*/ boolean HasAvailablePokemon(...);
    /*[11]*/ Generic ReleasePokemon(...);
    /*[12]*/ Generic EvolvePokemon(...);
    /*[13]*/ Generic FavoritePokemon(...);
    /*[14]*/ Generic NicknamePokemon(...);
}

// Namespace: 
class EggShell {
    // Fields:
    ParticleSystem eggShellVFX;
    ParticleSystem eggHatchVFX;
    cmod_reqd eggTexture;
    AudioClip crackSound;
    AudioClip hatchSound;
    int crackPhase;
    SkinnedMeshRenderer meshRenderer;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDestroy(...);
    void ChangeTexture(...);
    void ResetTexture(...);
    void PlayEggHatchVFX(...);
    void EnableEggHatchedPokemon(...);
    void SetEggTexture(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ItemData {
    // Fields:
    Item item;
    HoloItemType type;
    int count;
    boolean usable;
    boolean recyclable;
    MedicineData medicineData;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MedicineData {
    // Fields:
    float staminaPercent;
    int staminaAmount;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ItemSelectedEventArgs {
    // Fields:
    ItemData item;
    ItemListItemView view;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class EnvType {
    // Fields:
    int value__;
    EnvType evolve = 0;
    EnvType eggHatch = 1;
    EnvType newSpecies = 2;
    EnvType levelUp = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class PokemonInfoEggHatch {
    // Fields:
    cmod_reqd ambientParticles;
    GameObject egg;
    Transform eggWaist;
    Transform blobShadow;
    boolean followX;
    boolean followY;
    boolean followZ;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void StopAmbientParticles(...);
    void PlayEggHatchAnimation(...);
    void OnDisable(...);
    void DestroySelf(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokemonInfoEvolve {
    // Fields:
    cmod_reqd ambientParticles;
    Music evolutionCompletionMusic;

    // Methods:
    void .ctor(...);
    void StopAmbientParticles(...);
    void OnDisable(...);
    void DestroySelf(...);
    void PlayCompletionMusic(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class NLog {
    // Fields:
    NLog instance;
    TextLimitedQueue logQueue;
    LogLevel logLevel;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Awake(...);
    boolean LogLevelIsAtLeast(...);
    void Info(...);
    void Info(...);
    void Warn(...);
    void Warn(...);
    void Error(...);
    void Error(...);
    void InfoFormat(...);
    void InfoFormat(...);
    void WarnFormat(...);
    void WarnFormat(...);
    void ErrorFormat(...);
    void ErrorFormat(...);
    String SafeToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LogLevel {
    // Fields:
    int value__;
    LogLevel All = 0;
    LogLevel Info = 1;
    LogLevel Warning = 2;
    LogLevel Error = 3;
    LogLevel Nothing = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic
class UpsightMetrics {
    // Fields:
    String MAP_UPDATE_EVENT = "usage.map.update";
    String MAP_CLICK_ITEM_BAG = "usage.map.click_item_bag";
    String MAP_CLICK_MAIN_MENU = "usage.map.click_main_menu";
    String MAP_CLICK_POKEDEX = "usage.map.click_pokedex";
    String MAP_CLICK_POKEMON_INVENTORY = "usage.map.click_pokemon_inventory";
    String MAP_CLICK_PROFILE = "usage.map.click_profile";
    String MAP_CLICK_SETTINGS = "usage.map.click_settings";
    String MAP_CLICK_SHOP = "usage.map.click_shop";
    String MAP_CLICK_GYM = "usage.map.click_gym";
    String PROFILE_CLICK_SHOP = "usage.profile.click_shop";
    String PROFILE_CLICK_LOG = "usage.profile.click_log";
    String POKEMON_INFO_CLICK_FAVORITES = "usage.pokemoninfo.click_favorite";
    String UPDATE_ITEM_BAG = "update.item_bag";
    String UPDATE_POKEMON_INVENTORY = "update.pokemon_inventory";
    String ACTION_CATCH_POKEMON = "action.catch_pokemon";
    String ACTION_DEPLOY_POKEMON = "action.deploy_pokemon";
    String ACTION_ENCOUNTER = "action.encounter";
    String ACTION_EVOLVE_POKEMON = "action.evolve_pokemon";
    String ACTION_FAVORITE_POKEMON = "action.favorite_pokemon";
    String ACTION_RECYCLE_ITEM = "action.recycle_item";
    String ACTION_RELEASE_POKEMON = "action.release_pokemon";
    String ACTION_SEARCH_POKESTOP = "action.search_pokestop";
    String ACTION_USE_ITEM = "action.use_item";
    String ACTION_NICKNAME_POKEMON = "action.nickname_pokemon";
    String IAP_PURCHASE = "iap.purchase";
    String NEARBY_POKEMON_COUNT = "nearby_pokemon_count";
    String USER_ATTR_LEVEL = "player_level";
    String USER_ATTR_XP = "player_xp";
    String USER_ATTR_AVATAR = "player_avatar";
    String USER_ATTR_ITEM_COUNT = "item_count";
    String USER_ATTR_POKEMON_COUNT = "pokemon_count";
    String USER_ATTR_POKECOIN = "pokecoin";
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class AngleFilter {
    // Fields:
    float TIME_NORMALIZATION_MS;
    float STEP_SIZE;
    float MAX_DT;
    float FRICTION_COEFFICIENT_1;
    float FRICTION_COEFFICIENT_2;
    float SIGNAL_LEVEL;
    float currentValue;
    float speed;
    long lastReadingTime;
    boolean wrap;

    // Methods:
    void .ctor(...);
    float filter(...);
    void step(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class BlurCamera {
    // Fields:
    RectTransform targetRect;
    Camera blurCamera;
    float cachedWidth;
    float cachedHeight;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class CameraParams {
    // Fields:
    LatLng target_;
    double range_;
    double tilt_;
    double heading_;
    double targetViewShift_;
    double fovY_;
    LatLng shiftedTarget_;
    boolean shiftedTargetDirty_;

    // Methods:
    void .ctor(...);
    LatLng get_Target(...);
    void set_Target(...);
    double get_Range(...);
    void set_Range(...);
    double get_Tilt(...);
    void set_Tilt(...);
    double get_Heading(...);
    void set_Heading(...);
    double get_TargetViewShift(...);
    void set_TargetViewShift(...);
    double get_FovY(...);
    void set_FovY(...);
    LatLng get_ShiftedTarget(...);
    LatLng get_Shift(...);
    LatLng ComputeCameraTargetShift(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class Compass2 {
    // Fields:
    AngleFilter filter;
    int MIN_SENSOR_UPDATE_INTERVAL_MSEC;
    float SINE_OF_45_DEGREES;
    float TWO_PI;
    cmod_reqd tmpMatrix1;
    cmod_reqd tmpMatrix2;
    cmod_reqd tmpMatrix3;
    cmod_reqd tmpOrientationAngles;
    cmod_reqd rotationVectorReading;
    long lastUpdateTimeMs;
    cmod_reqd temp;
    float <Heading>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    float get_Heading(...);
    void set_Heading(...);
    float get_RawHeading(...);
    void Start(...);
    void Update(...);
    void updateOrientationFromRotation(...);
    void calcMatrixFromRotationVector(...);
    void updateOrientation(...);
    float wrapAngle(...);
    float getDeclination(...);
    boolean getRotationMatrix(...);
    boolean remapCoordinateSystem(...);
    boolean remapCoordinateSystemImpl(...);
    cmod_reqd getOrientation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ float get_Heading(...);
    /*[05]*/ float get_RawHeading(...);
}

// Namespace: Niantic.Holoholo.Map
class DefaultingCameraLayer {
    // Methods:
    void .ctor(...);
    void Start(...);
    LayerHitResult castRay(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
    /*[16]*/ void updateCamera(...);
    /*[17]*/ LayerHitResult castRay(...);
}

// Namespace: 
class EventThrottle {
    // Fields:
    float lastEventTime;
    float interval;

    // Methods:
    void .ctor(...);
    boolean Check(...);
    void EventHappened(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class GPSErrorOverlay {
    // Fields:
    Transform bgOverlay;
    GameObject panel;
    float loopDistance;
    float speed;
    Vector3 startPos;
    Vector3 moveTo;
    ILocationProvider locationProvider;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class GoogleMapsApi {
    // Fields:
    String MAPS_API_URL = "https://maps.googleapis.com/maps/api";
    String MAPS_STYLE;
    Generic addressCache;
    IImageDownloadService imageDownloadService;
    ILocaleService localeService;
    GlobalSettings globalSettings;
    String mapsApiKey;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void Init(...);
    Generic GetReverseGeocodedAddress(...);
    Generic GetMapImage(...);
    IEnumerator ProcessMapsImageRequest(...);
    IEnumerator ProcessReverseGeocodingRequest(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic GetReverseGeocodedAddress(...);
    /*[05]*/ Generic GetMapImage(...);
}

// Namespace: 
class ApiResults {
    // Fields:
    cmod_reqd results;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ApiResult {
    // Fields:
    cmod_reqd address_components;
    String formatted_address;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AddressComponent {
    // Fields:
    String long_name;
    String short_name;
    cmod_reqd types;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Map
class GroundTapHandler {
    // Fields:
    ParticleSystem particlerPrefab;
    ParticleSystem particler;
    AudioClip clickSound;
    Vector3 offset;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnTap(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LocationProviderAdapter {
    // Fields:
    Generic fakeLocation;
    ILocationProvider original;
    Generic <JitterOffset>k__BackingField;

    // Methods:
    void .ctor(...);
    LatLng get_Location(...);
    Generic get_JitterOffset(...);
    void set_JitterOffset(...);
    boolean get_HasValidLocation(...);
    boolean get_IsMeasuredLocation(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LatLng get_Location(...);
    /*[05]*/ boolean get_HasValidLocation(...);
    /*[06]*/ boolean get_IsMeasuredLocation(...);
}

// Namespace: 
class NativeLocationProvider {
    // Fields:
    double ACTIONABLE_LOCATION_THRESHOLD_M = 1000.000000;
    float LOCATION_SAMPLE_INTERVAL_S = 1.000000;
    Location location;
    long lastLocationUpdateMs;

    // Methods:
    void .ctor(...);
    LatLng get_Location(...);
    boolean get_HasValidLocation(...);
    boolean get_IsMeasuredLocation(...);
    void Start(...);
    IEnumerator UpdateLocation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LatLng get_Location(...);
    /*[05]*/ boolean get_HasValidLocation(...);
    /*[06]*/ boolean get_IsMeasuredLocation(...);
}

// Namespace: NianticLabs.Platform
class Location {
    // Fields:
    double latitudeDeg;
    double longitudeDeg;
    double altitudeM;
    double accuracyM;
    double timestampS;
    LocationStatus status;
    LocationType locationType;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: NianticLabs.Platform
class LocationStatus {
    // Fields:
    int value__;
    LocationStatus UNDEFINED = 0;
    LocationStatus STOPPED = 1;
    LocationStatus INITIALIZED = 2;
    LocationStatus RUNNING = 3;
    LocationStatus FAILED = 4;
    LocationStatus PERMISSION_DENIED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: NianticLabs.Platform
class LocationType {
    // Fields:
    int value__;
    LocationType UNDEFINED = 0;
    LocationType MEASURED = 1;
    LocationType COMPUTED = 2;
    LocationType INTERPOLATED = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class UnityLocationProvider {
    // Methods:
    void .ctor(...);
    LatLng get_Location(...);
    boolean get_HasValidLocation(...);
    boolean get_IsMeasuredLocation(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ LatLng get_Location(...);
    /*[05]*/ boolean get_HasValidLocation(...);
    /*[06]*/ boolean get_IsMeasuredLocation(...);
}

// Namespace: 
class VersionButton {
    // Fields:
    Text buildNotes;

    // Methods:
    void .ctor(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class MathExt {
    // Methods:
    boolean PlanePlaneIntersection(...);
    boolean LinePlaneIntersection(...);
    boolean LineLineIntersection(...);
    boolean ClosestPointsOnTwoLines(...);
    Vector3 ProjectPointOnLine(...);
    Vector3 ProjectPointOnLineSegment(...);
    Vector3 ProjectPointOnPlane(...);
    Vector3 ProjectVectorOnPlane(...);
    float SignedDistancePlanePoint(...);
    void PlaneFrom3Points(...);
    int PointOnWhichSideOfLineSegment(...);
    Vector3 SetVectorLength(...);
    float Hermite(...);
    float Sinerp(...);
    float Coserp(...);
    float Berp(...);
    float SmoothStep(...);
    float Lerp(...);
    Vector3 NearestPoint(...);
    Vector3 NearestPointStrict(...);
    float Bounce(...);
    boolean Approx(...);
    boolean Approx(...);
    float Clerp(...);
    Vector4 Average(...);
    Vector3 Average(...);
    Vector2 Average(...);
    float Average(...);
    Rect BoundingBoxOfPoints(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class MersenneTwister {
    // Fields:
    int N = 624;
    int M = 397;
    uint MatrixA = 2567483615;
    uint UpperMask = 2147483648;
    uint LowerMask = 2147483647;
    uint TemperingMaskB = 2636928640;
    uint TemperingMaskC = 4022730752;
    double FiftyThreeBitsOf1s = 9007199254740991.000000;
    double Inverse53BitsOf1s = 0.000000;
    double OnePlus53BitsOf1s = 9007199254740992.000000;
    double InverseOnePlus53BitsOf1s = 0.000000;
    cmod_reqd mt;
    short mti;
    cmod_reqd mag01;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    uint NextUInt32(...);
    uint NextUInt32(...);
    uint NextUInt32(...);
    int Next(...);
    int Next(...);
    int Next(...);
    void NextBytes(...);
    double NextDouble(...);
    double NextDouble(...);
    double NextDoublePositive(...);
    float NextSingle(...);
    Vector3 NextUnitVector(...);
    float NextSingle(...);
    float NextSinglePositive(...);
    uint GenerateUInt32(...);
    uint temperingShiftU(...);
    uint temperingShiftS(...);
    uint temperingShiftT(...);
    uint temperingShiftL(...);
    void init(...);
    void init(...);
    double compute53BitRandom(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ double Sample(...);
    /*[05]*/ int Next(...);
    /*[06]*/ int Next(...);
    /*[07]*/ int Next(...);
    /*[08]*/ void NextBytes(...);
    /*[09]*/ double NextDouble(...);
    /*[10]*/ uint NextUInt32(...);
    /*[11]*/ uint NextUInt32(...);
    /*[12]*/ uint NextUInt32(...);
}

// Namespace: Niantic
class RectExt {
    // Methods:
    Generic Edges(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class SwizzlesFromVector3ToVector2 {
    // Methods:
    Vector2 XX(...);
    Vector2 XY(...);
    Vector2 XZ(...);
    Vector2 YX(...);
    Vector2 YY(...);
    Vector2 YZ(...);
    Vector2 ZX(...);
    Vector2 ZY(...);
    Vector2 ZZ(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class SwizzlesFromVector2ToVector3 {
    // Methods:
    Vector3 X__(...);
    Vector3 Y__(...);
    Vector3 _X_(...);
    Vector3 _Y_(...);
    Vector3 __X(...);
    Vector3 __Y(...);
    Vector3 XX_(...);
    Vector3 XY_(...);
    Vector3 YX_(...);
    Vector3 YY_(...);
    Vector3 X_X(...);
    Vector3 X_Y(...);
    Vector3 Y_X(...);
    Vector3 Y_Y(...);
    Vector3 _XX(...);
    Vector3 _XY(...);
    Vector3 _YX(...);
    Vector3 _YY(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic
class Triangulator {
    // Methods:
    cmod_reqd ProjectPointsToXZ(...);
    cmod_reqd Triangulate(...);
    cmod_reqd Triangulate(...);
    float Area(...);
    boolean Snip(...);
    boolean InsideTriangle(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ParticleDestroy {
    // Fields:
    boolean EditorReApplyShaders;

    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.PersistentData
class PlayerPrefsHelper {
    // Methods:
    boolean GetBool(...);
    void SetBool(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.PersistentData
class Preferences {
    // Fields:
    String MUSIC_ENABLED = "5a4d0a56-e3e1-4e72-b1fd-8dd550a1cb03";
    String SFX_ENABLED = "09929d1d-4109-4e04-8929-6e368e8ebf9d";
    String VIBRATION_ENABLED = "584eb9ef-6c9b-49d4-a548-d6b48101f76c";
    String BATTLE_AR = "1e4ad837-1e93-42be-92f5-585e20104c62";
    String ENCOUNTER_AR = "f228cd90-6d28-4cb3-8b74-682637d21a02";
    String BATTERY_SAVER_ENABLED = "0fdd0e25-9cdd-4cd8-826d-a8eafb1fed52";
    String FPS_COUNTER = "5b9e8dd3-adb0-441d-9533-a8b7e911e960";
    String REMOTE_CONFIG_VERSION = "a48ae148-2b06-49e2-b7af-fd102e3526c8";
    String POKEMON_SORT_MODE = "16d91881-cd9a-425c-99d4-de5358d774de";
    Preferences instance;

    // Methods:
    void .ctor(...);
    Preferences get_Instance(...);
    boolean get_MusicEnabled(...);
    void set_MusicEnabled(...);
    boolean get_SFXEnabled(...);
    void set_SFXEnabled(...);
    boolean get_VibrationEnabled(...);
    void set_VibrationEnabled(...);
    boolean get_BatterySaverEnabled(...);
    void set_BatterySaverEnabled(...);
    boolean get_BattleAr(...);
    void set_BattleAr(...);
    boolean get_EncounterAr(...);
    void set_EncounterAr(...);
    boolean get_HasRemoteConfigVersion(...);
    void set_RemoteConfigVersion(...);
    String get_RemoteConfigVersion(...);
    void set_PokemonSortOrder(...);
    PokemonInventoryOrder get_PokemonSortOrder(...);
    void DeleteAll(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BadgeProgressBar {
    // Fields:
    Text textLabel;
    Text textMin;
    Text textMax;
    Text textCurrLeft;
    Text textCurrRight;
    Image barBackground;
    Image barForeground;
    float minVal;
    float maxVal;
    float currVal;
    float displayedVal;
    float minBarWidth;

    // Methods:
    void .ctor(...);
    void Init(...);
    void SetCurrentValue(...);
    void SetColors(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Team {
    // Fields:
    int value__;
    Team NEUTRAL = 0;
    Team TEAM_1 = 1;
    Team TEAM_2 = 2;
    Team TEAM_3 = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class TeamInfo {
    // Methods:
    void .ctor(...);
    Team FromInt(...);
    String GetLocalizedTeamName(...);
    Sprite GetTeamLogo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Procedural
class MeshUtils {
    // Fields:
    Generic <>f__am$cache0;

    // Methods:
    cmod_reqd PositionXZtoUVs(...);
    float CalculateSurfaceArea(...);
    void FlipTriangleWinding(...);
    Vector3 <PositionXZtoUVs>m__127(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Procedural
class Bezier {
    // Fields:
    cmod_reqd _controlPoints;

    // Methods:
    void .ctor(...);
    int get_ControlPointCount(...);
    Vector3 NextPoint(...);
    Vector3 LastPoint(...);
    Bezier ConstructSmoothSplineFromPoints(...);
    Bezier ConstructSmoothSpline(...);
    Bezier Circle(...);
    boolean get_Closed(...);
    Generic get_ControlPoints(...);
    void UpdateControlPoints(...);
    Vector3 PositionSample(...);
    Vector3 ForwardSample(...);
    Mesh Triangulate(...);
    Mesh Triangulate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 PositionSample(...);
    /*[05]*/ Vector3 ForwardSample(...);
    /*[06]*/ boolean get_Closed(...);
}

// Namespace: 
class ControlPoint {
    // Fields:
    Vector3 <Point>k__BackingField;
    Vector3 <InTangent>k__BackingField;
    Vector3 <OutTangent>k__BackingField;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    Vector3 get_Point(...);
    void set_Point(...);
    Vector3 get_InTangent(...);
    void set_InTangent(...);
    Vector3 get_OutTangent(...);
    void set_OutTangent(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Procedural
class BezierComponent {
    // Fields:
    boolean showCurve;
    Color splineColor;
    Color tangentColor;
    Color handleColor;
    boolean showForwardVectors;
    boolean triangulate;
    int triangulateSegments;
    boolean reverseCPs;
    Generic points;
    boolean continuous;
    uint pointsHash;
    Bezier bezier;
    boolean overridden;

    // Methods:
    void .ctor(...);
    void OverrideBezier(...);
    Vector3 PositionSample(...);
    Vector3 ForwardSample(...);
    boolean get_Closed(...);
    void UpdateBezier(...);
    uint PointsHash(...);
    void OnDrawGizmos(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 PositionSample(...);
    /*[05]*/ Vector3 ForwardSample(...);
    /*[06]*/ boolean get_Closed(...);
}

// Namespace: Holoholo.Rpc
class CloudAssetsReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class AssetDigestRequestProto {
    // Fields:
    int PlatformFieldNumber = 1;
    int DeviceManufacturerFieldNumber = 2;
    int DeviceModelFieldNumber = 3;
    int LocaleFieldNumber = 4;
    int AppVersionFieldNumber = 5;
    Generic _parser;
    Platform platform_;
    String deviceManufacturer_;
    String deviceModel_;
    String locale_;
    uint appVersion_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AssetDigestRequestProto Clone(...);
    Platform get_Platform(...);
    void set_Platform(...);
    String get_DeviceManufacturer(...);
    void set_DeviceManufacturer(...);
    String get_DeviceModel(...);
    void set_DeviceModel(...);
    String get_Locale(...);
    void set_Locale(...);
    uint get_AppVersion(...);
    void set_AppVersion(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AssetDigestRequestProto <_parser>m__128(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AssetDigestRequestProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class AssetDigestEntryProto {
    // Fields:
    int AssetIdFieldNumber = 1;
    int BundleNameFieldNumber = 2;
    int VersionFieldNumber = 3;
    int ChecksumFieldNumber = 4;
    int SizeFieldNumber = 5;
    int KeyFieldNumber = 6;
    Generic _parser;
    String assetId_;
    String bundleName_;
    long version_;
    uint checksum_;
    int size_;
    ByteString key_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AssetDigestEntryProto Clone(...);
    String get_AssetId(...);
    void set_AssetId(...);
    String get_BundleName(...);
    void set_BundleName(...);
    long get_Version(...);
    void set_Version(...);
    uint get_Checksum(...);
    void set_Checksum(...);
    int get_Size(...);
    void set_Size(...);
    ByteString get_Key(...);
    void set_Key(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AssetDigestEntryProto <_parser>m__129(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AssetDigestEntryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class AssetDigestOutProto {
    // Fields:
    int DigestFieldNumber = 1;
    int TimestampFieldNumber = 2;
    Generic _parser;
    Generic _repeated_digest_codec;
    Generic digest_;
    ulong timestamp_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AssetDigestOutProto Clone(...);
    Generic get_Digest(...);
    ulong get_Timestamp(...);
    void set_Timestamp(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AssetDigestOutProto <_parser>m__12A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AssetDigestOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DownloadUrlRequestProto {
    // Fields:
    int AssetIdFieldNumber = 1;
    Generic _parser;
    Generic _repeated_assetId_codec;
    Generic assetId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DownloadUrlRequestProto Clone(...);
    Generic get_AssetId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DownloadUrlRequestProto <_parser>m__12B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DownloadUrlRequestProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DownloadUrlEntryProto {
    // Fields:
    int AssetIdFieldNumber = 1;
    int UrlFieldNumber = 2;
    int SizeFieldNumber = 3;
    int ChecksumFieldNumber = 4;
    Generic _parser;
    String assetId_;
    String url_;
    int size_;
    uint checksum_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DownloadUrlEntryProto Clone(...);
    String get_AssetId(...);
    void set_AssetId(...);
    String get_Url(...);
    void set_Url(...);
    int get_Size(...);
    void set_Size(...);
    uint get_Checksum(...);
    void set_Checksum(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DownloadUrlEntryProto <_parser>m__12C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DownloadUrlEntryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DownloadUrlOutProto {
    // Fields:
    int DownloadUrlsFieldNumber = 1;
    Generic _parser;
    Generic _repeated_downloadUrls_codec;
    Generic downloadUrls_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DownloadUrlOutProto Clone(...);
    Generic get_DownloadUrls(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DownloadUrlOutProto <_parser>m__12D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DownloadUrlOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DailyBonusReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class CollectDailyBonusProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CollectDailyBonusProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CollectDailyBonusProto <_parser>m__12E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CollectDailyBonusProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CollectDailyBonusOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    Generic _parser;
    Result result_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CollectDailyBonusOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CollectDailyBonusOutProto <_parser>m__12F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CollectDailyBonusOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result FAILURE = 2;
    Result TOO_SOON = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class CollectDailyDefenderBonusProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CollectDailyDefenderBonusProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CollectDailyDefenderBonusProto <_parser>m__130(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CollectDailyDefenderBonusProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CollectDailyDefenderBonusOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int CurrencyTypeFieldNumber = 2;
    int CurrencyAwardedFieldNumber = 3;
    int NumDefendersFieldNumber = 4;
    Generic _parser;
    Result result_;
    Generic _repeated_currencyType_codec;
    Generic currencyType_;
    Generic _repeated_currencyAwarded_codec;
    Generic currencyAwarded_;
    int numDefenders_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CollectDailyDefenderBonusOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_CurrencyType(...);
    Generic get_CurrencyAwarded(...);
    int get_NumDefenders(...);
    void set_NumDefenders(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CollectDailyDefenderBonusOutProto <_parser>m__131(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CollectDailyDefenderBonusOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result FAILURE = 2;
    Result TOO_SOON = 3;
    Result NO_DEFENDERS = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class EchoReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class EchoProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EchoProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EchoProto <_parser>m__132(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EchoProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EchoOutProto {
    // Fields:
    int ContextFieldNumber = 1;
    Generic _parser;
    String context_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EchoOutProto Clone(...);
    String get_Context(...);
    void set_Context(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EchoOutProto <_parser>m__133(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EchoOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EggReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetHatchedEggsProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetHatchedEggsProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetHatchedEggsProto <_parser>m__134(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetHatchedEggsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EncounterReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class EncounterProto {
    // Fields:
    int EncounterIdFieldNumber = 1;
    int SpawnpointIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    ulong encounterId_;
    String spawnpointId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EncounterProto Clone(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    String get_SpawnpointId(...);
    void set_SpawnpointId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EncounterProto <_parser>m__136(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EncounterProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class CatchPokemonProto {
    // Fields:
    int EncounterIdFieldNumber = 1;
    int PokeballFieldNumber = 2;
    int NormalizedReticleSizeFieldNumber = 3;
    int SpawnPointGuidFieldNumber = 4;
    int HitPokemonFieldNumber = 5;
    int SpinModifierFieldNumber = 6;
    int NormalizedHitPositionFieldNumber = 7;
    Generic _parser;
    ulong encounterId_;
    int pokeball_;
    double normalizedReticleSize_;
    String spawnPointGuid_;
    boolean hitPokemon_;
    double spinModifier_;
    double normalizedHitPosition_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CatchPokemonProto Clone(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    int get_Pokeball(...);
    void set_Pokeball(...);
    double get_NormalizedReticleSize(...);
    void set_NormalizedReticleSize(...);
    String get_SpawnPointGuid(...);
    void set_SpawnPointGuid(...);
    boolean get_HitPokemon(...);
    void set_HitPokemon(...);
    double get_SpinModifier(...);
    void set_SpinModifier(...);
    double get_NormalizedHitPosition(...);
    void set_NormalizedHitPosition(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CatchPokemonProto <_parser>m__138(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CatchPokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemCaptureProto {
    // Fields:
    int ItemFieldNumber = 1;
    int EncounterIdFieldNumber = 2;
    int SpawnPointGuidFieldNumber = 3;
    Generic _parser;
    Item item_;
    ulong encounterId_;
    String spawnPointGuid_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemCaptureProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    ulong get_EncounterId(...);
    void set_EncounterId(...);
    String get_SpawnPointGuid(...);
    void set_SpawnPointGuid(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemCaptureProto <_parser>m__13A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemCaptureProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemCaptureOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int ItemCaptureMultFieldNumber = 2;
    int ItemFleeMultFieldNumber = 3;
    int StopMovementFieldNumber = 4;
    int StopAttackFieldNumber = 5;
    int TargetMaxFieldNumber = 6;
    int TargetSlowFieldNumber = 7;
    Generic _parser;
    boolean success_;
    double itemCaptureMult_;
    double itemFleeMult_;
    boolean stopMovement_;
    boolean stopAttack_;
    boolean targetMax_;
    boolean targetSlow_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemCaptureOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    double get_ItemCaptureMult(...);
    void set_ItemCaptureMult(...);
    double get_ItemFleeMult(...);
    void set_ItemFleeMult(...);
    boolean get_StopMovement(...);
    void set_StopMovement(...);
    boolean get_StopAttack(...);
    void set_StopAttack(...);
    boolean get_TargetMax(...);
    void set_TargetMax(...);
    boolean get_TargetSlow(...);
    void set_TargetSlow(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemCaptureOutProto <_parser>m__13B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemCaptureOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EncounterTutorialCompleteProto {
    // Fields:
    int PokedexIdFieldNumber = 1;
    Generic _parser;
    int pokedexId_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EncounterTutorialCompleteProto Clone(...);
    int get_PokedexId(...);
    void set_PokedexId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EncounterTutorialCompleteProto <_parser>m__13C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EncounterTutorialCompleteProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EncounterTutorialCompleteOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int PokemonFieldNumber = 2;
    int ScoresFieldNumber = 3;
    Generic _parser;
    Result result_;
    PokemonProto pokemon_;
    CaptureScoreProto scores_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EncounterTutorialCompleteOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    CaptureScoreProto get_Scores(...);
    void set_Scores(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EncounterTutorialCompleteOutProto <_parser>m__13D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EncounterTutorialCompleteOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_INVALID_POKEMON = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseIncenseActionProto {
    // Fields:
    int IncenseTypeFieldNumber = 1;
    Generic _parser;
    Item incenseType_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseIncenseActionProto Clone(...);
    Item get_IncenseType(...);
    void set_IncenseType(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseIncenseActionProto <_parser>m__144(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseIncenseActionProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseIncenseActionOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int AppliedIncenseFieldNumber = 2;
    Generic _parser;
    Result result_;
    AppliedItemProto appliedIncense_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseIncenseActionOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    AppliedItemProto get_AppliedIncense(...);
    void set_AppliedIncense(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseIncenseActionOutProto <_parser>m__145(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseIncenseActionOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNKNOWN = 0;
    Result SUCCESS = 1;
    Result INCENSE_ALREADY_ACTIVE = 2;
    Result NONE_IN_INVENTORY = 3;
    Result LOCATION_UNSET = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetIncensePokemonProto {
    // Fields:
    int PlayerLatDegreesFieldNumber = 1;
    int PlayerLngDegreesFieldNumber = 2;
    Generic _parser;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetIncensePokemonProto Clone(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetIncensePokemonProto <_parser>m__146(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetIncensePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class IncenseEncounterProto {
    // Fields:
    int EncounterIdFieldNumber = 1;
    int EncounterLocationFieldNumber = 2;
    Generic _parser;
    long encounterId_;
    String encounterLocation_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    IncenseEncounterProto Clone(...);
    long get_EncounterId(...);
    void set_EncounterId(...);
    String get_EncounterLocation(...);
    void set_EncounterLocation(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    IncenseEncounterProto <_parser>m__148(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ IncenseEncounterProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class DiskEncounterProto {
    // Fields:
    int EncounterIdFieldNumber = 1;
    int FortIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    long encounterId_;
    String fortId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DiskEncounterProto Clone(...);
    long get_EncounterId(...);
    void set_EncounterId(...);
    String get_FortId(...);
    void set_FortId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DiskEncounterProto <_parser>m__14A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DiskEncounterProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class EvolutionReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class EvolvePokemonProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    Generic _parser;
    ulong pokemonId_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EvolvePokemonProto Clone(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EvolvePokemonProto <_parser>m__14C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EvolvePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EvolvePokemonOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int EvolvedPokemonFieldNumber = 2;
    int ExpAwardedFieldNumber = 3;
    int CandyAwardedFieldNumber = 4;
    Generic _parser;
    Result result_;
    PokemonProto evolvedPokemon_;
    int expAwarded_;
    int candyAwarded_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EvolvePokemonOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_EvolvedPokemon(...);
    void set_EvolvedPokemon(...);
    int get_ExpAwarded(...);
    void set_ExpAwarded(...);
    int get_CandyAwarded(...);
    void set_CandyAwarded(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EvolvePokemonOutProto <_parser>m__14D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EvolvePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result FAILED_POKEMON_MISSING = 2;
    Result FAILED_INSUFFICIENT_RESOURCES = 3;
    Result FAILED_POKEMON_CANNOT_EVOLVE = 4;
    Result FAILED_POKEMON_IS_DEPLOYED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class FortdetailsReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class AwardItemProto {
    // Fields:
    int ItemFieldNumber = 1;
    int ItemCountFieldNumber = 2;
    Generic _parser;
    Item item_;
    int itemCount_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AwardItemProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    int get_ItemCount(...);
    void set_ItemCount(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AwardItemProto <_parser>m__14E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AwardItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortSearchProto {
    // Fields:
    int IdFieldNumber = 1;
    int PlayerLatDegreesFieldNumber = 2;
    int PlayerLngDegreesFieldNumber = 3;
    int FortLatDegreesFieldNumber = 4;
    int FortLngDegreesFieldNumber = 5;
    Generic _parser;
    String id_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    double fortLatDegrees_;
    double fortLngDegrees_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortSearchProto Clone(...);
    String get_Id(...);
    void set_Id(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    double get_FortLatDegrees(...);
    void set_FortLatDegrees(...);
    double get_FortLngDegrees(...);
    void set_FortLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortSearchProto <_parser>m__14F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortSearchProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class FortDetailsProto {
    // Fields:
    int IdFieldNumber = 1;
    int LatitudeFieldNumber = 2;
    int LongitudeFieldNumber = 3;
    Generic _parser;
    String id_;
    double latitude_;
    double longitude_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortDetailsProto Clone(...);
    String get_Id(...);
    void set_Id(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortDetailsProto <_parser>m__151(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortDetailsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortDetailsOutProto {
    // Fields:
    int IdFieldNumber = 1;
    int TeamFieldNumber = 2;
    int PokemonFieldNumber = 3;
    int NameFieldNumber = 4;
    int ImageUrlFieldNumber = 5;
    int FpFieldNumber = 6;
    int StaminaFieldNumber = 7;
    int MaxStaminaFieldNumber = 8;
    int FortTypeFieldNumber = 9;
    int LatitudeFieldNumber = 10;
    int LongitudeFieldNumber = 11;
    int DescriptionFieldNumber = 12;
    int ModifierFieldNumber = 13;
    Generic _parser;
    String id_;
    int team_;
    Generic _repeated_pokemon_codec;
    Generic pokemon_;
    String name_;
    Generic _repeated_imageUrl_codec;
    Generic imageUrl_;
    int fp_;
    int stamina_;
    int maxStamina_;
    FortType fortType_;
    double latitude_;
    double longitude_;
    String description_;
    Generic _repeated_modifier_codec;
    Generic modifier_;
    Generic <>f__am$cache11;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortDetailsOutProto Clone(...);
    String get_Id(...);
    void set_Id(...);
    int get_Team(...);
    void set_Team(...);
    Generic get_Pokemon(...);
    String get_Name(...);
    void set_Name(...);
    Generic get_ImageUrl(...);
    int get_Fp(...);
    void set_Fp(...);
    int get_Stamina(...);
    void set_Stamina(...);
    int get_MaxStamina(...);
    void set_MaxStamina(...);
    FortType get_FortType(...);
    void set_FortType(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    String get_Description(...);
    void set_Description(...);
    Generic get_Modifier(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortDetailsOutProto <_parser>m__152(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortDetailsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortDeployProto {
    // Fields:
    int FortIdFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    String fortId_;
    ulong pokemonId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortDeployProto Clone(...);
    String get_FortId(...);
    void set_FortId(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortDeployProto <_parser>m__153(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortDeployProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortDeployOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int FortDetailsOutProtoFieldNumber = 2;
    int EggPokemonFieldNumber = 3;
    int GymStateProtoFieldNumber = 4;
    Generic _parser;
    Result result_;
    FortDetailsOutProto fortDetailsOutProto_;
    PokemonProto eggPokemon_;
    GymStateProto gymStateProto_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortDeployOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    FortDetailsOutProto get_FortDetailsOutProto(...);
    void set_FortDetailsOutProto(...);
    PokemonProto get_EggPokemon(...);
    void set_EggPokemon(...);
    GymStateProto get_GymStateProto(...);
    void set_GymStateProto(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortDeployOutProto <_parser>m__154(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortDeployOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result NO_RESULT_SET = 0;
    Result SUCCESS = 1;
    Result ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2;
    Result ERROR_OPPOSING_TEAM_OWNS_FORT = 3;
    Result ERROR_FORT_IS_FULL = 4;
    Result ERROR_NOT_IN_RANGE = 5;
    Result ERROR_PLAYER_HAS_NO_TEAM = 6;
    Result ERROR_POKEMON_NOT_FULL_HP = 7;
    Result ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class FortRecallProto {
    // Fields:
    int FortIdFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    String fortId_;
    ulong pokemonId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortRecallProto Clone(...);
    String get_FortId(...);
    void set_FortId(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortRecallProto <_parser>m__155(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortRecallProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortRecallOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int FortDetailsOutProtoFieldNumber = 2;
    Generic _parser;
    Result result_;
    FortDetailsOutProto fortDetailsOutProto_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortRecallOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    FortDetailsOutProto get_FortDetailsOutProto(...);
    void set_FortDetailsOutProto(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortRecallOutProto <_parser>m__156(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortRecallOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result NO_RESULT_SET = 0;
    Result SUCCESS = 1;
    Result ERROR_NOT_IN_RANGE = 2;
    Result ERROR_POKEMON_NOT_ON_FORT = 3;
    Result ERROR_NO_PLAYER = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class AddFortModifierProto {
    // Fields:
    int ModifierTypeFieldNumber = 1;
    int FortIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    Item modifierType_;
    String fortId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AddFortModifierProto Clone(...);
    Item get_ModifierType(...);
    void set_ModifierType(...);
    String get_FortId(...);
    void set_FortId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AddFortModifierProto <_parser>m__157(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AddFortModifierProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class AddFortModifierOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int FortDetailsOutProtoFieldNumber = 2;
    Generic _parser;
    Result result_;
    FortDetailsOutProto fortDetailsOutProto_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AddFortModifierOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    FortDetailsOutProto get_FortDetailsOutProto(...);
    void set_FortDetailsOutProto(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AddFortModifierOutProto <_parser>m__158(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AddFortModifierOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result NO_RESULT_SET = 0;
    Result SUCCESS = 1;
    Result FORT_ALREADY_HAS_MODIFIER = 2;
    Result TOO_FAR_AWAY = 3;
    Result NO_ITEM_IN_INVENTORY = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GameMasterReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class IapItemDisplayProto {
    // Fields:
    int SkuFieldNumber = 1;
    int CategoryFieldNumber = 2;
    int SortOrderFieldNumber = 3;
    int ItemsFieldNumber = 4;
    int CountsFieldNumber = 5;
    Generic _parser;
    String sku_;
    HoloIapItemCategory category_;
    int sortOrder_;
    Generic _repeated_items_codec;
    Generic items_;
    Generic _repeated_counts_codec;
    Generic counts_;
    Generic <>f__am$cache8;
    Generic <>f__am$cache9;
    Generic <>f__am$cacheA;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    IapItemDisplayProto Clone(...);
    String get_Sku(...);
    void set_Sku(...);
    HoloIapItemCategory get_Category(...);
    void set_Category(...);
    int get_SortOrder(...);
    void set_SortOrder(...);
    Generic get_Items(...);
    Generic get_Counts(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    IapItemDisplayProto <_parser>m__172(...);
    int <_repeated_items_codec>m__173(...);
    Item <_repeated_items_codec>m__174(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ IapItemDisplayProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class MoveSequenceSettingsProto {
    // Fields:
    int SequenceFieldNumber = 1;
    Generic _parser;
    Generic _repeated_sequence_codec;
    Generic sequence_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MoveSequenceSettingsProto Clone(...);
    Generic get_Sequence(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MoveSequenceSettingsProto <_parser>m__176(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MoveSequenceSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TypeEffectiveSettingsProto {
    // Fields:
    int AttackTypeFieldNumber = 2;
    int AttackScalarFieldNumber = 1;
    Generic _parser;
    HoloPokemonType attackType_;
    Generic _repeated_attackScalar_codec;
    Generic attackScalar_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TypeEffectiveSettingsProto Clone(...);
    HoloPokemonType get_AttackType(...);
    void set_AttackType(...);
    Generic get_AttackScalar(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TypeEffectiveSettingsProto <_parser>m__177(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TypeEffectiveSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CameraSettingsProto {
    // Fields:
    int NextCameraFieldNumber = 1;
    int InterpolationFieldNumber = 2;
    int TargetTypeFieldNumber = 3;
    int EaseInSpeedFieldNumber = 4;
    int EaseOutSpeedFieldNumber = 5;
    int DurationSFieldNumber = 6;
    int WaitSFieldNumber = 7;
    int TransitionSFieldNumber = 8;
    int AngleDegFieldNumber = 9;
    int AngleOffsetDegFieldNumber = 10;
    int PitchDegFieldNumber = 11;
    int PitchOffsetDegFieldNumber = 12;
    int RollDegFieldNumber = 13;
    int DistanceMFieldNumber = 14;
    int HeightPercentFieldNumber = 15;
    int VertCtrRatioFieldNumber = 16;
    Generic _parser;
    String nextCamera_;
    Generic _repeated_interpolation_codec;
    Generic interpolation_;
    Generic _repeated_targetType_codec;
    Generic targetType_;
    Generic _repeated_easeInSpeed_codec;
    Generic easeInSpeed_;
    Generic _repeated_easeOutSpeed_codec;
    Generic easeOutSpeed_;
    Generic _repeated_durationS_codec;
    Generic durationS_;
    Generic _repeated_waitS_codec;
    Generic waitS_;
    Generic _repeated_transitionS_codec;
    Generic transitionS_;
    Generic _repeated_angleDeg_codec;
    Generic angleDeg_;
    Generic _repeated_angleOffsetDeg_codec;
    Generic angleOffsetDeg_;
    Generic _repeated_pitchDeg_codec;
    Generic pitchDeg_;
    Generic _repeated_pitchOffsetDeg_codec;
    Generic pitchOffsetDeg_;
    Generic _repeated_rollDeg_codec;
    Generic rollDeg_;
    Generic _repeated_distanceM_codec;
    Generic distanceM_;
    Generic _repeated_heightPercent_codec;
    Generic heightPercent_;
    Generic _repeated_vertCtrRatio_codec;
    Generic vertCtrRatio_;
    Generic <>f__am$cache20;
    Generic <>f__am$cache21;
    Generic <>f__am$cache22;
    Generic <>f__am$cache23;
    Generic <>f__am$cache24;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CameraSettingsProto Clone(...);
    String get_NextCamera(...);
    void set_NextCamera(...);
    Generic get_Interpolation(...);
    Generic get_TargetType(...);
    Generic get_EaseInSpeed(...);
    Generic get_EaseOutSpeed(...);
    Generic get_DurationS(...);
    Generic get_WaitS(...);
    Generic get_TransitionS(...);
    Generic get_AngleDeg(...);
    Generic get_AngleOffsetDeg(...);
    Generic get_PitchDeg(...);
    Generic get_PitchOffsetDeg(...);
    Generic get_RollDeg(...);
    Generic get_DistanceM(...);
    Generic get_HeightPercent(...);
    Generic get_VertCtrRatio(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CameraSettingsProto <_parser>m__179(...);
    int <_repeated_interpolation_codec>m__17A(...);
    CameraInterpolation <_repeated_interpolation_codec>m__17B(...);
    int <_repeated_targetType_codec>m__17C(...);
    CameraTarget <_repeated_targetType_codec>m__17D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CameraSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EquippedBadgeSettingsProto {
    // Fields:
    int EquipBadgeCooldownMsFieldNumber = 1;
    int CatchProbabilityBonusFieldNumber = 2;
    int FleeProbabilityBonusFieldNumber = 3;
    Generic _parser;
    long equipBadgeCooldownMs_;
    Generic _repeated_catchProbabilityBonus_codec;
    Generic catchProbabilityBonus_;
    Generic _repeated_fleeProbabilityBonus_codec;
    Generic fleeProbabilityBonus_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EquippedBadgeSettingsProto Clone(...);
    long get_EquipBadgeCooldownMs(...);
    void set_EquipBadgeCooldownMs(...);
    Generic get_CatchProbabilityBonus(...);
    Generic get_FleeProbabilityBonus(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EquippedBadgeSettingsProto <_parser>m__184(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EquippedBadgeSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GameMasterClientTemplateProto {
    // Fields:
    int TemplateIdFieldNumber = 1;
    int PokemonFieldNumber = 2;
    int ItemFieldNumber = 3;
    int MoveFieldNumber = 4;
    int MoveSequenceFieldNumber = 5;
    int TypeEffectiveFieldNumber = 8;
    int BadgeFieldNumber = 10;
    int CameraFieldNumber = 11;
    int PlayerLevelFieldNumber = 12;
    int GymLevelFieldNumber = 13;
    int BattleSettingsFieldNumber = 14;
    int EncounterSettingsFieldNumber = 15;
    int IapItemDisplayFieldNumber = 16;
    int IapSettingsFieldNumber = 17;
    int PokemonUpgradesFieldNumber = 18;
    int EquippedBadgesFieldNumber = 19;
    Generic _parser;
    String templateId_;
    PokemonSettingsProto pokemon_;
    ItemSettingsProto item_;
    MoveSettingsProto move_;
    MoveSequenceSettingsProto moveSequence_;
    TypeEffectiveSettingsProto typeEffective_;
    BadgeSettingsProto badge_;
    CameraSettingsProto camera_;
    PlayerLevelSettingsProto playerLevel_;
    GymLevelSettingsProto gymLevel_;
    GymBattleSettingsProto battleSettings_;
    EncounterSettingsProto encounterSettings_;
    IapItemDisplayProto iapItemDisplay_;
    IapSettingsProto iapSettings_;
    PokemonUpgradeSettingsProto pokemonUpgrades_;
    EquippedBadgeSettingsProto equippedBadges_;
    Generic <>f__am$cache11;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GameMasterClientTemplateProto Clone(...);
    String get_TemplateId(...);
    void set_TemplateId(...);
    PokemonSettingsProto get_Pokemon(...);
    void set_Pokemon(...);
    ItemSettingsProto get_Item(...);
    void set_Item(...);
    MoveSettingsProto get_Move(...);
    void set_Move(...);
    MoveSequenceSettingsProto get_MoveSequence(...);
    void set_MoveSequence(...);
    TypeEffectiveSettingsProto get_TypeEffective(...);
    void set_TypeEffective(...);
    BadgeSettingsProto get_Badge(...);
    void set_Badge(...);
    CameraSettingsProto get_Camera(...);
    void set_Camera(...);
    PlayerLevelSettingsProto get_PlayerLevel(...);
    void set_PlayerLevel(...);
    GymLevelSettingsProto get_GymLevel(...);
    void set_GymLevel(...);
    GymBattleSettingsProto get_BattleSettings(...);
    void set_BattleSettings(...);
    EncounterSettingsProto get_EncounterSettings(...);
    void set_EncounterSettings(...);
    IapItemDisplayProto get_IapItemDisplay(...);
    void set_IapItemDisplay(...);
    IapSettingsProto get_IapSettings(...);
    void set_IapSettings(...);
    PokemonUpgradeSettingsProto get_PokemonUpgrades(...);
    void set_PokemonUpgrades(...);
    EquippedBadgeSettingsProto get_EquippedBadges(...);
    void set_EquippedBadges(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GameMasterClientTemplateProto <_parser>m__185(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GameMasterClientTemplateProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetGameMasterClientTemplatesProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetGameMasterClientTemplatesProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetGameMasterClientTemplatesProto <_parser>m__186(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetGameMasterClientTemplatesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetRemoteConfigVersionsProto {
    // Fields:
    int PlatformFieldNumber = 1;
    int DeviceManufacturerFieldNumber = 2;
    int DeviceModelFieldNumber = 3;
    int LocaleFieldNumber = 4;
    int AppVersionFieldNumber = 5;
    Generic _parser;
    Platform platform_;
    String deviceManufacturer_;
    String deviceModel_;
    String locale_;
    uint appVersion_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetRemoteConfigVersionsProto Clone(...);
    Platform get_Platform(...);
    void set_Platform(...);
    String get_DeviceManufacturer(...);
    void set_DeviceManufacturer(...);
    String get_DeviceModel(...);
    void set_DeviceModel(...);
    String get_Locale(...);
    void set_Locale(...);
    uint get_AppVersion(...);
    void set_AppVersion(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetRemoteConfigVersionsProto <_parser>m__188(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetRemoteConfigVersionsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetRemoteConfigVersionsOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int GameMasterTimestampFieldNumber = 2;
    int AssetDigestTimestampFieldNumber = 3;
    Generic _parser;
    Result result_;
    ulong gameMasterTimestamp_;
    ulong assetDigestTimestamp_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetRemoteConfigVersionsOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    ulong get_GameMasterTimestamp(...);
    void set_GameMasterTimestamp(...);
    ulong get_AssetDigestTimestamp(...);
    void set_AssetDigestTimestamp(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetRemoteConfigVersionsOutProto <_parser>m__189(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetRemoteConfigVersionsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetmapobjectsReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetMapObjectsProto {
    // Fields:
    int CellIdFieldNumber = 1;
    int SinceTimeMsFieldNumber = 2;
    int PlayerLatFieldNumber = 3;
    int PlayerLngFieldNumber = 4;
    Generic _parser;
    Generic _repeated_cellId_codec;
    Generic cellId_;
    Generic _repeated_sinceTimeMs_codec;
    Generic sinceTimeMs_;
    double playerLat_;
    double playerLng_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetMapObjectsProto Clone(...);
    Generic get_CellId(...);
    Generic get_SinceTimeMs(...);
    double get_PlayerLat(...);
    void set_PlayerLat(...);
    double get_PlayerLng(...);
    void set_PlayerLng(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetMapObjectsProto <_parser>m__18B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetMapObjectsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetMapObjectsOutProto {
    // Fields:
    int MapCellFieldNumber = 1;
    int StatusFieldNumber = 2;
    Generic _parser;
    Generic _repeated_mapCell_codec;
    Generic mapCell_;
    Status status_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetMapObjectsOutProto Clone(...);
    Generic get_MapCell(...);
    Status get_Status(...);
    void set_Status(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetMapObjectsOutProto <_parser>m__18C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetMapObjectsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status LOCATION_UNSET = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class Gymbattlev2Reflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetGymDetailsProto {
    // Fields:
    int GymIdFieldNumber = 1;
    int PlayerLatDegreesFieldNumber = 2;
    int PlayerLngDegreesFieldNumber = 3;
    int GymLatDegreesFieldNumber = 4;
    int GymLngDegreesFieldNumber = 5;
    Generic _parser;
    String gymId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    double gymLatDegrees_;
    double gymLngDegrees_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetGymDetailsProto Clone(...);
    String get_GymId(...);
    void set_GymId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    double get_GymLatDegrees(...);
    void set_GymLatDegrees(...);
    double get_GymLngDegrees(...);
    void set_GymLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetGymDetailsProto <_parser>m__18E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetGymDetailsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetGymDetailsOutProto {
    // Fields:
    int GymStateFieldNumber = 1;
    int NameFieldNumber = 2;
    int UrlFieldNumber = 3;
    int ResultFieldNumber = 4;
    int DescriptionFieldNumber = 5;
    Generic _parser;
    GymStateProto gymState_;
    String name_;
    Generic _repeated_url_codec;
    Generic url_;
    Result result_;
    String description_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetGymDetailsOutProto Clone(...);
    GymStateProto get_GymState(...);
    void set_GymState(...);
    String get_Name(...);
    void set_Name(...);
    Generic get_Url(...);
    Result get_Result(...);
    void set_Result(...);
    String get_Description(...);
    void set_Description(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetGymDetailsOutProto <_parser>m__18F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetGymDetailsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_NOT_IN_RANGE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class StartGymBattleProto {
    // Fields:
    int GymIdFieldNumber = 1;
    int AttackingPokemonIdFieldNumber = 2;
    int DefendingPokemonIdFieldNumber = 3;
    int PlayerLatDegreesFieldNumber = 4;
    int PlayerLngDegreesFieldNumber = 5;
    Generic _parser;
    String gymId_;
    Generic _repeated_attackingPokemonId_codec;
    Generic attackingPokemonId_;
    ulong defendingPokemonId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    StartGymBattleProto Clone(...);
    String get_GymId(...);
    void set_GymId(...);
    Generic get_AttackingPokemonId(...);
    ulong get_DefendingPokemonId(...);
    void set_DefendingPokemonId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    StartGymBattleProto <_parser>m__191(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ StartGymBattleProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class StartGymBattleOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int BattleStartMsFieldNumber = 2;
    int BattleEndMsFieldNumber = 3;
    int BattleIdFieldNumber = 4;
    int DefenderFieldNumber = 5;
    int BattleLogFieldNumber = 6;
    Generic _parser;
    Result result_;
    long battleStartMs_;
    long battleEndMs_;
    String battleId_;
    BattleParticipantProto defender_;
    BattleLogProto battleLog_;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    StartGymBattleOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    long get_BattleStartMs(...);
    void set_BattleStartMs(...);
    long get_BattleEndMs(...);
    void set_BattleEndMs(...);
    String get_BattleId(...);
    void set_BattleId(...);
    BattleParticipantProto get_Defender(...);
    void set_Defender(...);
    BattleLogProto get_BattleLog(...);
    void set_BattleLog(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    StartGymBattleOutProto <_parser>m__192(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ StartGymBattleOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_GYM_NOT_FOUND = 2;
    Result ERROR_GYM_NEUTRAL = 3;
    Result ERROR_GYM_WRONG_TEAM = 4;
    Result ERROR_GYM_EMPTY = 5;
    Result ERROR_INVALID_DEFENDER = 6;
    Result ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7;
    Result ERROR_ALL_POKEMON_FAINTED = 8;
    Result ERROR_TOO_MANY_BATTLES = 9;
    Result ERROR_TOO_MANY_PLAYERS = 10;
    Result ERROR_GYM_BATTLE_LOCKOUT = 11;
    Result ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12;
    Result ERROR_NOT_IN_RANGE = 13;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class BattleLogProto {
    // Fields:
    int StateFieldNumber = 1;
    int BattleTypeFieldNumber = 2;
    int ServerMsFieldNumber = 3;
    int BattleActionsFieldNumber = 4;
    int BattleStartMsFieldNumber = 5;
    int BattleEndMsFieldNumber = 6;
    Generic _parser;
    State state_;
    BattleType battleType_;
    long serverMs_;
    Generic _repeated_battleActions_codec;
    Generic battleActions_;
    long battleStartMs_;
    long battleEndMs_;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    BattleLogProto Clone(...);
    State get_State(...);
    void set_State(...);
    BattleType get_BattleType(...);
    void set_BattleType(...);
    long get_ServerMs(...);
    void set_ServerMs(...);
    Generic get_BattleActions(...);
    long get_BattleStartMs(...);
    void set_BattleStartMs(...);
    long get_BattleEndMs(...);
    void set_BattleEndMs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    BattleLogProto <_parser>m__199(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ BattleLogProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class State {
    // Fields:
    int value__;
    State STATE_UNSET = 0;
    State ACTIVE = 1;
    State VICTORY = 2;
    State DEFEATED = 3;
    State TIMED_OUT = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class BattleType {
    // Fields:
    int value__;
    BattleType BATTLE_TYPE_UNSET = 0;
    BattleType NORMAL = 1;
    BattleType TRAINING = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class AttackGymOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int BattleLogFieldNumber = 2;
    int BattleIdFieldNumber = 3;
    int ActiveDefenderFieldNumber = 4;
    int ActiveAttackerFieldNumber = 5;
    Generic _parser;
    Result result_;
    BattleLogProto battleLog_;
    String battleId_;
    PokemonInfo activeDefender_;
    PokemonInfo activeAttacker_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AttackGymOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    BattleLogProto get_BattleLog(...);
    void set_BattleLog(...);
    String get_BattleId(...);
    void set_BattleId(...);
    PokemonInfo get_ActiveDefender(...);
    void set_ActiveDefender(...);
    PokemonInfo get_ActiveAttacker(...);
    void set_ActiveAttacker(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AttackGymOutProto <_parser>m__194(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AttackGymOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_INVALID_ATTACK_ACTIONS = 2;
    Result ERROR_NOT_IN_RANGE = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class HoloholoSharedReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class PlayerAvatarType {
    // Fields:
    int value__;
    PlayerAvatarType PLAYER_AVATAR_UNSET = 0;
    PlayerAvatarType PLAYER_AVATAR_MALE = 1;
    PlayerAvatarType PLAYER_AVATAR_FEMALE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class Team {
    // Fields:
    int value__;
    Team UNSET = 0;
    Team TEAM_BLUE = 1;
    Team TEAM_RED = 2;
    Team TEAM_YELLOW = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloPokemonNature {
    // Fields:
    int value__;
    HoloPokemonNature NATURE_UNKNOWN = 0;
    HoloPokemonNature V0001_POKEMON_NATURE_STOIC = 1;
    HoloPokemonNature V0002_POKEMON_NATURE_ASSASSIN = 2;
    HoloPokemonNature V0003_POKEMON_NATURE_GUARDIAN = 3;
    HoloPokemonNature V0004_POKEMON_NATURE_RAIDER = 4;
    HoloPokemonNature V0005_POKEMON_NATURE_PROTECTOR = 5;
    HoloPokemonNature V0006_POKEMON_NATURE_SENTRY = 6;
    HoloPokemonNature V0007_POKEMON_NATURE_CHAMPION = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class HoloInventoryItemProto {
    // Fields:
    int PokemonFieldNumber = 1;
    int ItemFieldNumber = 2;
    int PokedexEntryFieldNumber = 3;
    int PlayerStatsFieldNumber = 4;
    int PlayerCurrencyFieldNumber = 5;
    int PlayerCameraFieldNumber = 6;
    int InventoryUpgradesFieldNumber = 7;
    int AppliedItemsFieldNumber = 8;
    int EggIncubatorsFieldNumber = 9;
    int PokemonFamilyFieldNumber = 10;
    Generic _parser;
    mvar type_;
    TypeOneofCase typeCase_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    HoloInventoryItemProto Clone(...);
    PokemonProto get_Pokemon(...);
    void set_Pokemon(...);
    ItemProto get_Item(...);
    void set_Item(...);
    PokedexEntryProto get_PokedexEntry(...);
    void set_PokedexEntry(...);
    PlayerStatsProto get_PlayerStats(...);
    void set_PlayerStats(...);
    PlayerCurrencyProto get_PlayerCurrency(...);
    void set_PlayerCurrency(...);
    PlayerCameraProto get_PlayerCamera(...);
    void set_PlayerCamera(...);
    InventoryUpgradesProto get_InventoryUpgrades(...);
    void set_InventoryUpgrades(...);
    AppliedItemsProto get_AppliedItems(...);
    void set_AppliedItems(...);
    EggIncubatorsProto get_EggIncubators(...);
    void set_EggIncubators(...);
    PokemonFamilyProto get_PokemonFamily(...);
    void set_PokemonFamily(...);
    TypeOneofCase get_TypeCase(...);
    void ClearType(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    HoloInventoryItemProto <_parser>m__DB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ HoloInventoryItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class TypeOneofCase {
    // Fields:
    int value__;
    TypeOneofCase None = 0;
    TypeOneofCase Pokemon = 1;
    TypeOneofCase Item = 2;
    TypeOneofCase PokedexEntry = 3;
    TypeOneofCase PlayerStats = 4;
    TypeOneofCase PlayerCurrency = 5;
    TypeOneofCase PlayerCamera = 6;
    TypeOneofCase InventoryUpgrades = 7;
    TypeOneofCase AppliedItems = 8;
    TypeOneofCase EggIncubators = 9;
    TypeOneofCase PokemonFamily = 10;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokedexEntryProto {
    // Fields:
    int PokedexEntryNumberFieldNumber = 1;
    int TimesEncounteredFieldNumber = 2;
    int TimesCapturedFieldNumber = 3;
    int EvolutionStonePiecesFieldNumber = 4;
    int EvolutionStonesFieldNumber = 5;
    Generic _parser;
    int pokedexEntryNumber_;
    int timesEncountered_;
    int timesCaptured_;
    int evolutionStonePieces_;
    int evolutionStones_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokedexEntryProto Clone(...);
    int get_PokedexEntryNumber(...);
    void set_PokedexEntryNumber(...);
    int get_TimesEncountered(...);
    void set_TimesEncountered(...);
    int get_TimesCaptured(...);
    void set_TimesCaptured(...);
    int get_EvolutionStonePieces(...);
    void set_EvolutionStonePieces(...);
    int get_EvolutionStones(...);
    void set_EvolutionStones(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokedexEntryProto <_parser>m__19E(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokedexEntryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerCurrencyProto {
    // Fields:
    int GemsFieldNumber = 1;
    Generic _parser;
    int gems_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerCurrencyProto Clone(...);
    int get_Gems(...);
    void set_Gems(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerCurrencyProto <_parser>m__1A0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerCurrencyProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerCameraProto {
    // Fields:
    int DefaultCameraFieldNumber = 1;
    Generic _parser;
    boolean defaultCamera_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerCameraProto Clone(...);
    boolean get_DefaultCamera(...);
    void set_DefaultCamera(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerCameraProto <_parser>m__1A1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerCameraProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventoryUpgradesProto {
    // Fields:
    int InventoryUpgradeFieldNumber = 1;
    Generic _parser;
    Generic _repeated_inventoryUpgrade_codec;
    Generic inventoryUpgrade_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryUpgradesProto Clone(...);
    Generic get_InventoryUpgrade(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryUpgradesProto <_parser>m__1A2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryUpgradesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class AppliedItemsProto {
    // Fields:
    int ItemFieldNumber = 4;
    Generic _parser;
    Generic _repeated_item_codec;
    Generic item_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    AppliedItemsProto Clone(...);
    Generic get_Item(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    AppliedItemsProto <_parser>m__1A6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ AppliedItemsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EggIncubatorsProto {
    // Fields:
    int EggIncubatorFieldNumber = 1;
    Generic _parser;
    Generic _repeated_eggIncubator_codec;
    Generic eggIncubator_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EggIncubatorsProto Clone(...);
    Generic get_EggIncubator(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EggIncubatorsProto <_parser>m__1A4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EggIncubatorsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PokemonFamilyProto {
    // Fields:
    int FamilyIdFieldNumber = 1;
    int CandyFieldNumber = 2;
    Generic _parser;
    HoloPokemonFamilyId familyId_;
    int candy_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonFamilyProto Clone(...);
    HoloPokemonFamilyId get_FamilyId(...);
    void set_FamilyId(...);
    int get_Candy(...);
    void set_Candy(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonFamilyProto <_parser>m__1A8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonFamilyProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class FortSponsor {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortSponsor Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortSponsor <_parser>m__19A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortSponsor Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class FortRenderingType {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortRenderingType Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortRenderingType <_parser>m__19B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortRenderingType Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class InventoryUpgradeProto {
    // Fields:
    int ItemFieldNumber = 1;
    int UpgradeTypeFieldNumber = 2;
    int AdditionalStorageFieldNumber = 3;
    Generic _parser;
    Item item_;
    InventoryUpgradeType upgradeType_;
    int additionalStorage_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryUpgradeProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    InventoryUpgradeType get_UpgradeType(...);
    void set_UpgradeType(...);
    int get_AdditionalStorage(...);
    void set_AdditionalStorage(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryUpgradeProto <_parser>m__1A3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryUpgradeProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ActionLogEntry {
    // Fields:
    int TimestampMsFieldNumber = 1;
    int SfidaFieldNumber = 2;
    int CatchPokemonFieldNumber = 3;
    int FortSearchFieldNumber = 4;
    Generic _parser;
    long timestampMs_;
    boolean sfida_;
    mvar action_;
    ActionOneofCase actionCase_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ActionLogEntry Clone(...);
    long get_TimestampMs(...);
    void set_TimestampMs(...);
    boolean get_Sfida(...);
    void set_Sfida(...);
    CatchPokemonLogEntry get_CatchPokemon(...);
    void set_CatchPokemon(...);
    FortSearchLogEntry get_FortSearch(...);
    void set_FortSearch(...);
    ActionOneofCase get_ActionCase(...);
    void ClearAction(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ActionLogEntry <_parser>m__1AB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ActionLogEntry Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class ActionOneofCase {
    // Fields:
    int value__;
    ActionOneofCase None = 0;
    ActionOneofCase CatchPokemon = 3;
    ActionOneofCase FortSearch = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class CatchPokemonLogEntry {
    // Fields:
    int ResultFieldNumber = 1;
    int PokedexNumberFieldNumber = 2;
    int CombatPointsFieldNumber = 3;
    int PokemonIdFieldNumber = 4;
    Generic _parser;
    Result result_;
    int pokedexNumber_;
    int combatPoints_;
    ulong pokemonId_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CatchPokemonLogEntry Clone(...);
    Result get_Result(...);
    void set_Result(...);
    int get_PokedexNumber(...);
    void set_PokedexNumber(...);
    int get_CombatPoints(...);
    void set_CombatPoints(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CatchPokemonLogEntry <_parser>m__1AC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CatchPokemonLogEntry Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result POKEMON_CAPTURED = 1;
    Result POKEMON_FLED = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class FortSearchLogEntry {
    // Fields:
    int ResultFieldNumber = 1;
    int FortIdFieldNumber = 2;
    int ItemsFieldNumber = 3;
    int EggsFieldNumber = 4;
    Generic _parser;
    Result result_;
    String fortId_;
    Generic _repeated_items_codec;
    Generic items_;
    int eggs_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    FortSearchLogEntry Clone(...);
    Result get_Result(...);
    void set_Result(...);
    String get_FortId(...);
    void set_FortId(...);
    Generic get_Items(...);
    int get_Eggs(...);
    void set_Eggs(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    FortSearchLogEntry <_parser>m__1AD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ FortSearchLogEntry Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class InventoryReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class InventoryProto {
    // Fields:
    int InventoryItemFieldNumber = 1;
    Generic _parser;
    Generic _repeated_inventoryItem_codec;
    Generic inventoryItem_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryProto Clone(...);
    Generic get_InventoryItem(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryProto <_parser>m__1AE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventoryItemProto {
    // Fields:
    int ModifiedTimestampFieldNumber = 1;
    int DeletedItemKeyFieldNumber = 2;
    int ItemFieldNumber = 3;
    Generic _parser;
    long modifiedTimestamp_;
    ByteString deletedItemKey_;
    ByteString item_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryItemProto Clone(...);
    long get_ModifiedTimestamp(...);
    void set_ModifiedTimestamp(...);
    ByteString get_DeletedItemKey(...);
    void set_DeletedItemKey(...);
    ByteString get_Item(...);
    void set_Item(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryItemProto <_parser>m__1AF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class InventoryDeltaProto {
    // Fields:
    int OriginalTimestampFieldNumber = 1;
    int NewTimestampFieldNumber = 2;
    int InventoryItemFieldNumber = 3;
    Generic _parser;
    long originalTimestamp_;
    long newTimestamp_;
    Generic _repeated_inventoryItem_codec;
    Generic inventoryItem_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    InventoryDeltaProto Clone(...);
    long get_OriginalTimestamp(...);
    void set_OriginalTimestamp(...);
    long get_NewTimestamp(...);
    void set_NewTimestamp(...);
    Generic get_InventoryItem(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    InventoryDeltaProto <_parser>m__1B0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ InventoryDeltaProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerProfileReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class PlayerProfileProto {
    // Fields:
    int PlayerNameFieldNumber = 1;
    Generic _parser;
    String playerName_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerProfileProto Clone(...);
    String get_PlayerName(...);
    void set_PlayerName(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerProfileProto <_parser>m__1B2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerProfileProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerProfileOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int StartTimeFieldNumber = 2;
    int BadgesFieldNumber = 3;
    Generic _parser;
    Result result_;
    long startTime_;
    Generic _repeated_badges_codec;
    Generic badges_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerProfileOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    long get_StartTime(...);
    void set_StartTime(...);
    Generic get_Badges(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerProfileOutProto <_parser>m__1B3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerProfileOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class LevelUpRewardsProto {
    // Fields:
    int LevelFieldNumber = 1;
    Generic _parser;
    int level_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    LevelUpRewardsProto Clone(...);
    int get_Level(...);
    void set_Level(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    LevelUpRewardsProto <_parser>m__1B4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ LevelUpRewardsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class RpcReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class Method {
    // Fields:
    int value__;
    Method METHOD_UNSET = 0;
    Method PLAYER_UPDATE = 1;
    Method GET_PLAYER = 2;
    Method GET_INVENTORY = 4;
    Method DOWNLOAD_SETTINGS = 5;
    Method DOWNLOAD_ITEM_TEMPLATES = 6;
    Method DOWNLOAD_REMOTE_CONFIG_VERSION = 7;
    Method FORT_SEARCH = 101;
    Method ENCOUNTER = 102;
    Method CATCH_POKEMON = 103;
    Method FORT_DETAILS = 104;
    Method ITEM_USE = 105;
    Method GET_MAP_OBJECTS = 106;
    Method FORT_DEPLOY_POKEMON = 110;
    Method FORT_RECALL_POKEMON = 111;
    Method RELEASE_POKEMON = 112;
    Method USE_ITEM_POTION = 113;
    Method USE_ITEM_CAPTURE = 114;
    Method USE_ITEM_FLEE = 115;
    Method USE_ITEM_REVIVE = 116;
    Method TRADE_SEARCH = 117;
    Method TRADE_OFFER = 118;
    Method TRADE_RESPONSE = 119;
    Method TRADE_RESULT = 120;
    Method GET_PLAYER_PROFILE = 121;
    Method GET_ITEM_PACK = 122;
    Method BUY_ITEM_PACK = 123;
    Method BUY_GEM_PACK = 124;
    Method EVOLVE_POKEMON = 125;
    Method GET_HATCHED_EGGS = 126;
    Method ENCOUNTER_TUTORIAL_COMPLETE = 127;
    Method LEVEL_UP_REWARDS = 128;
    Method CHECK_AWARDED_BADGES = 129;
    Method USE_ITEM_GYM = 133;
    Method GET_GYM_DETAILS = 134;
    Method START_GYM_BATTLE = 135;
    Method ATTACK_GYM = 136;
    Method RECYCLE_INVENTORY_ITEM = 137;
    Method COLLECT_DAILY_BONUS = 138;
    Method USE_ITEM_XP_BOOST = 139;
    Method USE_ITEM_EGG_INCUBATOR = 140;
    Method USE_INCENSE = 141;
    Method GET_INCENSE_POKEMON = 142;
    Method INCENSE_ENCOUNTER = 143;
    Method ADD_FORT_MODIFIER = 144;
    Method DISK_ENCOUNTER = 145;
    Method COLLECT_DAILY_DEFENDER_BONUS = 146;
    Method UPGRADE_POKEMON = 147;
    Method SET_FAVORITE_POKEMON = 148;
    Method NICKNAME_POKEMON = 149;
    Method EQUIP_BADGE = 150;
    Method SET_CONTACT_SETTINGS = 151;
    Method GET_ASSET_DIGEST = 300;
    Method GET_DOWNLOAD_URLS = 301;
    Method GET_SUGGESTED_CODENAMES = 401;
    Method CHECK_CODENAME_AVAILABLE = 402;
    Method CLAIM_CODENAME = 403;
    Method SET_AVATAR = 404;
    Method SET_PLAYER_TEAM = 405;
    Method MARK_TUTORIAL_COMPLETE = 406;
    Method LOAD_SPAWN_POINTS = 500;
    Method ECHO = 666;
    Method DEBUG_UPDATE_INVENTORY = 700;
    Method DEBUG_DELETE_PLAYER = 701;
    Method SFIDA_REGISTRATION = 800;
    Method SFIDA_ACTION_LOG = 801;
    Method SFIDA_CERTIFICATION = 802;
    Method SFIDA_UPDATE = 803;
    Method SFIDA_ACTION = 804;
    Method SFIDA_DOWSER = 805;
    Method SFIDA_CAPTURE = 806;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class PokemonSummaryFortProto {
    // Fields:
    int FortSummaryIdFieldNumber = 1;
    int LastModifiedMsFieldNumber = 2;
    int LatitudeFieldNumber = 3;
    int LongitudeFieldNumber = 4;
    Generic _parser;
    String fortSummaryId_;
    long lastModifiedMs_;
    double latitude_;
    double longitude_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PokemonSummaryFortProto Clone(...);
    String get_FortSummaryId(...);
    void set_FortSummaryId(...);
    long get_LastModifiedMs(...);
    void set_LastModifiedMs(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PokemonSummaryFortProto <_parser>m__1B8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PokemonSummaryFortProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ClientSpawnPointProto {
    // Fields:
    int LatitudeFieldNumber = 2;
    int LongitudeFieldNumber = 3;
    Generic _parser;
    double latitude_;
    double longitude_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ClientSpawnPointProto Clone(...);
    double get_Latitude(...);
    void set_Latitude(...);
    double get_Longitude(...);
    void set_Longitude(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ClientSpawnPointProto <_parser>m__95(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ClientSpawnPointProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CurrencyQuantityProto {
    // Fields:
    int CurrencyTypeFieldNumber = 1;
    int QuantityFieldNumber = 2;
    Generic _parser;
    String currencyType_;
    int quantity_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CurrencyQuantityProto Clone(...);
    String get_CurrencyType(...);
    void set_CurrencyType(...);
    int get_Quantity(...);
    void set_Quantity(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CurrencyQuantityProto <_parser>m__1BD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CurrencyQuantityProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetPlayerProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetPlayerProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetPlayerProto <_parser>m__1C1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetPlayerProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetPlayerOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int PlayerFieldNumber = 2;
    Generic _parser;
    boolean success_;
    ClientPlayerProto player_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetPlayerOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    ClientPlayerProto get_Player(...);
    void set_Player(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetPlayerOutProto <_parser>m__1C2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetPlayerOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerUpdateProto {
    // Fields:
    int LatFieldNumber = 1;
    int LngFieldNumber = 2;
    Generic _parser;
    double lat_;
    double lng_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerUpdateProto Clone(...);
    double get_Lat(...);
    void set_Lat(...);
    double get_Lng(...);
    void set_Lng(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerUpdateProto <_parser>m__1C3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerUpdateProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PlayerUpdateOutProto {
    // Fields:
    int WildPokemonFieldNumber = 1;
    int FortFieldNumber = 2;
    int FortsNearbyFieldNumber = 3;
    Generic _parser;
    Generic _repeated_wildPokemon_codec;
    Generic wildPokemon_;
    Generic _repeated_fort_codec;
    Generic fort_;
    int fortsNearby_;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PlayerUpdateOutProto Clone(...);
    Generic get_WildPokemon(...);
    Generic get_Fort(...);
    int get_FortsNearby(...);
    void set_FortsNearby(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PlayerUpdateOutProto <_parser>m__1C4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PlayerUpdateOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetInventoryProto {
    // Fields:
    int TimestampMillisFieldNumber = 1;
    int ItemBeenSeenFieldNumber = 2;
    Generic _parser;
    long timestampMillis_;
    Generic _repeated_itemBeenSeen_codec;
    Generic itemBeenSeen_;
    Generic <>f__am$cache4;
    Generic <>f__am$cache5;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetInventoryProto Clone(...);
    long get_TimestampMillis(...);
    void set_TimestampMillis(...);
    Generic get_ItemBeenSeen(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetInventoryProto <_parser>m__1C5(...);
    int <_repeated_itemBeenSeen_codec>m__1C6(...);
    Item <_repeated_itemBeenSeen_codec>m__1C7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetInventoryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetInventoryOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int InventoryDeltaFieldNumber = 2;
    Generic _parser;
    boolean success_;
    InventoryDeltaProto inventoryDelta_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetInventoryOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    InventoryDeltaProto get_InventoryDelta(...);
    void set_InventoryDelta(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetInventoryOutProto <_parser>m__1C8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetInventoryOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DebugUpdateInventoryProto {
    // Fields:
    int PokemonFieldNumber = 1;
    int ItemFieldNumber = 2;
    Generic _parser;
    Generic _repeated_pokemon_codec;
    Generic pokemon_;
    Generic _repeated_item_codec;
    Generic item_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DebugUpdateInventoryProto Clone(...);
    Generic get_Pokemon(...);
    Generic get_Item(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DebugUpdateInventoryProto <_parser>m__1C9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DebugUpdateInventoryProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DebugUpdateInventoryOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    Generic _parser;
    boolean success_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DebugUpdateInventoryOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DebugUpdateInventoryOutProto <_parser>m__1CA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DebugUpdateInventoryOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SetFavoritePokemonProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    int IsFavoriteFieldNumber = 2;
    Generic _parser;
    long pokemonId_;
    boolean isFavorite_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetFavoritePokemonProto Clone(...);
    long get_PokemonId(...);
    void set_PokemonId(...);
    boolean get_IsFavorite(...);
    void set_IsFavorite(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetFavoritePokemonProto <_parser>m__1CB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetFavoritePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SetFavoritePokemonOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    Generic _parser;
    Result result_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetFavoritePokemonOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetFavoritePokemonOutProto <_parser>m__1CC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetFavoritePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_POKEMON_NOT_FOUND = 2;
    Result ERROR_POKEMON_IS_EGG = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class ReleasePokemonProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    int PokemonIdsFieldNumber = 2;
    Generic _parser;
    ulong pokemonId_;
    Generic _repeated_pokemonIds_codec;
    Generic pokemonIds_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ReleasePokemonProto Clone(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    Generic get_PokemonIds(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ReleasePokemonProto <_parser>m__1CD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ReleasePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ReleasePokemonOutProto {
    // Fields:
    int StatusFieldNumber = 1;
    int CandyAwardedFieldNumber = 2;
    Generic _parser;
    Status status_;
    int candyAwarded_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ReleasePokemonOutProto Clone(...);
    Status get_Status(...);
    void set_Status(...);
    int get_CandyAwarded(...);
    void set_CandyAwarded(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ReleasePokemonOutProto <_parser>m__1CE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ReleasePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status POKEMON_DEPLOYED = 2;
    Status FAILED = 3;
    Status ERROR_POKEMON_IS_EGG = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class NicknamePokemonProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    int NicknameFieldNumber = 2;
    Generic _parser;
    ulong pokemonId_;
    String nickname_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    NicknamePokemonProto Clone(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    String get_Nickname(...);
    void set_Nickname(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    NicknamePokemonProto <_parser>m__1CF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ NicknamePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class NicknamePokemonOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    Generic _parser;
    Result result_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    NicknamePokemonOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    NicknamePokemonOutProto <_parser>m__1D0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ NicknamePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_INVALID_NICKNAME = 2;
    Result ERROR_POKEMON_NOT_FOUND = 3;
    Result ERROR_POKEMON_IS_EGG = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class DebugDeletePlayerProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DebugDeletePlayerProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DebugDeletePlayerProto <_parser>m__1D1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DebugDeletePlayerProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DebugDeletePlayerOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    Generic _parser;
    boolean success_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DebugDeletePlayerOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DebugDeletePlayerOutProto <_parser>m__1D2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DebugDeletePlayerOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetSuggestedCodenamesRequestProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetSuggestedCodenamesRequestProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetSuggestedCodenamesRequestProto <_parser>m__1D3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetSuggestedCodenamesRequestProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetSuggestedCodenamesResponseProto {
    // Fields:
    int CodenameFieldNumber = 1;
    int SuccessFieldNumber = 2;
    Generic _parser;
    Generic _repeated_codename_codec;
    Generic codename_;
    boolean success_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetSuggestedCodenamesResponseProto Clone(...);
    Generic get_Codename(...);
    boolean get_Success(...);
    void set_Success(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetSuggestedCodenamesResponseProto <_parser>m__1D4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetSuggestedCodenamesResponseProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CheckCodenameAvailableRequestProto {
    // Fields:
    int CodenameFieldNumber = 1;
    Generic _parser;
    String codename_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CheckCodenameAvailableRequestProto Clone(...);
    String get_Codename(...);
    void set_Codename(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CheckCodenameAvailableRequestProto <_parser>m__1D5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CheckCodenameAvailableRequestProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class ClaimCodenameRequestProto {
    // Fields:
    int CodenameFieldNumber = 1;
    Generic _parser;
    String codename_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    ClaimCodenameRequestProto Clone(...);
    String get_Codename(...);
    void set_Codename(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    ClaimCodenameRequestProto <_parser>m__1D6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ ClaimCodenameRequestProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CodenameResultProto {
    // Fields:
    int CodenameFieldNumber = 1;
    int UserMessageFieldNumber = 2;
    int IsAssignableFieldNumber = 3;
    int StatusFieldNumber = 4;
    Generic _parser;
    String codename_;
    String userMessage_;
    boolean isAssignable_;
    Status status_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CodenameResultProto Clone(...);
    String get_Codename(...);
    void set_Codename(...);
    String get_UserMessage(...);
    void set_UserMessage(...);
    boolean get_IsAssignable(...);
    void set_IsAssignable(...);
    Status get_Status(...);
    void set_Status(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CodenameResultProto <_parser>m__1D7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CodenameResultProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status CODENAME_NOT_AVAILABLE = 2;
    Status CODENAME_NOT_VALID = 3;
    Status CURRENT_OWNER = 4;
    Status CODENAME_CHANGE_NOT_ALLOWED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class SetAvatarProto {
    // Fields:
    int PlayerAvatarProtoFieldNumber = 2;
    Generic _parser;
    PlayerAvatarProto playerAvatarProto_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetAvatarProto Clone(...);
    PlayerAvatarProto get_PlayerAvatarProto(...);
    void set_PlayerAvatarProto(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetAvatarProto <_parser>m__1D8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetAvatarProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SetAvatarOutProto {
    // Fields:
    int StatusFieldNumber = 1;
    int PlayerFieldNumber = 2;
    Generic _parser;
    Status status_;
    ClientPlayerProto player_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetAvatarOutProto Clone(...);
    Status get_Status(...);
    void set_Status(...);
    ClientPlayerProto get_Player(...);
    void set_Player(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetAvatarOutProto <_parser>m__1D9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetAvatarOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status AVATAR_ALREADY_SET = 2;
    Status FAILURE = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class SetContactSettingsProto {
    // Fields:
    int ContactSettingsProtoFieldNumber = 1;
    Generic _parser;
    ContactSettingsProto contactSettingsProto_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetContactSettingsProto Clone(...);
    ContactSettingsProto get_ContactSettingsProto(...);
    void set_ContactSettingsProto(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetContactSettingsProto <_parser>m__1DA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetContactSettingsProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SetContactSettingsOutProto {
    // Fields:
    int StatusFieldNumber = 1;
    int PlayerFieldNumber = 2;
    Generic _parser;
    Status status_;
    ClientPlayerProto player_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetContactSettingsOutProto Clone(...);
    Status get_Status(...);
    void set_Status(...);
    ClientPlayerProto get_Player(...);
    void set_Player(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetContactSettingsOutProto <_parser>m__1DB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetContactSettingsOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status FAILURE = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class SetPlayerTeamProto {
    // Fields:
    int TeamFieldNumber = 1;
    Generic _parser;
    Team team_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetPlayerTeamProto Clone(...);
    Team get_Team(...);
    void set_Team(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetPlayerTeamProto <_parser>m__1DC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetPlayerTeamProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SetPlayerTeamOutProto {
    // Fields:
    int StatusFieldNumber = 1;
    int PlayerFieldNumber = 2;
    Generic _parser;
    Status status_;
    ClientPlayerProto player_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    SetPlayerTeamOutProto Clone(...);
    Status get_Status(...);
    void set_Status(...);
    ClientPlayerProto get_Player(...);
    void set_Player(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    SetPlayerTeamOutProto <_parser>m__1DD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ SetPlayerTeamOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Status {
    // Fields:
    int value__;
    Status UNSET = 0;
    Status SUCCESS = 1;
    Status TEAM_ALREADY_SET = 2;
    Status FAILURE = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class MarkTutorialCompleteProto {
    // Fields:
    int TutorialCompleteFieldNumber = 1;
    int SendMarketingEmailsFieldNumber = 2;
    int SendPushNotificationsFieldNumber = 3;
    Generic _parser;
    Generic _repeated_tutorialComplete_codec;
    Generic tutorialComplete_;
    boolean sendMarketingEmails_;
    boolean sendPushNotifications_;
    Generic <>f__am$cache5;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MarkTutorialCompleteProto Clone(...);
    Generic get_TutorialComplete(...);
    boolean get_SendMarketingEmails(...);
    void set_SendMarketingEmails(...);
    boolean get_SendPushNotifications(...);
    void set_SendPushNotifications(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MarkTutorialCompleteProto <_parser>m__1DE(...);
    int <_repeated_tutorialComplete_codec>m__1DF(...);
    TutorialCompletion <_repeated_tutorialComplete_codec>m__1E0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MarkTutorialCompleteProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class MarkTutorialCompleteOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int PlayerFieldNumber = 2;
    Generic _parser;
    boolean success_;
    ClientPlayerProto player_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    MarkTutorialCompleteOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    ClientPlayerProto get_Player(...);
    void set_Player(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    MarkTutorialCompleteOutProto <_parser>m__1E1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ MarkTutorialCompleteOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CheckAwardedBadgesProto {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CheckAwardedBadgesProto Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CheckAwardedBadgesProto <_parser>m__1E2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CheckAwardedBadgesProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class CheckAwardedBadgesOutProto {
    // Fields:
    int SuccessFieldNumber = 1;
    int AwardedBadgesFieldNumber = 2;
    int AwardedBadgeLevelsFieldNumber = 3;
    Generic _parser;
    boolean success_;
    Generic _repeated_awardedBadges_codec;
    Generic awardedBadges_;
    Generic _repeated_awardedBadgeLevels_codec;
    Generic awardedBadgeLevels_;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;
    Generic <>f__am$cache8;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    CheckAwardedBadgesOutProto Clone(...);
    boolean get_Success(...);
    void set_Success(...);
    Generic get_AwardedBadges(...);
    Generic get_AwardedBadgeLevels(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    CheckAwardedBadgesOutProto <_parser>m__1E3(...);
    int <_repeated_awardedBadges_codec>m__1E4(...);
    HoloBadgeType <_repeated_awardedBadges_codec>m__1E5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ CheckAwardedBadgesOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class RecycleItemProto {
    // Fields:
    int ItemFieldNumber = 1;
    int CountFieldNumber = 2;
    Generic _parser;
    Item item_;
    int count_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    RecycleItemProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    int get_Count(...);
    void set_Count(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    RecycleItemProto <_parser>m__1E6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ RecycleItemProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class RecycleItemOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int NewCountFieldNumber = 2;
    Generic _parser;
    Result result_;
    int newCount_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    RecycleItemOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    int get_NewCount(...);
    void set_NewCount(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    RecycleItemOutProto <_parser>m__1E7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ RecycleItemOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_NOT_ENOUGH_COPIES = 2;
    Result ERROR_CANNOT_RECYCLE_INCUBATORS = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class PtcToken {
    // Fields:
    int TokenFieldNumber = 1;
    int ExpirationFieldNumber = 2;
    Generic _parser;
    String token_;
    int expiration_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PtcToken Clone(...);
    String get_Token(...);
    void set_Token(...);
    int get_Expiration(...);
    void set_Expiration(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PtcToken <_parser>m__1E8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PtcToken Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EquipBadgeProto {
    // Fields:
    int BadgeFieldNumber = 1;
    Generic _parser;
    HoloBadgeType badge_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EquipBadgeProto Clone(...);
    HoloBadgeType get_Badge(...);
    void set_Badge(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EquipBadgeProto <_parser>m__1E9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EquipBadgeProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class EquipBadgeOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int EquippedFieldNumber = 2;
    Generic _parser;
    Result result_;
    EquippedBadgeProto equipped_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    EquipBadgeOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    EquippedBadgeProto get_Equipped(...);
    void set_Equipped(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    EquipBadgeOutProto <_parser>m__1EA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ EquipBadgeOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result COOLDOWN_ACTIVE = 2;
    Result NOT_QUALIFIED = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class GetActionLogRequest {
    // Fields:
    Generic _parser;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetActionLogRequest Clone(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetActionLogRequest <_parser>m__1EB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetActionLogRequest Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class GetActionLogResponse {
    // Fields:
    int ResultFieldNumber = 1;
    int LogFieldNumber = 2;
    Generic _parser;
    Result result_;
    Generic _repeated_log_codec;
    Generic log_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    GetActionLogResponse Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_Log(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    GetActionLogResponse <_parser>m__1EC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ GetActionLogResponse Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class SettingsReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class SettingsActionReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class DownloadSettingsActionProto {
    // Fields:
    int Sha1FieldNumber = 1;
    Generic _parser;
    String sha1_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DownloadSettingsActionProto Clone(...);
    String get_Sha1(...);
    void set_Sha1(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DownloadSettingsActionProto <_parser>m__1F2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DownloadSettingsActionProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class DownloadSettingsResponseProto {
    // Fields:
    int ErrorFieldNumber = 1;
    int Sha1FieldNumber = 2;
    int ValuesFieldNumber = 3;
    Generic _parser;
    String error_;
    String sha1_;
    ByteString values_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    DownloadSettingsResponseProto Clone(...);
    String get_Error(...);
    void set_Error(...);
    String get_Sha1(...);
    void set_Sha1(...);
    ByteString get_Values(...);
    void set_Values(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    DownloadSettingsResponseProto <_parser>m__1F3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ DownloadSettingsResponseProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class SfidaGameReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class RegisterSfidaRequest {
    // Fields:
    int SfidaIdFieldNumber = 1;
    Generic _parser;
    String sfidaId_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    RegisterSfidaRequest Clone(...);
    String get_SfidaId(...);
    void set_SfidaId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    RegisterSfidaRequest <_parser>m__1F4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ RegisterSfidaRequest Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class RegisterSfidaResponse {
    // Fields:
    int AccessTokenFieldNumber = 1;
    Generic _parser;
    ByteString accessToken_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    RegisterSfidaResponse Clone(...);
    ByteString get_AccessToken(...);
    void set_AccessToken(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    RegisterSfidaResponse <_parser>m__1F5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ RegisterSfidaResponse Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TradingReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class TradingSearchProto {
    // Fields:
    int LatFieldNumber = 1;
    int LngFieldNumber = 2;
    Generic _parser;
    double lat_;
    double lng_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingSearchProto Clone(...);
    double get_Lat(...);
    void set_Lat(...);
    double get_Lng(...);
    void set_Lng(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingSearchProto <_parser>m__1F6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingSearchProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TradingSearchOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int PlayerNamesFieldNumber = 2;
    Generic _parser;
    Result result_;
    Generic _repeated_playerNames_codec;
    Generic playerNames_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingSearchOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    Generic get_PlayerNames(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingSearchOutProto <_parser>m__1F7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingSearchOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class TradingOfferProto {
    // Fields:
    int TradingPlayerFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    Generic _parser;
    String tradingPlayer_;
    ulong pokemonId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingOfferProto Clone(...);
    String get_TradingPlayer(...);
    void set_TradingPlayer(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingOfferProto <_parser>m__1F8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingOfferProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TradingOfferOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int TradeIdFieldNumber = 2;
    Generic _parser;
    Result result_;
    ulong tradeId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingOfferOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    ulong get_TradeId(...);
    void set_TradeId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingOfferOutProto <_parser>m__1F9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingOfferOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result CONNECTION_LOST = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class PollForTradeResponseProto {
    // Fields:
    int TradeIdFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    int RequestCancelFieldNumber = 3;
    Generic _parser;
    ulong tradeId_;
    ulong pokemonId_;
    boolean requestCancel_;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PollForTradeResponseProto Clone(...);
    ulong get_TradeId(...);
    void set_TradeId(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean get_RequestCancel(...);
    void set_RequestCancel(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PollForTradeResponseProto <_parser>m__1FA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PollForTradeResponseProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class PollForTradeResponseOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int ReturnPokemonFieldNumber = 2;
    Generic _parser;
    Result result_;
    PokemonProto returnPokemon_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    PollForTradeResponseOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_ReturnPokemon(...);
    void set_ReturnPokemon(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    PollForTradeResponseOutProto <_parser>m__1FB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ PollForTradeResponseOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result ACCEPT_OFFER = 1;
    Result TRADE_CANCELED = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class TradingResultProto {
    // Fields:
    int TradeIdFieldNumber = 1;
    int PlayerAcceptFieldNumber = 2;
    Generic _parser;
    ulong tradeId_;
    boolean playerAccept_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingResultProto Clone(...);
    ulong get_TradeId(...);
    void set_TradeId(...);
    boolean get_PlayerAccept(...);
    void set_PlayerAccept(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingResultProto <_parser>m__1FC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingResultProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class TradingResultOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    Generic _parser;
    Result result_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    TradingResultOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    TradingResultOutProto <_parser>m__1FD(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ TradingResultOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result TRADE_COMPLETE = 1;
    Result TRADE_CANCELLED_OFFER = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UpgradeReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UpgradePokemonProto {
    // Fields:
    int PokemonIdFieldNumber = 1;
    Generic _parser;
    ulong pokemonId_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UpgradePokemonProto Clone(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UpgradePokemonProto <_parser>m__1FE(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UpgradePokemonProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UpgradePokemonOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int UpgradedPokemonFieldNumber = 2;
    Generic _parser;
    Result result_;
    PokemonProto upgradedPokemon_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UpgradePokemonOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    PokemonProto get_UpgradedPokemon(...);
    void set_UpgradedPokemon(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UpgradePokemonOutProto <_parser>m__1FF(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UpgradePokemonOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_POKEMON_NOT_FOUND = 2;
    Result ERROR_INSUFFICIENT_RESOURCES = 3;
    Result ERROR_UPGRADE_NOT_AVAILABLE = 4;
    Result ERROR_POKEMON_IS_DEPLOYED = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemReflection {
    // Fields:
    FileDescriptor descriptor;

    // Methods:
    void .cctor(...);
    FileDescriptor get_Descriptor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemPotionProto {
    // Fields:
    int ItemFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    Generic _parser;
    Item item_;
    ulong pokemonId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemPotionProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemPotionProto <_parser>m__200(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemPotionProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemPotionOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int StaminaFieldNumber = 2;
    Generic _parser;
    Result result_;
    int stamina_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemPotionOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    int get_Stamina(...);
    void set_Stamina(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemPotionOutProto <_parser>m__201(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemPotionOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_NO_POKEMON = 2;
    Result ERROR_CANNOT_USE = 3;
    Result ERROR_DEPLOYED_TO_FORT = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemReviveProto {
    // Fields:
    int ItemFieldNumber = 1;
    int PokemonIdFieldNumber = 2;
    Generic _parser;
    Item item_;
    ulong pokemonId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemReviveProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    ulong get_PokemonId(...);
    void set_PokemonId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemReviveProto <_parser>m__202(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemReviveProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemReviveOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int StaminaFieldNumber = 2;
    Generic _parser;
    Result result_;
    int stamina_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemReviveOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    int get_Stamina(...);
    void set_Stamina(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemReviveOutProto <_parser>m__203(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemReviveOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_NO_POKEMON = 2;
    Result ERROR_CANNOT_USE = 3;
    Result ERROR_DEPLOYED_TO_FORT = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemGymProto {
    // Fields:
    int ItemFieldNumber = 1;
    int GymIdFieldNumber = 2;
    int PlayerLatDegreesFieldNumber = 3;
    int PlayerLngDegreesFieldNumber = 4;
    Generic _parser;
    Item item_;
    String gymId_;
    double playerLatDegrees_;
    double playerLngDegrees_;
    Generic <>f__am$cache5;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemGymProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    String get_GymId(...);
    void set_GymId(...);
    double get_PlayerLatDegrees(...);
    void set_PlayerLatDegrees(...);
    double get_PlayerLngDegrees(...);
    void set_PlayerLngDegrees(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemGymProto <_parser>m__204(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemGymProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemGymOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int UpdatedGpFieldNumber = 2;
    Generic _parser;
    Result result_;
    long updatedGp_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemGymOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    long get_UpdatedGp(...);
    void set_UpdatedGp(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemGymOutProto <_parser>m__205(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemGymOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_CANNOT_USE = 2;
    Result ERROR_NOT_IN_RANGE = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemXpBoostProto {
    // Fields:
    int ItemFieldNumber = 1;
    Generic _parser;
    Item item_;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemXpBoostProto Clone(...);
    Item get_Item(...);
    void set_Item(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemXpBoostProto <_parser>m__206(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemXpBoostProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemXpBoostOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int AppliedItemsFieldNumber = 2;
    Generic _parser;
    Result result_;
    AppliedItemsProto appliedItems_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemXpBoostOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    AppliedItemsProto get_AppliedItems(...);
    void set_AppliedItems(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemXpBoostOutProto <_parser>m__207(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemXpBoostOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_INVALID_ITEM_TYPE = 2;
    Result ERROR_XP_BOOST_ALREADY_ACTIVE = 3;
    Result ERROR_NO_ITEMS_REMAINING = 4;
    Result ERROR_LOCATION_UNSET = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Holoholo.Rpc
class UseItemEggIncubatorProto {
    // Fields:
    int ItemIdFieldNumber = 1;
    int PokemondIdFieldNumber = 2;
    Generic _parser;
    String itemId_;
    long pokemondId_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemEggIncubatorProto Clone(...);
    String get_ItemId(...);
    void set_ItemId(...);
    long get_PokemondId(...);
    void set_PokemondId(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemEggIncubatorProto <_parser>m__208(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemEggIncubatorProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: Holoholo.Rpc
class UseItemEggIncubatorOutProto {
    // Fields:
    int ResultFieldNumber = 1;
    int EggIncubatorFieldNumber = 2;
    Generic _parser;
    Result result_;
    EggIncubatorProto eggIncubator_;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    Generic get_Parser(...);
    MessageDescriptor get_Descriptor(...);
    UseItemEggIncubatorOutProto Clone(...);
    Result get_Result(...);
    void set_Result(...);
    EggIncubatorProto get_EggIncubator(...);
    void set_EggIncubator(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    String ToString(...);
    void WriteTo(...);
    int CalculateSize(...);
    void MergeFrom(...);
    void MergeFrom(...);
    UseItemEggIncubatorOutProto <_parser>m__209(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void MergeFrom(...);
    /*[05]*/ void WriteTo(...);
    /*[06]*/ int CalculateSize(...);
    /*[07]*/ MessageDescriptor Google.Protobuf.IMessage.get_Descriptor(...);
    /*[08]*/ boolean Equals(...);
    /*[09]*/ UseItemEggIncubatorOutProto Clone(...);
    /*[10]*/ void MergeFrom(...);
}

// Namespace: 
class Result {
    // Fields:
    int value__;
    Result UNSET = 0;
    Result SUCCESS = 1;
    Result ERROR_INCUBATOR_NOT_FOUND = 2;
    Result ERROR_POKEMON_EGG_NOT_FOUND = 3;
    Result ERROR_POKEMON_ID_NOT_EGG = 4;
    Result ERROR_INCUBATOR_ALREADY_IN_USE = 5;
    Result ERROR_POKEMON_ALREADY_INCUBATING = 6;
    Result ERROR_INCUBATOR_NO_USES_REMAINING = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Types {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.NuclearOption
class ResetGame {
    // Methods:
    void .ctor(...);
    IEnumerator Start(...);
    void DestroyAllGameObjects(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScaleTarget {
    // Fields:
    Transform target;
    float scaleAmount;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnClick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SetOpacity {
    // Fields:
    Material mat;
    float opacity;
    float fade_speed;
    boolean fadeIn;
    boolean fadeOut;

    // Methods:
    void .ctor(...);
    IEnumerator FaderOut(...);
    IEnumerator FaderIn(...);
    void Update(...);
    void FadeIn(...);
    void FadeOut(...);
    void OnValidate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ShaderLOD {
    // Methods:
    void .ctor(...);
    void Start(...);
    void UpdateGlobal(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.SignalProcessing
class ISignalClassifier`1 {
    // Methods:
    float Classify(...);
}

// Namespace: Niantic.Holoholo.StreetView
class StreetViewAPI {
    // Fields:
    String IMAGERY_TYPE_INDOOR = "indoor";
    String IMAGERY_TYPE_OUTDOOR = "outdoor";
    String API_KEY = "AIzaSyBsF0XUO1q445riJNFTGgIrOAV2vMk8dsY";
    Generic JSON_HEADERS;
    Session session;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void OnEnable(...);
    void GetPanoMetadata(...);
    void GetStreetViewPano(...);
    void GetStreetViewPano(...);
    IEnumerator WaitForSession(...);
    IEnumerator CoGetPanoMetadata(...);
    IEnumerator CoGetStreetViewPano(...);
    Texture2D CombineTextures(...);
    int RoundUpPowerOfTwo(...);
    void CopyColors(...);
    void RequestMetadata(...);
    void RequestPanoId(...);
    void EstablishSession(...);
    void RequestTiles(...);
    void GetImageFromUrl(...);
    void PostJsonRequest(...);
    IEnumerator CoPostJsonRequest(...);
    IEnumerator CoSendRequest(...);
    void <OnEnable>m__20C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Session {
    // Fields:
    String <session>k__BackingField;
    int <expiry>k__BackingField;
    int <tileWidth>k__BackingField;
    int <tileHeight>k__BackingField;
    String <imageFormat>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_session(...);
    void set_session(...);
    int get_expiry(...);
    void set_expiry(...);
    int get_tileWidth(...);
    void set_tileWidth(...);
    int get_tileHeight(...);
    void set_tileHeight(...);
    String get_imageFormat(...);
    void set_imageFormat(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PanoIdRequest {
    // Fields:
    Generic locations;
    int radius;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PanoIdResponse {
    // Fields:
    Generic <panoIds>k__BackingField;

    // Methods:
    void .ctor(...);
    Generic get_panoIds(...);
    void set_panoIds(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PanoMetadata {
    // Fields:
    String <panoId>k__BackingField;
    double <lat>k__BackingField;
    double <lng>k__BackingField;
    int <imageWidth>k__BackingField;
    int <imageHeight>k__BackingField;
    int <tileWidth>k__BackingField;
    int <tileHeight>k__BackingField;
    double <heading>k__BackingField;
    double <tilt>k__BackingField;
    double <roll>k__BackingField;
    String <imageryType>k__BackingField;
    String <date>k__BackingField;
    String <copyright>k__BackingField;
    String <reportProblemLink>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_panoId(...);
    void set_panoId(...);
    double get_lat(...);
    void set_lat(...);
    double get_lng(...);
    void set_lng(...);
    int get_imageWidth(...);
    void set_imageWidth(...);
    int get_imageHeight(...);
    void set_imageHeight(...);
    int get_tileWidth(...);
    void set_tileWidth(...);
    int get_tileHeight(...);
    void set_tileHeight(...);
    double get_heading(...);
    void set_heading(...);
    double get_tilt(...);
    void set_tilt(...);
    double get_roll(...);
    void set_roll(...);
    String get_imageryType(...);
    void set_imageryType(...);
    String get_date(...);
    void set_date(...);
    String get_copyright(...);
    void set_copyright(...);
    String get_reportProblemLink(...);
    void set_reportProblemLink(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class StreetViewPano {
    // Fields:
    PanoMetadata metadata;
    Texture2D texture;
    Vector2 scale;
    Vector2 offset;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class TimeUtil {
    // Fields:
    DateTime UNIX_EPOCH;
    long TICKS_PER_MS;
    long nowMsCached;
    int cachedFromFrame;

    // Methods:
    void .cctor(...);
    DateTime TimestampToDateTime(...);
    long DateTimeToTimestamp(...);
    int DateTimeToAge(...);
    float MsToSeconds(...);
    long NowMs(...);
    String MsToCulturalString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.GameInput
class BlockingInputLayer {
    // Methods:
    void .ctor(...);
    String get_Name(...);
    void OnStart(...);
    void OnStop(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void OnStart(...);
    /*[06]*/ void OnStop(...);
}

// Namespace: 
class FixedRotation {
    // Fields:
    Vector3 Axis;
    int NumberSlices;
    float RotateTime;
    int sliceTarget;
    int sliceOrigin;
    float delta;
    Dir mode;
    Quaternion target;
    Quaternion origin;

    // Methods:
    void .ctor(...);
    Dir get_Mode(...);
    int get_Slice(...);
    void Update(...);
    boolean SetPivot(...);
    void Rotate(...);
    int wrap(...);
    void swap(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Dir {
    // Fields:
    int value__;
    Dir None = 0;
    Dir Clockwise = 1;
    Dir CClockwise = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.GameInput
class InputLayerStack {
    // Fields:
    Generic layers;
    Generic LayerChanged;

    // Methods:
    void .ctor(...);
    void add_LayerChanged(...);
    void remove_LayerChanged(...);
    Generic get_Layers(...);
    IInputLayer get_CurrentLayer(...);
    IReceipt PushLayer(...);
    void RemoveLayer(...);
    IInputLayer PopLastLayer(...);
    void PopLayer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_LayerChanged(...);
    /*[05]*/ void remove_LayerChanged(...);
    /*[06]*/ IInputLayer get_CurrentLayer(...);
    /*[07]*/ Generic get_Layers(...);
    /*[08]*/ IReceipt PushLayer(...);
}

// Namespace: Niantic.Holoholo
class TransformExt {
    // Methods:
    Transform GetChildRecursive(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class AutoHide {
    // Fields:
    MonoBehaviour uiComponent;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);
    MonoBehaviour GetUIComponent(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Auto_Translate {
    // Methods:
    void .ctor(...);
    void Start(...);
    void Translate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DynamicGridSize {
    // Fields:
    GridLayoutGroup grid;
    ContentSizeFitter fitter;
    boolean initialized;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void Start(...);
    void OnRectTransformDimensionsChange(...);
    void CalculateGridSize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
}

// Namespace: Niantic.Holoholo.UI
class DynoScrollRect`2 {
    // Fields:
    Vector2 dragLockNormalizedDistance;
    float lerpSpeed;
    boolean scrollToTopWhenChangingPages;
    FlickGesture flickGesture;
    int dragStartIndex;
    Vector2 prevDragPosition;
    Generic lerpLocalPosition;
    Generic lerpAnchorPosition;
    Vector3 lerpLocalTarget;
    Vector2 lerpAnchorTarget;
    Generic itemDescriptors;
    int numItems;
    int firstDescriptorIndex;
    int numPages;
    cmod_reqd pageRoots;
    cmod_reqd pageGuis;
    cmod_reqd pageCharacters;
    int leftmostPage;
    float modelSpacing;
    IPokemonDetailRenderer pokemonDetailRenderer;
    IPokemonTypeBackground pokemonTypeBackground;
    Button nextButton;
    Button prevButton;
    boolean xLocked;
    boolean yLocked;
    Generic dragStatus;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Cleanup(...);
    void UpdateContent(...);
    var CurrentPageGui(...);
    HoloCharacter CurrentCharacterModel(...);
    void OnBeginDrag(...);
    void OnDrag(...);
    void OnEndDrag(...);
    void OnFlick(...);
    HoloPokemonType CurrentPokemonType(...);
    void UpdatePage(...);
    var CreatePage(...);
    void LateUpdate(...);
    void LerpAnchoredPosition(...);
    void LerpLocalPosition(...);
    void UpdateLocalPositionLerp(...);
    void UpdateAnchorPositionLerp(...);
    void UpdateTypeBackground(...);
    void UpdateModelPositions(...);
    void UpdateButtons(...);
    void CreatePages(...);
    void UpdatePages(...);
    void ResizeContainerToFitCurrentPage(...);
    void ContentIncrement(...);
    void ContentDecrement(...);
    void UpdatePagePositions(...);
    void OnNextScreenButton(...);
    void OnPreviousScreenButton(...);
    void NextScreenSwipe(...);
    void PreviousScreenSwipe(...);
    Vector3 GetPageScrollPosition(...);
    Vector3 FindClosestPagePosition(...);
    float GetCurrentPagePosition(...);
    void SetCurrentPagePosition(...);
    int CurrentDescriptorIndex(...);
    int CurrentPageIndex(...);
    float GetPageWidth(...);
    void <Init>m__214(...);
    void <Init>m__215(...);
    void <OnEndDrag>m__216(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnBeginDrag(...);
    /*[17]*/ void OnInitializePotentialDrag(...);
    /*[18]*/ void OnDrag(...);
    /*[19]*/ void OnEndDrag(...);
    /*[20]*/ void OnScroll(...);
    /*[21]*/ void Rebuild(...);
    /*[22]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[23]*/ void LayoutComplete(...);
    /*[24]*/ void GraphicUpdateComplete(...);
    /*[25]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void SetLayoutHorizontal(...);
    /*[36]*/ void SetLayoutVertical(...);
    /*[37]*/ void Rebuild(...);
    /*[38]*/ void LayoutComplete(...);
    /*[39]*/ void GraphicUpdateComplete(...);
    /*[40]*/ void StopMovement(...);
    /*[41]*/ void OnScroll(...);
    /*[42]*/ void OnInitializePotentialDrag(...);
    /*[43]*/ void OnBeginDrag(...);
    /*[44]*/ void OnEndDrag(...);
    /*[45]*/ void OnDrag(...);
    /*[46]*/ void SetContentAnchoredPosition(...);
    /*[47]*/ void LateUpdate(...);
    /*[48]*/ void CalculateLayoutInputHorizontal(...);
    /*[49]*/ void CalculateLayoutInputVertical(...);
    /*[50]*/ float get_minWidth(...);
    /*[51]*/ float get_preferredWidth(...);
    /*[52]*/ float get_flexibleWidth(...);
    /*[53]*/ float get_minHeight(...);
    /*[54]*/ float get_preferredHeight(...);
    /*[55]*/ float get_flexibleHeight(...);
    /*[56]*/ int get_layoutPriority(...);
    /*[57]*/ void SetLayoutHorizontal(...);
    /*[58]*/ void SetLayoutVertical(...);
    /*[59]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[60]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
}

// Namespace: 
class DragStatus {
    // Fields:
    int value__;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class InitialAnimState {
    // Fields:
    AnimationClip initialAnim;

    // Methods:
    void .ctor(...);
    void Awake(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LoadingScreenRandomPokemon {
    // Methods:
    void .ctor(...);
    void RandomizePokemon(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ScrollRectElement {
    // Fields:
    ScrollRect scrollRect;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDrag(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnDrag(...);
}

// Namespace: Niantic.Holoholo
class MonoBehaviourExt {
    // Methods:
    void SafeStopCoroutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class NDestroy {
    // Fields:
    boolean <TestMode>k__BackingField;

    // Methods:
    boolean get_TestMode(...);
    void set_TestMode(...);
    void UnityAbstractedDestroy(...);
    void Asset(...);
    void GameObject(...);
    void Component(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Web
class WebHelper {
    // Fields:
    String httpPrefix = "http://";
    String httpsPrefix = "https://";

    // Methods:
    void SafeOpenUrl(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FpsCounter {
    // Fields:
    Text text;
    float updateFrequencySeconds;
    float time;
    int count;

    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class ClickableIconTextListAdapter {
    // Fields:
    Generic icons;

    // Methods:
    void .ctor(...);
    Generic get_Icons(...);
    void set_Icons(...);
    ListItemClickableIconTextView CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ListItemClickableIconTextView CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: Niantic.Holoholo.Widget
class ListItemClickableIconTextView {
    // Fields:
    Image image;

    // Methods:
    void .ctor(...);
    Sprite get_Icon(...);
    void set_Icon(...);
    Color get_Color(...);
    void set_Color(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class ClickableListAdapter`2 {
    // Fields:
    Generic OnItemClick;

    // Methods:
    void .ctor(...);
    void add_OnItemClick(...);
    void remove_OnItemClick(...);
    var CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ var CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: 
class ItemClickEventArgs {
    // Fields:
    int index;
    var item;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ItemClickEventHandler {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: Niantic.Holoholo.Widget
class ClickableListAdapter {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ListItemClickableView CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: Niantic.Holoholo.Widget
class IListItemView {
}

// Namespace: Niantic.Holoholo.Widget
class ListAdapterBase`2 {
    // Fields:
    Generic items;
    Generic views;
    Generic OnItemsChanged;

    // Methods:
    void .ctor(...);
    void add_OnItemsChanged(...);
    void remove_OnItemsChanged(...);
    int get_Count(...);
    Generic get_Items(...);
    void set_Items(...);
    RectTransform GetView(...);
    var GetView(...);
    void Dispose(...);
    void DestroyViews(...);
    void HandleDataChange(...);
    var CreateView(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
}

// Namespace: Niantic.Holoholo.Widget
class ListItemTextView {
    // Fields:
    Text text;

    // Methods:
    void .ctor(...);
    String get_Text(...);
    void set_Text(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget.ListViewSamples
class ClickableIconTextListSample {
    // Fields:
    ListView listView;
    ClickableIconTextListAdapter adapter;
    Sprite icon;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void Start(...);
    void <Start>m__219(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget.ListViewSamples
class ClickableListSample {
    // Fields:
    ListView listView;
    ClickableTextListAdapter adapter;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void Start(...);
    void <Start>m__21A(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget.ListViewSamples
class TextListSample {
    // Fields:
    ListView listView;
    TextListAdapter adapter;

    // Methods:
    void .ctor(...);
    void Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class TextListAdapter {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ ListItemTextView CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: Niantic.Holoholo.Widget
class TextListAdapter`2 {
    // Fields:
    var itemViewPrefab;

    // Methods:
    void .ctor(...);
    var CreateView(...);
    String GetDisplayText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void add_OnItemsChanged(...);
    /*[06]*/ void remove_OnItemsChanged(...);
    /*[07]*/ int get_Count(...);
    /*[08]*/ RectTransform GetView(...);
    /*[09]*/ var CreateView(...);
    /*[10]*/ String GetDisplayText(...);
}

// Namespace: Niantic.Holoholo.Widget
class ScrollRectEx {
    // Fields:
    boolean routeToParent;
    float scrollVelocityAmplifier;

    // Methods:
    void .ctor(...);
    void DoForParents(...);
    void OnInitializePotentialDrag(...);
    void OnDrag(...);
    void OnBeginDrag(...);
    void OnEndDrag(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnBeginDrag(...);
    /*[17]*/ void OnInitializePotentialDrag(...);
    /*[18]*/ void OnDrag(...);
    /*[19]*/ void OnEndDrag(...);
    /*[20]*/ void OnScroll(...);
    /*[21]*/ void Rebuild(...);
    /*[22]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
    /*[23]*/ void LayoutComplete(...);
    /*[24]*/ void GraphicUpdateComplete(...);
    /*[25]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[26]*/ void CalculateLayoutInputHorizontal(...);
    /*[27]*/ void CalculateLayoutInputVertical(...);
    /*[28]*/ float get_minWidth(...);
    /*[29]*/ float get_preferredWidth(...);
    /*[30]*/ float get_flexibleWidth(...);
    /*[31]*/ float get_minHeight(...);
    /*[32]*/ float get_preferredHeight(...);
    /*[33]*/ float get_flexibleHeight(...);
    /*[34]*/ int get_layoutPriority(...);
    /*[35]*/ void SetLayoutHorizontal(...);
    /*[36]*/ void SetLayoutVertical(...);
    /*[37]*/ void Rebuild(...);
    /*[38]*/ void LayoutComplete(...);
    /*[39]*/ void GraphicUpdateComplete(...);
    /*[40]*/ void StopMovement(...);
    /*[41]*/ void OnScroll(...);
    /*[42]*/ void OnInitializePotentialDrag(...);
    /*[43]*/ void OnBeginDrag(...);
    /*[44]*/ void OnEndDrag(...);
    /*[45]*/ void OnDrag(...);
    /*[46]*/ void SetContentAnchoredPosition(...);
    /*[47]*/ void LateUpdate(...);
    /*[48]*/ void CalculateLayoutInputHorizontal(...);
    /*[49]*/ void CalculateLayoutInputVertical(...);
    /*[50]*/ float get_minWidth(...);
    /*[51]*/ float get_preferredWidth(...);
    /*[52]*/ float get_flexibleWidth(...);
    /*[53]*/ float get_minHeight(...);
    /*[54]*/ float get_preferredHeight(...);
    /*[55]*/ float get_flexibleHeight(...);
    /*[56]*/ int get_layoutPriority(...);
    /*[57]*/ void SetLayoutHorizontal(...);
    /*[58]*/ void SetLayoutVertical(...);
    /*[59]*/ boolean UnityEngine.UI.ICanvasElement.IsDestroyed(...);
    /*[60]*/ Transform UnityEngine.UI.ICanvasElement.get_transform(...);
}

// Namespace: Niantic.Holoholo.Widget
class TabButton {
    // Fields:
    Text titleText;
    Color activeTextColor;
    Color inactiveTextColor;
    boolean selected;

    // Methods:
    void .ctor(...);
    String get_title(...);
    void set_title(...);
    boolean get_Selected(...);
    void set_Selected(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class TextCase {
    // Fields:
    Text text;
    CaseType caseType;

    // Methods:
    void .ctor(...);
    CaseType get_Case(...);
    void set_Case(...);
    void Start(...);
    void OnEnable(...);
    void OnDisable(...);
    void SetCallback(...);
    void LayoutDirty(...);
    void UpdateText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CaseType {
    // Fields:
    int value__;
    CaseType Upper = 0;
    CaseType Lower = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Widget
class TextEllipsis {
    // Fields:
    Text label;
    Coroutine updateTextRoutine;
    String suffix;

    // Methods:
    void .ctor(...);
    String get_Suffix(...);
    void set_Suffix(...);
    void Start(...);
    void OnEnable(...);
    void OnDisable(...);
    void SetCallback(...);
    void UpdateText(...);
    IEnumerator WaitAndUpdateText(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
}

// Namespace: Niantic.Holoholo.Widget
class TransformChildrenChangeMonitor {
    // Fields:
    Action TransformChildrenChangedEvent;

    // Methods:
    void .ctor(...);
    void add_TransformChildrenChangedEvent(...);
    void remove_TransformChildrenChangedEvent(...);
    void OnTransformChildrenChanged(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class TransformTether {
    // Fields:
    Vector3 TetherRatio;
    Transform Target;
    Transform prevTarget;
    Vector3 prevPosition;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void LateUpdate(...);
    void <OnEnable>m__21F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Services
class IObservableService`1 {
    // Methods:
    IReceipt Observe(...);
}

// Namespace: Niantic.Holoholo.Services
class ObservableService`1 {
    // Fields:
    Generic subscribers;
    Generic subscribersTemp;
    var <Observed>k__BackingField;
    boolean <ObservedSet>k__BackingField;

    // Methods:
    void .ctor(...);
    var get_Observed(...);
    void set_Observed(...);
    boolean get_ObservedSet(...);
    void set_ObservedSet(...);
    void Awake(...);
    void Reset(...);
    void Notify(...);
    IReceipt Observe(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
}

// Namespace: 
class RangeAction {
    // Fields:
    LatLng Location;
    float DistanceM;
    Action Action;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Rpc
class TrackedRpcCallback`1 {
    // Fields:
    Generic callbackFunction;
    Generic <RpcId>k__BackingField;

    // Methods:
    void .ctor(...);
    Generic get_RpcId(...);
    void set_RpcId(...);
    void OnResponse(...);
    Generic op_Implicit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Services
class SettableObservableService`1 {
    // Methods:
    void .ctor(...);
    void Set(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IReceipt Observe(...);
    /*[05]*/ void Awake(...);
    /*[06]*/ void Set(...);
}

// Namespace: Niantic.Holoholo.Services
class ISettableObservableService`1 {
    // Methods:
    void Set(...);
}

// Namespace: Niantic.Holoholo.Sponsors
class SponsorData {
    // Fields:
    Sponsor Sponsor;
    RenderingType RenderingType;
    Sprite GymLogo;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class CollisionTestPass {
    // Methods:
    void .ctor(...);
    void Start(...);
    void Update(...);
    void OnCollisionEnter(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class CallTesting_Prefab {
    // Fields:
    TestCollection objectCollection;
    FilterForCondition filterCondition;
    Functions callOnMethod;
    Method methodToCall;
    String objectNameFilter;
    String transformFilter;
    String animClipName;
    String shaderName;
    String shaderProperty;
    int shaderInt;
    int afterFrames;
    float afterSeconds;
    int m_StartFrame;
    float m_StartTime;

    // Methods:
    void .ctor(...);
    void TryToCallTesting(...);
    void Start(...);
    void Update(...);
    void CallAfterFrames(...);
    void CallAfterSeconds(...);
    void OnDisable(...);
    void OnEnable(...);
    void DoProcessGameObjects(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class TestCollection {
    // Fields:
    cmod_reqd testGameObjects;
    cmod_reqd testMaterials;
    Generic <>f__am$cache2;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void DoSortGameObjects(...);
    void DoSortMaterials(...);
    int <DoSortGameObjects>m__228(...);
    int <DoSortMaterials>m__229(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class FilterForCondition {
    // Fields:
    int value__;
    FilterForCondition isPositionReset = 0;
    FilterForCondition isRotationReset = 1;
    FilterForCondition isScaleGlobalUnitONe = 2;
    FilterForCondition hasAnimatorController = 3;
    FilterForCondition isAnimatorClipCurrentDefault = 4;
    FilterForCondition hasShaderType = 5;
    FilterForCondition isShaderTypePropertySet = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Functions {
    // Fields:
    int value__;
    Functions OnProcessGameObjects = 0;
    Functions CallAfterSeconds = 1;
    Functions CallAfterFrames = 2;
    Functions Start = 3;
    Functions Update = 4;
    Functions OnEnable = 5;
    Functions OnDisable = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Method {
    // Fields:
    int value__;
    Method Pass = 0;
    Method Fail = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Test
class MockCoroutineTester {
    // Methods:
    void .ctor(...);
    IEnumerator InfiniteCoroutine(...);
    IEnumerator EmptyCoroutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.InputSources
class TuioInput {
    // Fields:
    String SOURCE_TUIO = "TUIO";
    int tuioPort;
    InputType supportedInputs;
    Generic tuioObjectMappings;
    Tags cursorTags;
    Tags blobTags;
    Tags objectTags;
    TuioServer server;
    CursorProcessor cursorProcessor;
    ObjectProcessor objectProcessor;
    BlobProcessor blobProcessor;
    Generic cursorToInternalId;
    Generic blobToInternalId;
    Generic objectToInternalId;
    int screenWidth;
    int screenHeight;

    // Methods:
    void .ctor(...);
    int get_TuioPort(...);
    void set_TuioPort(...);
    InputType get_SupportedInputs(...);
    void set_SupportedInputs(...);
    Generic get_TuioObjectMappings(...);
    Tags get_CursorTags(...);
    Tags get_BlobTags(...);
    Tags get_ObjectTags(...);
    void UpdateInput(...);
    void CancelTouch(...);
    void OnEnable(...);
    void OnDisable(...);
    void connect(...);
    void disconnect(...);
    void updateInputs(...);
    void updateBlobProperties(...);
    void updateObjectProperties(...);
    String getTagById(...);
    void OnCursorAdded(...);
    void OnCursorUpdated(...);
    void OnCursorRemoved(...);
    void OnBlobAdded(...);
    void OnBlobUpdated(...);
    void OnBlobRemoved(...);
    void OnObjectAdded(...);
    void OnObjectUpdated(...);
    void OnObjectRemoved(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICoordinatesRemapper get_CoordinatesRemapper(...);
    /*[05]*/ void set_CoordinatesRemapper(...);
    /*[06]*/ void UpdateInput(...);
    /*[07]*/ void CancelTouch(...);
    /*[08]*/ void UpdateInput(...);
    /*[09]*/ void CancelTouch(...);
    /*[10]*/ void OnEnable(...);
    /*[11]*/ void OnDisable(...);
    /*[12]*/ TouchPoint beginTouch(...);
    /*[13]*/ void updateTouch(...);
    /*[14]*/ void moveTouch(...);
    /*[15]*/ void endTouch(...);
    /*[16]*/ void cancelTouch(...);
}

// Namespace: 
class InputType {
    // Fields:
    int value__;
    InputType Cursors = 1;
    InputType Blobs = 2;
    InputType Objects = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript
class Tags {
    // Fields:
    String INPUT_TOUCH = "Touch";
    String INPUT_MOUSE = "Mouse";
    String INPUT_PEN = "Pen";
    String INPUT_OBJECT = "Object";
    Tags EMPTY;
    Generic tagList;
    Generic tags;
    String stringValue;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .cctor(...);
    boolean HasTag(...);
    void OnBeforeSerialize(...);
    void OnAfterDeserialize(...);
    String ToString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void OnBeforeSerialize(...);
    /*[05]*/ void OnAfterDeserialize(...);
}

// Namespace: TUIOsharp
class TuioServer {
    // Fields:
    Generic ErrorOccured;
    int <Port>k__BackingField;
    UDPReceiver udpReceiver;
    Generic processors;

    // Methods:
    int get_Port(...);
    void set_Port(...);
    void .ctor(...);
    void Connect(...);
    void Disconnect(...);
    void AddDataProcessor(...);
    void RemoveDataProcessor(...);
    void RemoveAllDataProcessors(...);
    void processMessage(...);
    void handlerOscErrorOccured(...);
    void handlerOscMessageReceived(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: OSCsharp.Net
class UDPReceiver {
    // Fields:
    Generic PacketReceived;
    Generic BundleReceived;
    Generic ErrorOccured;
    Generic messageReceivedInvoker;
    IPAddress <IPAddress>k__BackingField;
    int <Port>k__BackingField;
    IPAddress <MulticastAddress>k__BackingField;
    IPEndPoint <IPEndPoint>k__BackingField;
    TransmissionType <TransmissionType>k__BackingField;
    boolean <ConsumeParsingExceptions>k__BackingField;
    UdpClient udpClient;
    boolean acceptingConnections;
    AsyncCallback callback;

    // Methods:
    void add_ErrorOccured(...);
    void remove_ErrorOccured(...);
    void add_MessageReceived(...);
    void remove_MessageReceived(...);
    IPAddress get_IPAddress(...);
    void set_IPAddress(...);
    int get_Port(...);
    void set_Port(...);
    IPAddress get_MulticastAddress(...);
    void set_MulticastAddress(...);
    IPEndPoint get_IPEndPoint(...);
    void set_IPEndPoint(...);
    TransmissionType get_TransmissionType(...);
    void set_TransmissionType(...);
    boolean get_ConsumeParsingExceptions(...);
    void set_ConsumeParsingExceptions(...);
    boolean get_IsRunning(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void Start(...);
    void Stop(...);
    void endReceive(...);
    void parseData(...);
    void onPacketReceived(...);
    void onBundleReceived(...);
    void onMessageReceived(...);
    void onError(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: OSCsharp.Net
class TransmissionType {
    // Fields:
    int value__;
    TransmissionType Unicast = 0;
    TransmissionType Multicast = 1;
    TransmissionType Broadcast = 2;
    TransmissionType LocalBroadcast = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TUIOsharp.DataProcessors
class CursorProcessor {
    // Fields:
    Generic CursorAdded;
    Generic CursorUpdated;
    Generic CursorRemoved;
    int <FrameNumber>k__BackingField;
    Generic cursors;
    Generic updatedCursors;
    Generic addedCursors;
    Generic removedCursors;

    // Methods:
    void add_CursorAdded(...);
    void remove_CursorAdded(...);
    void add_CursorUpdated(...);
    void remove_CursorUpdated(...);
    void add_CursorRemoved(...);
    void remove_CursorRemoved(...);
    void set_FrameNumber(...);
    void .ctor(...);
    void ProcessMessage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ProcessMessage(...);
}

// Namespace: TUIOsharp.DataProcessors
class ObjectProcessor {
    // Fields:
    Generic ObjectAdded;
    Generic ObjectUpdated;
    Generic ObjectRemoved;
    int <FrameNumber>k__BackingField;
    Generic objects;
    Generic updatedObjects;
    Generic addedObjects;
    Generic removedObjects;

    // Methods:
    void add_ObjectAdded(...);
    void remove_ObjectAdded(...);
    void add_ObjectUpdated(...);
    void remove_ObjectUpdated(...);
    void add_ObjectRemoved(...);
    void remove_ObjectRemoved(...);
    void set_FrameNumber(...);
    void .ctor(...);
    void ProcessMessage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ProcessMessage(...);
}

// Namespace: TUIOsharp.DataProcessors
class BlobProcessor {
    // Fields:
    Generic BlobAdded;
    Generic BlobUpdated;
    Generic BlobRemoved;
    int <FrameNumber>k__BackingField;
    Generic blobs;
    Generic updatedBlobs;
    Generic addedBlobs;
    Generic removedBlobs;

    // Methods:
    void add_BlobAdded(...);
    void remove_BlobAdded(...);
    void add_BlobUpdated(...);
    void remove_BlobUpdated(...);
    void add_BlobRemoved(...);
    void remove_BlobRemoved(...);
    void set_FrameNumber(...);
    void .ctor(...);
    void ProcessMessage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void ProcessMessage(...);
}

// Namespace: TouchScript.InputSources
class ICoordinatesRemapper {
    // Methods:
    Vector2 Remap(...);
}

// Namespace: TouchScript
class TouchPoint {
    // Fields:
    int refCount;
    Vector2 position;
    Vector2 newPosition;
    Generic properties;
    int <Id>k__BackingField;
    Transform <Target>k__BackingField;
    Vector2 <PreviousPosition>k__BackingField;
    TouchHit <Hit>k__BackingField;
    TouchLayer <Layer>k__BackingField;
    IInputSource <InputSource>k__BackingField;
    Tags <Tags>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_Id(...);
    void set_Id(...);
    Transform get_Target(...);
    void set_Target(...);
    Vector2 get_Position(...);
    Vector2 get_PreviousPosition(...);
    void set_PreviousPosition(...);
    TouchHit get_Hit(...);
    void set_Hit(...);
    TouchLayer get_Layer(...);
    void set_Layer(...);
    IInputSource get_InputSource(...);
    void set_InputSource(...);
    ProjectionParams get_ProjectionParams(...);
    Tags get_Tags(...);
    void set_Tags(...);
    Generic get_Properties(...);
    void set_Properties(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);
    void INTERNAL_Init(...);
    void INTERNAL_Reset(...);
    void INTERNAL_ResetPosition(...);
    void INTERNAL_SetPosition(...);
    void INTERNAL_Retain(...);
    int INTERNAL_Release(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Hit
class TouchHit {
    // Fields:
    TouchHitType type;
    Transform transform;
    RaycastHit raycastHit;
    RaycastHit2D raycastHit2D;
    RaycastResult raycastResult;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    TouchHitType get_Type(...);
    Transform get_Transform(...);
    RaycastHit get_RaycastHit(...);
    RaycastHit2D get_RaycastHit2D(...);
    RaycastResult get_RaycastResult(...);
    Vector3 get_Point(...);
    Vector3 get_Normal(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TouchHitType {
    // Fields:
    int value__;
    TouchHitType Hit3D = 0;
    TouchHitType Hit2D = 1;
    TouchHitType HitUI = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Layers
class TouchLayer {
    // Fields:
    Generic touchBeganInvoker;
    String Name;
    int priority;
    Generic guaranteedGestures;
    ProjectionParams layerProjectionParams;
    ILayerDelegate <Delegate>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_TouchBegan(...);
    void remove_TouchBegan(...);
    Vector3 get_WorldProjectionNormal(...);
    ILayerDelegate get_Delegate(...);
    void set_Delegate(...);
    int get_Priority(...);
    ProjectionParams GetProjectionParams(...);
    LayerHitResult Hit(...);
    Generic GetGuaranteedGestures(...);
    void Awake(...);
    void OnDestroy(...);
    boolean INTERNAL_BeginTouch(...);
    void INTERNAL_UpdateTouch(...);
    void INTERNAL_EndTouch(...);
    void INTERNAL_CancelTouch(...);
    void setName(...);
    LayerHitResult beginTouch(...);
    void updateTouch(...);
    void endTouch(...);
    void cancelTouch(...);
    ProjectionParams createProjectionParams(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
}

// Namespace: TouchScript.Layers
class ILayerDelegate {
    // Methods:
    boolean ShouldReceiveTouch(...);
}

// Namespace: TouchScript.InputSources
class IInputSource {
    // Methods:
    ICoordinatesRemapper get_CoordinatesRemapper(...);
    void set_CoordinatesRemapper(...);
    void UpdateInput(...);
    void CancelTouch(...);
}

// Namespace: TouchScript.InputSources
class TuioObjectMapping {
    // Fields:
    int Id;
    String Tag;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Behaviors
class TouchScriptInputModule {
    // Fields:
    Generic pointerEvents;
    String horizontalAxis;
    String verticalAxis;
    String submitButton;
    String cancelButton;
    float inputActionsPerSecond;
    float repeatDelay;
    float nextActionTime;
    MoveDirection lastMoveDirection;
    float lastMoveStartTime;

    // Methods:
    void .ctor(...);
    String get_HorizontalAxis(...);
    void set_HorizontalAxis(...);
    String get_VerticalAxis(...);
    void set_VerticalAxis(...);
    String get_SubmitButton(...);
    void set_SubmitButton(...);
    String get_CancelButton(...);
    void set_CancelButton(...);
    boolean IsModuleSupported(...);
    boolean ShouldActivateModule(...);
    boolean IsPointerOverGameObject(...);
    void ActivateModule(...);
    void DeactivateModule(...);
    void Process(...);
    String ToString(...);
    void raycastPointer(...);
    PointerEventData initPointerData(...);
    void injectPointer(...);
    PointerEventData updatePointerData(...);
    void movePointer(...);
    void endPointer(...);
    boolean getPointerData(...);
    void removePointerData(...);
    PointerEventData getLastPointerEventData(...);
    void clearSelection(...);
    void deselectIfSelectionChanged(...);
    void processBegan(...);
    void processMove(...);
    void processEnded(...);
    boolean allowMoveEventProcessing(...);
    boolean shouldStartDrag(...);
    boolean sendSubmitEventToSelectedObject(...);
    Vector2 getRawMoveVector(...);
    boolean sendMoveEventToSelectedObject(...);
    boolean sendUpdateEventToSelectedObject(...);
    void touchBeganHandler(...);
    void touchMovedHandler(...);
    void touchEndedHandler(...);
    void touchCancelledHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void Process(...);
    /*[17]*/ AxisEventData GetAxisEventData(...);
    /*[18]*/ BaseEventData GetBaseEventData(...);
    /*[19]*/ boolean IsPointerOverGameObject(...);
    /*[20]*/ boolean ShouldActivateModule(...);
    /*[21]*/ void DeactivateModule(...);
    /*[22]*/ void ActivateModule(...);
    /*[23]*/ void UpdateModule(...);
    /*[24]*/ boolean IsModuleSupported(...);
}

// Namespace: TouchScript.Behaviors
class Transformer {
    // Fields:
    Transform cachedTransform;
    Generic gestures;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void transformHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Behaviors.Visualizer
class TouchProxy {
    // Fields:
    Text Text;
    StringBuilder stringBuilder;

    // Methods:
    void .ctor(...);
    void updateOnce(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void hide(...);
    /*[05]*/ void show(...);
    /*[06]*/ void updateOnce(...);
    /*[07]*/ void update(...);
}

// Namespace: TouchScript.Behaviors.Visualizer
class TouchProxyBase {
    // Fields:
    RectTransform rect;
    int size;
    boolean <ShowTouchId>k__BackingField;
    boolean <ShowTags>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_Size(...);
    void set_Size(...);
    boolean get_ShowTouchId(...);
    void set_ShowTouchId(...);
    boolean get_ShowTags(...);
    void set_ShowTags(...);
    void Init(...);
    void UpdateTouch(...);
    void Hide(...);
    void Awake(...);
    void hide(...);
    void show(...);
    void updateOnce(...);
    void update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void hide(...);
    /*[05]*/ void show(...);
    /*[06]*/ void updateOnce(...);
    /*[07]*/ void update(...);
}

// Namespace: TouchScript.Behaviors.Visualizer
class TouchVisualizer {
    // Fields:
    TouchProxyBase touchProxy;
    boolean showTouchId;
    boolean showTags;
    boolean useDPI;
    float touchSize;
    int defaultSize;
    RectTransform rect;
    Generic pool;
    Generic proxies;

    // Methods:
    void .ctor(...);
    TouchProxyBase get_TouchProxy(...);
    void set_TouchProxy(...);
    boolean get_ShowTouchId(...);
    void set_ShowTouchId(...);
    boolean get_ShowTags(...);
    void set_ShowTags(...);
    boolean get_UseDPI(...);
    void set_UseDPI(...);
    float get_TouchSize(...);
    void set_TouchSize(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    TouchProxyBase instantiateProxy(...);
    void clearProxy(...);
    int getTouchSize(...);
    void updateDefaultSize(...);
    void touchBeganHandler(...);
    void touchMovedHandler(...);
    void touchEndedHandler(...);
    void touchCancelledHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Clusters
class Clusters {
    // Fields:
    int CLUSTER1 = 0;
    int CLUSTER2 = 1;
    Generic points;
    boolean dirty;
    Generic cluster1;
    Generic cluster2;
    float minPointDistance;
    float minPointDistanceSqr;
    boolean hasClusters;

    // Methods:
    void .ctor(...);
    int get_PointsCount(...);
    float get_MinPointsDistance(...);
    void set_MinPointsDistance(...);
    boolean get_HasClusters(...);
    Vector2 GetCenterPosition(...);
    Vector2 GetPreviousCenterPosition(...);
    void AddPoint(...);
    void AddPoints(...);
    void RemovePoint(...);
    void RemovePoints(...);
    void RemoveAllPoints(...);
    void Invalidate(...);
    void distributePoints(...);
    boolean checkClusters(...);
    void markDirty(...);
    void markClean(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript
class DebuggableMonoBehaviour {
    // Methods:
    void .ctor(...);
    boolean get_DebugMode(...);
    void set_DebugMode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
}

// Namespace: TouchScript.Devices.Display
class DisplayDevice {
    // Fields:
    String name;
    float dpi;

    // Methods:
    void .ctor(...);
    String get_Name(...);
    void set_Name(...);
    float get_DPI(...);
    void set_DPI(...);
    void OnEnable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void set_Name(...);
    /*[06]*/ float get_DPI(...);
    /*[07]*/ void set_DPI(...);
    /*[08]*/ float get_DPI(...);
    /*[09]*/ void set_DPI(...);
    /*[10]*/ void OnEnable(...);
}

// Namespace: TouchScript.Devices.Display
class GenericDisplayDevice {
    // Fields:
    Generic isLaptop;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_INTERNAL_IsLaptop(...);
    void OnEnable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Name(...);
    /*[05]*/ void set_Name(...);
    /*[06]*/ float get_DPI(...);
    /*[07]*/ void set_DPI(...);
    /*[08]*/ float get_DPI(...);
    /*[09]*/ void set_DPI(...);
    /*[10]*/ void OnEnable(...);
}

// Namespace: TouchScript.Devices.Display
class IDisplayDevice {
    // Methods:
    String get_Name(...);
    void set_Name(...);
    float get_DPI(...);
    void set_DPI(...);
}

// Namespace: TouchScript
class GestureManager {
    // Methods:
    void .ctor(...);
    IGestureManager get_Instance(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript
class IGestureManager {
    // Methods:
    IGestureDelegate get_GlobalGestureDelegate(...);
    void set_GlobalGestureDelegate(...);
}

// Namespace: TouchScript
class IGestureDelegate {
    // Methods:
    boolean ShouldReceiveTouch(...);
    boolean ShouldBegin(...);
    boolean ShouldRecognizeSimultaneously(...);
}

// Namespace: TouchScript
class GestureManagerInstance {
    // Fields:
    GestureManagerInstance instance;
    boolean shuttingDown;
    Generic gesturesToReset;
    Generic _updateBegan;
    Generic _updateMoved;
    Generic _updateEnded;
    Generic _updateCancelled;
    Generic _processTarget;
    Generic _processTargetBegan;
    Generic activeGestures;
    Generic gestureListPool;
    IGestureDelegate <GlobalGestureDelegate>k__BackingField;
    Generic <>f__am$cacheC;
    Generic <>f__am$cacheD;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    IGestureManager get_Instance(...);
    IGestureDelegate get_GlobalGestureDelegate(...);
    void set_GlobalGestureDelegate(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnApplicationQuit(...);
    GestureState INTERNAL_GestureChangeState(...);
    void doUpdateBegan(...);
    void doUpdateMoved(...);
    void doUpdateEnded(...);
    void doUpdateCancelled(...);
    void update(...);
    void processTarget(...);
    void processTargetBegan(...);
    void resetGestures(...);
    void getHierarchyEndingWith(...);
    void getHierarchyBeginningWith(...);
    void getHierarchyContaining(...);
    void getEnabledGesturesOnTarget(...);
    void getGuaranteedGesturesOnLayer(...);
    boolean gestureIsActive(...);
    boolean recognizeGestureIfNotPrevented(...);
    void failGesture(...);
    boolean shouldReceiveTouch(...);
    boolean shouldBegin(...);
    boolean canPreventGesture(...);
    void frameFinishedHandler(...);
    void frameStartedHandler(...);
    void touchBeganHandler(...);
    void touchMovedHandler(...);
    void touchEndedHandler(...);
    void touchCancelledHandler(...);
    Generic <gestureListPool>m__22A(...);
    void <gestureListPool>m__22B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IGestureDelegate get_GlobalGestureDelegate(...);
    /*[05]*/ void set_GlobalGestureDelegate(...);
}

// Namespace: 
class GestureState {
    // Fields:
    int value__;
    GestureState Possible = 0;
    GestureState Began = 1;
    GestureState Changed = 2;
    GestureState Ended = 3;
    GestureState Cancelled = 4;
    GestureState Failed = 5;
    GestureState Recognized = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures.Base
class PinnedTrasformGestureBase {
    // Fields:
    String TRANSFORM_START_MESSAGE = "OnTransformStart";
    String TRANSFORM_MESSAGE = "OnTransform";
    String TRANSFORM_COMPLETE_MESSAGE = "OnTransformComplete";
    Generic transformStartedInvoker;
    Generic transformedInvoker;
    Generic transformCompletedInvoker;
    float screenTransformPixelThreshold;
    float screenTransformPixelThresholdSquared;
    Collider cachedCollider;
    float deltaRotation;
    float deltaScale;
    Vector2 screenPixelTranslationBuffer;
    float screenPixelRotationBuffer;
    float angleBuffer;
    float screenPixelScalingBuffer;
    float scaleBuffer;
    boolean isTransforming;
    Generic movedTouches;
    ProjectionParams projectionParams;
    TransformType type;
    float screenTransformThreshold;

    // Methods:
    void .ctor(...);
    void add_TransformStarted(...);
    void remove_TransformStarted(...);
    void add_Transformed(...);
    void remove_Transformed(...);
    void add_TransformCompleted(...);
    void remove_TransformCompleted(...);
    TransformType get_Type(...);
    void set_Type(...);
    float get_ScreenTransformThreshold(...);
    void set_ScreenTransformThreshold(...);
    float get_DeltaRotation(...);
    float get_DeltaScale(...);
    Vector2 get_ScreenPosition(...);
    Vector2 get_PreviousScreenPosition(...);
    void OnEnable(...);
    void touchBegan(...);
    void touchEnded(...);
    void onBegan(...);
    void onChanged(...);
    void onRecognized(...);
    void onFailed(...);
    void onCancelled(...);
    void reset(...);
    boolean relevantTouches(...);
    Vector2 getPointScreenPosition(...);
    Vector2 getPointPreviousScreenPosition(...);
    void updateScreenTransformThreshold(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ boolean relevantTouches(...);
    /*[32]*/ Vector2 getPointScreenPosition(...);
    /*[33]*/ Vector2 getPointPreviousScreenPosition(...);
}

// Namespace: 
class TransformType {
    // Fields:
    int value__;
    TransformType Rotation = 2;
    TransformType Scaling = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures.Base
class TransformGestureBase {
    // Fields:
    String TRANSFORM_START_MESSAGE = "OnTransformStart";
    String TRANSFORM_MESSAGE = "OnTransform";
    String TRANSFORM_COMPLETE_MESSAGE = "OnTransformComplete";
    Generic transformStartedInvoker;
    Generic transformedInvoker;
    Generic transformCompletedInvoker;
    float minScreenPointsPixelDistance;
    float minScreenPointsPixelDistanceSquared;
    float screenTransformPixelThreshold;
    float screenTransformPixelThresholdSquared;
    Vector3 deltaPosition;
    float deltaRotation;
    float deltaScale;
    Vector2 screenPixelTranslationBuffer;
    float screenPixelRotationBuffer;
    float angleBuffer;
    float screenPixelScalingBuffer;
    float scaleBuffer;
    boolean isTransforming;
    Generic movedTouches;
    ProjectionParams projectionParams;
    TransformType type;
    float minScreenPointsDistance;
    float screenTransformThreshold;

    // Methods:
    void .ctor(...);
    void add_TransformStarted(...);
    void remove_TransformStarted(...);
    void add_Transformed(...);
    void remove_Transformed(...);
    void add_TransformCompleted(...);
    void remove_TransformCompleted(...);
    TransformType get_Type(...);
    void set_Type(...);
    float get_MinScreenPointsDistance(...);
    void set_MinScreenPointsDistance(...);
    float get_ScreenTransformThreshold(...);
    void set_ScreenTransformThreshold(...);
    Vector3 get_DeltaPosition(...);
    float get_DeltaRotation(...);
    float get_DeltaScale(...);
    Vector2 get_ScreenPosition(...);
    Vector2 get_PreviousScreenPosition(...);
    void OnEnable(...);
    void OnDisable(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void onBegan(...);
    void onChanged(...);
    void onRecognized(...);
    void onFailed(...);
    void onCancelled(...);
    void reset(...);
    float doRotation(...);
    float doScaling(...);
    Vector3 doOnePointTranslation(...);
    Vector3 doTwoPointTranslation(...);
    int getNumPoints(...);
    boolean relevantTouches1(...);
    boolean relevantTouches2(...);
    Vector2 getPointScreenPosition(...);
    Vector2 getPointPreviousScreenPosition(...);
    void updateMoved(...);
    void updateMinScreenPointsDistance(...);
    void updateScreenTransformThreshold(...);
    void frameFinishedHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ float get_MinScreenPointsDistance(...);
    /*[32]*/ void set_MinScreenPointsDistance(...);
    /*[33]*/ float doRotation(...);
    /*[34]*/ float doScaling(...);
    /*[35]*/ Vector3 doOnePointTranslation(...);
    /*[36]*/ Vector3 doTwoPointTranslation(...);
    /*[37]*/ int getNumPoints(...);
    /*[38]*/ boolean relevantTouches1(...);
    /*[39]*/ boolean relevantTouches2(...);
    /*[40]*/ Vector2 getPointScreenPosition(...);
    /*[41]*/ Vector2 getPointPreviousScreenPosition(...);
}

// Namespace: 
class TransformType {
    // Fields:
    int value__;
    TransformType Translation = 1;
    TransformType Rotation = 2;
    TransformType Scaling = 4;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures.Clustered
class ClusteredPinnedTransformGesture {
    // Methods:
    void .ctor(...);
    boolean relevantTouches(...);
    Vector2 getPointScreenPosition(...);
    Vector2 getPointPreviousScreenPosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ boolean relevantTouches(...);
    /*[32]*/ Vector2 getPointScreenPosition(...);
    /*[33]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[34]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[35]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[36]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[37]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[38]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[39]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[40]*/ void ApplyTransform(...);
    /*[41]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: TouchScript.Gestures.Clustered
class ClusteredScreenTransformGesture {
    // Fields:
    Clusters clusters;

    // Methods:
    void .ctor(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void reset(...);
    int getNumPoints(...);
    boolean relevantTouches1(...);
    boolean relevantTouches2(...);
    Vector2 getPointScreenPosition(...);
    Vector2 getPointPreviousScreenPosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ float get_MinScreenPointsDistance(...);
    /*[32]*/ void set_MinScreenPointsDistance(...);
    /*[33]*/ float doRotation(...);
    /*[34]*/ float doScaling(...);
    /*[35]*/ Vector3 doOnePointTranslation(...);
    /*[36]*/ Vector3 doTwoPointTranslation(...);
    /*[37]*/ int getNumPoints(...);
    /*[38]*/ boolean relevantTouches1(...);
    /*[39]*/ boolean relevantTouches2(...);
    /*[40]*/ Vector2 getPointScreenPosition(...);
    /*[41]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[47]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[48]*/ void ApplyTransform(...);
    /*[49]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[50]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[51]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[52]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[53]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[54]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: TouchScript.Gestures.Clustered
class ClusteredTransformGesture {
    // Fields:
    Clusters clusters;

    // Methods:
    void .ctor(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void reset(...);
    int getNumPoints(...);
    boolean relevantTouches1(...);
    boolean relevantTouches2(...);
    Vector2 getPointScreenPosition(...);
    Vector2 getPointPreviousScreenPosition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ float get_MinScreenPointsDistance(...);
    /*[32]*/ void set_MinScreenPointsDistance(...);
    /*[33]*/ float doRotation(...);
    /*[34]*/ float doScaling(...);
    /*[35]*/ Vector3 doOnePointTranslation(...);
    /*[36]*/ Vector3 doTwoPointTranslation(...);
    /*[37]*/ int getNumPoints(...);
    /*[38]*/ boolean relevantTouches1(...);
    /*[39]*/ boolean relevantTouches2(...);
    /*[40]*/ Vector2 getPointScreenPosition(...);
    /*[41]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[47]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[48]*/ void ApplyTransform(...);
    /*[49]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[50]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[51]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[52]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[53]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[54]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: TouchScript.Gestures
class Gesture {
    // Fields:
    String STATE_CHANGE_MESSAGE = "OnGestureStateChange";
    String CANCEL_MESSAGE = "OnGestureCancel";
    Generic stateChangedInvoker;
    Generic cancelledInvoker;
    Generic activeTouches;
    Transform cachedTransform;
    boolean advancedProps;
    int minTouches;
    int maxTouches;
    boolean combineTouches;
    float combineTouchesInterval;
    boolean useSendMessage;
    boolean sendStateChangeMessages;
    GameObject sendMessageTarget;
    Gesture requireGestureToFail;
    Generic friendlyGestures;
    int numTouches;
    Generic readonlyActiveTouches;
    Generic touchSequence;
    GestureManagerInstance gestureManagerInstance;
    GestureState delayedStateChange;
    boolean requiredGestureFailed;
    GestureState state;
    Vector2 cachedScreenPosition;
    Vector2 cachedPreviousScreenPosition;
    GestureState <PreviousState>k__BackingField;
    IGestureDelegate <Delegate>k__BackingField;
    TouchLayer <Layer>k__BackingField;
    ITouchManager <touchManager>k__BackingField;
    TouchesNumState <touchesNumState>k__BackingField;

    // Methods:
    void .ctor(...);
    void add_StateChanged(...);
    void remove_StateChanged(...);
    void add_Cancelled(...);
    void remove_Cancelled(...);
    int get_MinTouches(...);
    void set_MinTouches(...);
    int get_MaxTouches(...);
    void set_MaxTouches(...);
    Gesture get_RequireGestureToFail(...);
    void set_RequireGestureToFail(...);
    boolean get_CombineTouches(...);
    void set_CombineTouches(...);
    float get_CombineTouchesInterval(...);
    void set_CombineTouchesInterval(...);
    boolean get_UseSendMessage(...);
    void set_UseSendMessage(...);
    boolean get_SendStateChangeMessages(...);
    void set_SendStateChangeMessages(...);
    GameObject get_SendMessageTarget(...);
    void set_SendMessageTarget(...);
    GestureState get_State(...);
    void set_State(...);
    GestureState get_PreviousState(...);
    void set_PreviousState(...);
    Vector2 get_ScreenPosition(...);
    Vector2 get_PreviousScreenPosition(...);
    Vector2 get_NormalizedScreenPosition(...);
    Vector2 get_PreviousNormalizedScreenPosition(...);
    Generic get_ActiveTouches(...);
    int get_NumTouches(...);
    IGestureDelegate get_Delegate(...);
    void set_Delegate(...);
    TouchLayer get_Layer(...);
    void set_Layer(...);
    IGestureManager get_gestureManager(...);
    ITouchManager get_touchManager(...);
    void set_touchManager(...);
    TouchesNumState get_touchesNumState(...);
    void set_touchesNumState(...);
    void AddFriendlyGesture(...);
    boolean IsFriendly(...);
    boolean GetTargetHitResult(...);
    boolean GetTargetHitResult(...);
    boolean GetTargetHitResult(...);
    boolean GetTargetHitResult(...);
    boolean HasTouch(...);
    boolean CanPreventGesture(...);
    boolean CanBePreventedByGesture(...);
    boolean ShouldReceiveTouch(...);
    boolean ShouldBegin(...);
    void Cancel(...);
    void Cancel(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void OnDestroy(...);
    void INTERNAL_SetState(...);
    void INTERNAL_Reset(...);
    void INTERNAL_TouchBegan(...);
    void INTERNAL_TouchMoved(...);
    void INTERNAL_TouchEnded(...);
    void INTERNAL_TouchCancelled(...);
    void INTERNAL_RemoveFriendlyGesture(...);
    boolean shouldCacheTouchPosition(...);
    boolean setState(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void touchCancelled(...);
    void reset(...);
    void onPossible(...);
    void onBegan(...);
    void onChanged(...);
    void onRecognized(...);
    void onFailed(...);
    void onCancelled(...);
    void retainTouches(...);
    void releaseTouches(...);
    void registerFriendlyGesture(...);
    void unregisterFriendlyGesture(...);
    void requiredToFailGestureStateChangedHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: TouchScript
class ITouchManager {
    // Methods:
    void add_FrameStarted(...);
    void remove_FrameStarted(...);
    void add_FrameFinished(...);
    void remove_FrameFinished(...);
    void add_TouchBegan(...);
    void remove_TouchBegan(...);
    void add_TouchMoved(...);
    void remove_TouchMoved(...);
    void add_TouchEnded(...);
    void remove_TouchEnded(...);
    void add_TouchCancelled(...);
    void remove_TouchCancelled(...);
    IDisplayDevice get_DisplayDevice(...);
    void set_DisplayDevice(...);
    float get_DPI(...);
    boolean get_ShouldCreateCameraLayer(...);
    void set_ShouldCreateCameraLayer(...);
    boolean get_ShouldCreateStandardInput(...);
    void set_ShouldCreateStandardInput(...);
    Generic get_Layers(...);
    Generic get_Inputs(...);
    float get_DotsPerCentimeter(...);
    int get_NumberOfTouches(...);
    Generic get_ActiveTouches(...);
    boolean AddLayer(...);
    boolean AddLayer(...);
    boolean RemoveLayer(...);
    void ChangeLayerIndex(...);
    boolean AddInput(...);
    boolean RemoveInput(...);
    Transform GetHitTarget(...);
    boolean GetHitTarget(...);
    boolean GetHitTarget(...);
    void CancelTouch(...);
    void CancelTouch(...);
}

// Namespace: 
class TouchesNumState {
    // Fields:
    int value__;
    TouchesNumState InRange = 0;
    TouchesNumState TooFew = 1;
    TouchesNumState TooMany = 2;
    TouchesNumState PassedMinThreshold = 3;
    TouchesNumState PassedMaxThreshold = 4;
    TouchesNumState PassedMinMaxThreshold = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures
class GestureStateChangeEventArgs {
    // Fields:
    GestureState <PreviousState>k__BackingField;
    GestureState <State>k__BackingField;

    // Methods:
    void .ctor(...);
    GestureState get_PreviousState(...);
    void set_PreviousState(...);
    GestureState get_State(...);
    void set_State(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Gestures
class ITransformGesture {
    // Methods:
    void add_TransformStarted(...);
    void remove_TransformStarted(...);
    void add_Transformed(...);
    void remove_Transformed(...);
    void add_TransformCompleted(...);
    void remove_TransformCompleted(...);
    void ApplyTransform(...);
}

// Namespace: TouchScript.Gestures
class MetaGesture {
    // Fields:
    String TOUCH_BEGAN_MESSAGE = "OnTouchBegan";
    String TOUCH_MOVED_MESSAGE = "OnTouchMoved";
    String TOUCH_ENDED_MESSAGE = "OnTouchEnded";
    String TOUCH_CANCELLED_MESSAGE = "OnTouchCancelled";
    Generic touchBeganInvoker;
    Generic touchMovedInvoker;
    Generic touchEndedInvoker;
    Generic touchCancelledInvoker;

    // Methods:
    void .ctor(...);
    void add_TouchBegan(...);
    void remove_TouchBegan(...);
    void add_TouchMoved(...);
    void remove_TouchMoved(...);
    void add_TouchEnded(...);
    void remove_TouchEnded(...);
    void add_TouchCancelled(...);
    void remove_TouchCancelled(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void touchCancelled(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
}

// Namespace: TouchScript.Gestures
class MetaGestureEventArgs {
    // Fields:
    TouchPoint <Touch>k__BackingField;

    // Methods:
    void .ctor(...);
    TouchPoint get_Touch(...);
    void set_Touch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Gestures
class PinnedTransformGesture {
    // Fields:
    ProjectionType projection;
    Vector3 projectionPlaneNormal;
    TouchLayer projectionLayer;
    Plane transformPlane;

    // Methods:
    void .ctor(...);
    ProjectionType get_Projection(...);
    void set_Projection(...);
    Vector3 get_ProjectionPlaneNormal(...);
    void set_ProjectionPlaneNormal(...);
    Plane get_TransformPlane(...);
    Vector3 get_RotationAxis(...);
    void ApplyTransform(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void touchBegan(...);
    void touchMoved(...);
    float doRotation(...);
    float doScaling(...);
    void updateProjectionPlane(...);
    void updateMoved(...);
    void frameFinishedHandler(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ boolean relevantTouches(...);
    /*[32]*/ Vector2 getPointScreenPosition(...);
    /*[33]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[34]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[35]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[36]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[37]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[38]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[39]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[40]*/ void ApplyTransform(...);
    /*[41]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: 
class ProjectionType {
    // Fields:
    int value__;
    ProjectionType Layer = 0;
    ProjectionType Object = 1;
    ProjectionType Global = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures
class TransformGesture {
    // Fields:
    ProjectionType projection;
    Vector3 projectionPlaneNormal;
    TouchLayer projectionLayer;
    Plane transformPlane;

    // Methods:
    void .ctor(...);
    ProjectionType get_Projection(...);
    void set_Projection(...);
    Vector3 get_ProjectionPlaneNormal(...);
    void set_ProjectionPlaneNormal(...);
    Plane get_TransformPlane(...);
    Vector3 get_LocalDeltaPosition(...);
    Vector3 get_RotationAxis(...);
    void ApplyTransform(...);
    void Awake(...);
    void OnEnable(...);
    void touchBegan(...);
    float doRotation(...);
    float doScaling(...);
    Vector3 doOnePointTranslation(...);
    Vector3 doTwoPointTranslation(...);
    Vector3 projectScaledRotated(...);
    void updateProjectionPlane(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ float get_MinScreenPointsDistance(...);
    /*[32]*/ void set_MinScreenPointsDistance(...);
    /*[33]*/ float doRotation(...);
    /*[34]*/ float doScaling(...);
    /*[35]*/ Vector3 doOnePointTranslation(...);
    /*[36]*/ Vector3 doTwoPointTranslation(...);
    /*[37]*/ int getNumPoints(...);
    /*[38]*/ boolean relevantTouches1(...);
    /*[39]*/ boolean relevantTouches2(...);
    /*[40]*/ Vector2 getPointScreenPosition(...);
    /*[41]*/ Vector2 getPointPreviousScreenPosition(...);
    /*[42]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[43]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[44]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[45]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[46]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[47]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
    /*[48]*/ void ApplyTransform(...);
    /*[49]*/ void TouchScript.Gestures.ITransformGesture.add_TransformStarted(...);
    /*[50]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformStarted(...);
    /*[51]*/ void TouchScript.Gestures.ITransformGesture.add_Transformed(...);
    /*[52]*/ void TouchScript.Gestures.ITransformGesture.remove_Transformed(...);
    /*[53]*/ void TouchScript.Gestures.ITransformGesture.add_TransformCompleted(...);
    /*[54]*/ void TouchScript.Gestures.ITransformGesture.remove_TransformCompleted(...);
}

// Namespace: 
class ProjectionType {
    // Fields:
    int value__;
    ProjectionType Layer = 0;
    ProjectionType Object = 1;
    ProjectionType Global = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Gestures.UI
class UIGesture {
    // Fields:
    Generic pointerData;

    // Methods:
    void .ctor(...);
    boolean CanPreventGesture(...);
    boolean CanBePreventedByGesture(...);
    void touchBegan(...);
    void touchMoved(...);
    void touchEnded(...);
    void touchCancelled(...);
    TouchData getPointerData(...);
    void setPointerData(...);
    void removePointerData(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ Vector2 get_ScreenPosition(...);
    /*[07]*/ Vector2 get_PreviousScreenPosition(...);
    /*[08]*/ boolean GetTargetHitResult(...);
    /*[09]*/ boolean GetTargetHitResult(...);
    /*[10]*/ boolean CanPreventGesture(...);
    /*[11]*/ boolean CanBePreventedByGesture(...);
    /*[12]*/ boolean ShouldReceiveTouch(...);
    /*[13]*/ boolean ShouldBegin(...);
    /*[14]*/ void Awake(...);
    /*[15]*/ void OnEnable(...);
    /*[16]*/ void OnDisable(...);
    /*[17]*/ void OnDestroy(...);
    /*[18]*/ void INTERNAL_RemoveFriendlyGesture(...);
    /*[19]*/ boolean shouldCacheTouchPosition(...);
    /*[20]*/ void touchBegan(...);
    /*[21]*/ void touchMoved(...);
    /*[22]*/ void touchEnded(...);
    /*[23]*/ void touchCancelled(...);
    /*[24]*/ void reset(...);
    /*[25]*/ void onPossible(...);
    /*[26]*/ void onBegan(...);
    /*[27]*/ void onChanged(...);
    /*[28]*/ void onRecognized(...);
    /*[29]*/ void onFailed(...);
    /*[30]*/ void onCancelled(...);
    /*[31]*/ TouchData getPointerData(...);
    /*[32]*/ void setPointerData(...);
    /*[33]*/ void removePointerData(...);
}

// Namespace: 
class TouchData {
    // Fields:
    boolean OnTarget;
    PointerEventData Data;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Hit
class HitTest {
    // Methods:
    void .ctor(...);
    ObjectHitResult IsHit(...);
    void OnEnable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ObjectHitResult IsHit(...);
}

// Namespace: 
class ObjectHitResult {
    // Fields:
    int value__;
    ObjectHitResult Error = 0;
    ObjectHitResult Hit = 1;
    ObjectHitResult Miss = 2;
    ObjectHitResult Discard = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Hit
class Untouchable {
    // Fields:
    boolean DiscardTouch;

    // Methods:
    void .ctor(...);
    ObjectHitResult IsHit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ObjectHitResult IsHit(...);
}

// Namespace: TouchScript
class IDebuggable {
    // Methods:
    boolean get_DebugMode(...);
    void set_DebugMode(...);
}

// Namespace: TouchScript
class TouchEventArgs {
    // Fields:
    TouchEventArgs instance;
    TouchPoint <Touch>k__BackingField;

    // Methods:
    void .ctor(...);
    TouchPoint get_Touch(...);
    void set_Touch(...);
    TouchEventArgs GetCachedEventArgs(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.InputSources.InputHandlers
class MouseHandler {
    // Fields:
    Generic beginTouch;
    Generic moveTouch;
    Generic endTouch;
    Generic cancelTouch;
    Tags tags;
    int mousePointId;
    int fakeMousePointId;
    Vector3 mousePointPos;

    // Methods:
    void .ctor(...);
    void EndTouches(...);
    void Update(...);
    boolean CancelTouch(...);
    void Dispose(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: TouchScript.InputSources.InputHandlers
class TouchHandler {
    // Fields:
    Generic beginTouch;
    Generic moveTouch;
    Generic endTouch;
    Generic cancelTouch;
    Tags tags;
    Generic systemToInternalId;
    int touchesNum;

    // Methods:
    void .ctor(...);
    boolean get_HasTouches(...);
    void Update(...);
    boolean CancelTouch(...);
    void Dispose(...);
    TouchPoint internalBeginTouch(...);
    void internalEndTouch(...);
    void internalCancelTouch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: 
class TouchState {
    // Fields:
    int Id;
    TouchPhase Phase;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.InputSources
class InputSource {
    // Fields:
    boolean advancedProps;
    TouchManagerInstance manager;
    ICoordinatesRemapper <CoordinatesRemapper>k__BackingField;

    // Methods:
    void .ctor(...);
    ICoordinatesRemapper get_CoordinatesRemapper(...);
    void set_CoordinatesRemapper(...);
    void UpdateInput(...);
    void CancelTouch(...);
    void OnEnable(...);
    void OnDisable(...);
    TouchPoint beginTouch(...);
    void updateTouch(...);
    void moveTouch(...);
    void endTouch(...);
    void cancelTouch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICoordinatesRemapper get_CoordinatesRemapper(...);
    /*[05]*/ void set_CoordinatesRemapper(...);
    /*[06]*/ void UpdateInput(...);
    /*[07]*/ void CancelTouch(...);
    /*[08]*/ void UpdateInput(...);
    /*[09]*/ void CancelTouch(...);
    /*[10]*/ void OnEnable(...);
    /*[11]*/ void OnDisable(...);
    /*[12]*/ TouchPoint beginTouch(...);
    /*[13]*/ void updateTouch(...);
    /*[14]*/ void moveTouch(...);
    /*[15]*/ void endTouch(...);
    /*[16]*/ void cancelTouch(...);
}

// Namespace: TouchScript
class TouchManagerInstance {
    // Fields:
    Generic touchBeganInvoker;
    Generic touchMovedInvoker;
    Generic touchEndedInvoker;
    Generic touchCancelledInvoker;
    EventHandler frameStartedInvoker;
    EventHandler frameFinishedInvoker;
    boolean shuttingDown;
    TouchManagerInstance instance;
    boolean shouldCreateCameraLayer;
    boolean shouldCreateStandardInput;
    IDisplayDevice displayDevice;
    float dpi;
    float dotsPerCentimeter;
    Generic layers;
    int layerCount;
    Generic inputs;
    int inputCount;
    Generic touches;
    Generic idToTouch;
    Generic touchesBegan;
    Generic touchesUpdated;
    Generic touchesEnded;
    Generic touchesCancelled;
    Generic touchPointPool;
    Generic touchPointListPool;
    Generic intListPool;
    int nextTouchId;
    mvar touchLock;
    Generic <>f__am$cache1C;
    Generic <>f__am$cache1D;
    Generic <>f__am$cache1E;
    Generic <>f__am$cache1F;
    Generic <>f__am$cache20;
    Generic <>f__am$cache21;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    void add_FrameStarted(...);
    void remove_FrameStarted(...);
    void add_FrameFinished(...);
    void remove_FrameFinished(...);
    void add_TouchBegan(...);
    void remove_TouchBegan(...);
    void add_TouchMoved(...);
    void remove_TouchMoved(...);
    void add_TouchEnded(...);
    void remove_TouchEnded(...);
    void add_TouchCancelled(...);
    void remove_TouchCancelled(...);
    TouchManagerInstance get_Instance(...);
    IDisplayDevice get_DisplayDevice(...);
    void set_DisplayDevice(...);
    float get_DPI(...);
    boolean get_ShouldCreateCameraLayer(...);
    void set_ShouldCreateCameraLayer(...);
    boolean get_ShouldCreateStandardInput(...);
    void set_ShouldCreateStandardInput(...);
    Generic get_Layers(...);
    Generic get_Inputs(...);
    float get_DotsPerCentimeter(...);
    int get_NumberOfTouches(...);
    Generic get_ActiveTouches(...);
    boolean AddLayer(...);
    boolean AddLayer(...);
    boolean RemoveLayer(...);
    void ChangeLayerIndex(...);
    boolean AddInput(...);
    boolean RemoveInput(...);
    Transform GetHitTarget(...);
    boolean GetHitTarget(...);
    boolean GetHitTarget(...);
    void CancelTouch(...);
    void CancelTouch(...);
    TouchPoint INTERNAL_BeginTouch(...);
    TouchPoint INTERNAL_BeginTouch(...);
    void INTERNAL_UpdateTouch(...);
    void INTERNAL_MoveTouch(...);
    void INTERNAL_EndTouch(...);
    void INTERNAL_CancelTouch(...);
    void Awake(...);
    void OnLevelWasLoaded(...);
    IEnumerator lateAwake(...);
    void Update(...);
    void OnApplicationQuit(...);
    void updateDPI(...);
    void updateLayers(...);
    void createCameraLayer(...);
    void createTouchInput(...);
    void updateInputs(...);
    void updateBegan(...);
    void updateUpdated(...);
    void updateEnded(...);
    void updateCancelled(...);
    void updateTouches(...);
    void <touchPointPool>m__22D(...);
    Generic <touchPointListPool>m__22E(...);
    void <touchPointListPool>m__22F(...);
    Generic <intListPool>m__230(...);
    void <intListPool>m__231(...);
    boolean <updateLayers>m__235(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean get_DebugMode(...);
    /*[05]*/ void set_DebugMode(...);
    /*[06]*/ void add_FrameStarted(...);
    /*[07]*/ void remove_FrameStarted(...);
    /*[08]*/ void add_FrameFinished(...);
    /*[09]*/ void remove_FrameFinished(...);
    /*[10]*/ void add_TouchBegan(...);
    /*[11]*/ void remove_TouchBegan(...);
    /*[12]*/ void add_TouchMoved(...);
    /*[13]*/ void remove_TouchMoved(...);
    /*[14]*/ void add_TouchEnded(...);
    /*[15]*/ void remove_TouchEnded(...);
    /*[16]*/ void add_TouchCancelled(...);
    /*[17]*/ void remove_TouchCancelled(...);
    /*[18]*/ IDisplayDevice get_DisplayDevice(...);
    /*[19]*/ void set_DisplayDevice(...);
    /*[20]*/ float get_DPI(...);
    /*[21]*/ boolean get_ShouldCreateCameraLayer(...);
    /*[22]*/ void set_ShouldCreateCameraLayer(...);
    /*[23]*/ boolean get_ShouldCreateStandardInput(...);
    /*[24]*/ void set_ShouldCreateStandardInput(...);
    /*[25]*/ Generic get_Layers(...);
    /*[26]*/ Generic get_Inputs(...);
    /*[27]*/ float get_DotsPerCentimeter(...);
    /*[28]*/ int get_NumberOfTouches(...);
    /*[29]*/ Generic get_ActiveTouches(...);
    /*[30]*/ boolean AddLayer(...);
    /*[31]*/ boolean AddLayer(...);
    /*[32]*/ boolean RemoveLayer(...);
    /*[33]*/ void ChangeLayerIndex(...);
    /*[34]*/ boolean AddInput(...);
    /*[35]*/ boolean RemoveInput(...);
    /*[36]*/ Transform GetHitTarget(...);
    /*[37]*/ boolean GetHitTarget(...);
    /*[38]*/ boolean GetHitTarget(...);
    /*[39]*/ void CancelTouch(...);
    /*[40]*/ void CancelTouch(...);
}

// Namespace: TouchScript.InputSources
class MobileInput {
    // Fields:
    boolean DisableOnNonTouchPlatforms;
    Tags Tags;
    TouchHandler touchHandler;

    // Methods:
    void .ctor(...);
    void UpdateInput(...);
    void CancelTouch(...);
    void OnEnable(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICoordinatesRemapper get_CoordinatesRemapper(...);
    /*[05]*/ void set_CoordinatesRemapper(...);
    /*[06]*/ void UpdateInput(...);
    /*[07]*/ void CancelTouch(...);
    /*[08]*/ void UpdateInput(...);
    /*[09]*/ void CancelTouch(...);
    /*[10]*/ void OnEnable(...);
    /*[11]*/ void OnDisable(...);
    /*[12]*/ TouchPoint beginTouch(...);
    /*[13]*/ void updateTouch(...);
    /*[14]*/ void moveTouch(...);
    /*[15]*/ void endTouch(...);
    /*[16]*/ void cancelTouch(...);
}

// Namespace: TouchScript.InputSources
class MouseInput {
    // Fields:
    boolean DisableOnMobilePlatforms;
    Tags Tags;
    MouseHandler mouseHandler;

    // Methods:
    void .ctor(...);
    void UpdateInput(...);
    void CancelTouch(...);
    void OnEnable(...);
    void OnDisable(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICoordinatesRemapper get_CoordinatesRemapper(...);
    /*[05]*/ void set_CoordinatesRemapper(...);
    /*[06]*/ void UpdateInput(...);
    /*[07]*/ void CancelTouch(...);
    /*[08]*/ void UpdateInput(...);
    /*[09]*/ void CancelTouch(...);
    /*[10]*/ void OnEnable(...);
    /*[11]*/ void OnDisable(...);
    /*[12]*/ TouchPoint beginTouch(...);
    /*[13]*/ void updateTouch(...);
    /*[14]*/ void moveTouch(...);
    /*[15]*/ void endTouch(...);
    /*[16]*/ void cancelTouch(...);
}

// Namespace: TouchScript.InputSources
class StandardInput {
    // Fields:
    Tags TouchTags;
    Tags MouseTags;
    Tags PenTags;
    Windows8TouchAPIType Windows8Touch;
    Windows7TouchAPIType Windows7Touch;
    boolean WebPlayerTouch;
    boolean WebGLTouch;
    boolean Windows8Mouse;
    boolean Windows7Mouse;
    boolean UniversalWindowsMouse;
    MouseHandler mouseHandler;
    TouchHandler touchHandler;

    // Methods:
    void .ctor(...);
    void UpdateInput(...);
    void CancelTouch(...);
    void OnEnable(...);
    void OnDisable(...);
    void enableMouse(...);
    void disableMouse(...);
    void enableTouch(...);
    void disableTouch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ ICoordinatesRemapper get_CoordinatesRemapper(...);
    /*[05]*/ void set_CoordinatesRemapper(...);
    /*[06]*/ void UpdateInput(...);
    /*[07]*/ void CancelTouch(...);
    /*[08]*/ void UpdateInput(...);
    /*[09]*/ void CancelTouch(...);
    /*[10]*/ void OnEnable(...);
    /*[11]*/ void OnDisable(...);
    /*[12]*/ TouchPoint beginTouch(...);
    /*[13]*/ void updateTouch(...);
    /*[14]*/ void moveTouch(...);
    /*[15]*/ void endTouch(...);
    /*[16]*/ void cancelTouch(...);
}

// Namespace: 
class Windows8TouchAPIType {
    // Fields:
    int value__;
    Windows8TouchAPIType Windows8 = 0;
    Windows8TouchAPIType Windows7 = 1;
    Windows8TouchAPIType Unity = 2;
    Windows8TouchAPIType None = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Windows7TouchAPIType {
    // Fields:
    int value__;
    Windows7TouchAPIType Windows7 = 0;
    Windows7TouchAPIType Unity = 1;
    Windows7TouchAPIType None = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Layers
class CameraLayer {
    // Fields:
    Generic sortedHits;
    Transform cachedTransform;
    Generic tmpHitTestList;

    // Methods:
    void .ctor(...);
    void Awake(...);
    LayerHitResult castRay(...);
    ObjectHitResult doHit(...);
    void sortHits(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
    /*[16]*/ void updateCamera(...);
    /*[17]*/ LayerHitResult castRay(...);
}

// Namespace: TouchScript.Layers
class CameraLayer2D {
    // Fields:
    cmod_reqd layerIds;
    Generic layerById;
    Generic sortedHits;
    Generic tmpHitTestList;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    LayerHitResult castRay(...);
    ObjectHitResult doHit(...);
    void sortHits(...);
    int <sortHits>m__22C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
    /*[16]*/ void updateCamera(...);
    /*[17]*/ LayerHitResult castRay(...);
    /*[18]*/ void OnEnable(...);
}

// Namespace: TouchScript.Layers
class FullscreenLayer {
    // Fields:
    LayerType type;
    Camera _camera;
    Transform cameraTransform;
    Generic tmpHitTestList;

    // Methods:
    void .ctor(...);
    LayerType get_Type(...);
    void set_Type(...);
    Camera get_Camera(...);
    void set_Camera(...);
    Vector3 get_WorldProjectionNormal(...);
    LayerHitResult Hit(...);
    void Awake(...);
    void setName(...);
    ProjectionParams createProjectionParams(...);
    void updateCamera(...);
    void cacheCameraTransform(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
}

// Namespace: 
class LayerType {
    // Fields:
    int value__;
    LayerType MainCamera = 0;
    LayerType Camera = 1;
    LayerType Global = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Layers
class CameraProjectionParams {
    // Fields:
    Camera camera;

    // Methods:
    void .ctor(...);
    Vector3 ProjectTo(...);
    Vector2 ProjectFrom(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 ProjectTo(...);
    /*[05]*/ Vector2 ProjectFrom(...);
}

// Namespace: TouchScript.Layers
class CanvasProjectionParams {
    // Fields:
    Canvas canvas;
    RectTransform rect;
    RenderMode mode;
    Camera camera;

    // Methods:
    void .ctor(...);
    Vector3 ProjectTo(...);
    Vector2 ProjectFrom(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 ProjectTo(...);
    /*[05]*/ Vector2 ProjectFrom(...);
}

// Namespace: TouchScript.Layers
class TouchLayerEventArgs {
    // Fields:
    TouchPoint <Touch>k__BackingField;

    // Methods:
    void .ctor(...);
    TouchPoint get_Touch(...);
    void set_Touch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Layers
class UILayer {
    // Fields:
    UILayer instance;
    Generic raycastResultCache;
    Generic tmpHitTestList;
    PointerEventData pointerDataCache;
    EventSystem eventSystem;
    Generic projectionParamsCache;

    // Methods:
    void .ctor(...);
    LayerHitResult Hit(...);
    ProjectionParams GetProjectionParams(...);
    void Awake(...);
    IEnumerator GetEventSystemWhenAvailable(...);
    void setName(...);
    ObjectHitResult doHit(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Vector3 get_WorldProjectionNormal(...);
    /*[05]*/ ProjectionParams GetProjectionParams(...);
    /*[06]*/ LayerHitResult Hit(...);
    /*[07]*/ Generic GetGuaranteedGestures(...);
    /*[08]*/ void Awake(...);
    /*[09]*/ void OnDestroy(...);
    /*[10]*/ void setName(...);
    /*[11]*/ LayerHitResult beginTouch(...);
    /*[12]*/ void updateTouch(...);
    /*[13]*/ void endTouch(...);
    /*[14]*/ void cancelTouch(...);
    /*[15]*/ ProjectionParams createProjectionParams(...);
}

// Namespace: TouchScript
class TouchManager {
    // Fields:
    float CM_TO_INCH = 0.393701;
    float INCH_TO_CM = 2.540000;
    Vector2 INVALID_POSITION;
    Version VERSION;
    Object displayDevice;
    boolean shouldCreateCameraLayer;
    boolean shouldCreateStandardInput;
    boolean useSendMessage;
    MessageType sendMessageEvents;
    GameObject sendMessageTarget;
    Generic layers;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    ITouchManager get_Instance(...);
    IDisplayDevice get_DisplayDevice(...);
    void set_DisplayDevice(...);
    boolean get_ShouldCreateCameraLayer(...);
    void set_ShouldCreateCameraLayer(...);
    boolean get_ShouldCreateStandardInput(...);
    void set_ShouldCreateStandardInput(...);
    boolean get_UseSendMessage(...);
    void set_UseSendMessage(...);
    MessageType get_SendMessageEvents(...);
    void set_SendMessageEvents(...);
    GameObject get_SendMessageTarget(...);
    void set_SendMessageTarget(...);
    boolean IsInvalidPosition(...);
    void Awake(...);
    void OnEnable(...);
    void OnDisable(...);
    void updateSubscription(...);
    void removeSubscriptions(...);
    void touchBeganHandler(...);
    void touchMovedHandler(...);
    void touchEndedHandler(...);
    void touchCancelledHandler(...);
    void frameStartedHandler(...);
    void frameFinishedHandler(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MessageType {
    // Fields:
    int value__;
    MessageType FrameStarted = 1;
    MessageType FrameFinished = 2;
    MessageType TouchBegan = 4;
    MessageType TouchMoved = 8;
    MessageType TouchEnded = 16;
    MessageType TouchCancelled = 32;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class MessageName {
    // Fields:
    int value__;
    MessageName OnTouchFrameStarted = 1;
    MessageName OnTouchFrameFinished = 2;
    MessageName OnTouchBegan = 4;
    MessageName OnTouchMoved = 8;
    MessageName OnTouchEnded = 16;
    MessageName OnTouchCancelled = 32;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: TouchScript.Utils.Attributes
class NullToggleAttribute {
    // Fields:
    int NullIntValue;
    float NullFloatValue;
    Object NullObjectValue;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: TouchScript.Utils.Attributes
class ToggleLeftAttribute {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: TouchScript.Utils
class ClusterUtils {
    // Fields:
    StringBuilder hashString;

    // Methods:
    void .cctor(...);
    Vector2 Get2DCenterPosition(...);
    Vector2 GetPrevious2DCenterPosition(...);
    String GetPointsHash(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils
class EventHandlerExtensions {
    // Methods:
    Exception InvokeHandleExceptions(...);
    Exception InvokeHandleExceptions(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils.Geom
class TwoD {
    // Methods:
    float PointToLineDistance(...);
    void PointToLineDistance2(...);
    Vector2 Rotate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils
class ObjectPool`1 {
    // Fields:
    Generic stack;
    Generic onGet;
    Generic onRelease;
    Generic onNew;
    int <CountAll>k__BackingField;

    // Methods:
    void .ctor(...);
    int get_CountAll(...);
    void set_CountAll(...);
    int get_CountActive(...);
    int get_CountInactive(...);
    void WarmUp(...);
    var Get(...);
    void Release(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class UnityFunc`1 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: TouchScript.Utils
class ProjectionUtils {
    // Methods:
    Vector3 CameraToPlaneProjection(...);
    Vector3 ScreenToPlaneProjection(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils
class TimedSequence`1 {
    // Fields:
    Generic points;
    Generic timestamps;

    // Methods:
    void .ctor(...);
    void Add(...);
    void Add(...);
    void Clear(...);
    Generic FindElementsLaterThan(...);
    Generic FindElementsLaterThan(...);
    Generic FindElementsLaterThan(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils
class TouchUtils {
    // Methods:
    boolean IsTouchOnTarget(...);
    boolean IsTouchOnTarget(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: TouchScript.Utils
class TransformUtils {
    // Methods:
    Vector3 GlobalToLocalPosition(...);
    Vector3 GlobalToLocalDirection(...);
    Vector3 GlobalToLocalVector(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class UiSpin {
    // Fields:
    float speed;

    // Methods:
    void .ctor(...);
    void Update(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Conversations
class IConversationServiceOverloads {
    // Methods:
    IConversation PresentConversation(...);
    IConversation PresentConversation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Widget
class DrawerRect {
    // Fields:
    RectTransform content;
    float snapSpeed;
    float snapPositionTop;
    float snapPositionBottom;
    boolean isDragging;
    float velocity;
    float previousPosition;
    boolean isSnapping;
    float snapPosition;
    float snapTime;
    float canvasScale;

    // Methods:
    void .ctor(...);
    float get_ScrollPosition(...);
    void set_ScrollPosition(...);
    void Open(...);
    void Close(...);
    void SnapTo(...);
    void OnBeginDrag(...);
    void OnDrag(...);
    void OnEndDrag(...);
    void OnEnable(...);
    void LateUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void OnDrag(...);
    /*[17]*/ void OnBeginDrag(...);
    /*[18]*/ void OnEndDrag(...);
}

// Namespace: Niantic.Holoholo.UI
class FadeGraphicIn {
    // Fields:
    Graphic graphic;
    float FadeStartDelay;
    float FadeTime;
    AnimationCurve FadeCurve;

    // Methods:
    void .ctor(...);
    IEnumerator Start(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DebugLunar {
    // Methods:
    void .ctor(...);
    void ShowConsole(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IncubatorSelectionResult {
    // Fields:
    int value__;
    IncubatorSelectionResult SELECTED = 0;
    IncubatorSelectionResult EXIT = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI.Items
class ItemSelectionDescription {
    // Fields:
    ItemSettingsProto itemInfo;
    Image itemImage;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Items.Test
class MockItemInventoryGuiController {
    // Fields:
    Generic selectionPromise;

    // Methods:
    void .ctor(...);
    Generic Initialize(...);
    void SelectItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Initialize(...);
    /*[05]*/ GuiLayer get_Layer(...);
    /*[06]*/ int get_Depth(...);
    /*[07]*/ Generic get_SortingOrder(...);
    /*[08]*/ Canvas get_Canvas(...);
    /*[09]*/ boolean get_IsVisible(...);
    /*[10]*/ void set_IsVisible(...);
    /*[11]*/ boolean get_IsDestroyed(...);
    /*[12]*/ void Dismiss(...);
    /*[13]*/ IPromise DismissWithPromise(...);
    /*[14]*/ void HandleDismiss(...);
    /*[15]*/ void HandleDestroy(...);
    /*[16]*/ void VisibilityUpdated(...);
    /*[17]*/ Generic Initialize(...);
}

// Namespace: 
class LevelUpAnimation {
    // Fields:
    cmod_reqd cameras;
    GameObject currentPlayer;
    Transform playerAnchor;

    // Methods:
    void .ctor(...);
    void PlayPlayerLevelUpAnim(...);
    IEnumerator PlayLevelUpWhenAvailable(...);
    void PlayShowAnim(...);
    void SetRenderToTexture(...);
    void OnDisable(...);
    void DestroySelf(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo
class LevelUpUnlockedItem {
    // Fields:
    Text nameText;
    Image itemIcon;

    // Methods:
    void .ctor(...);
    void SetItemData(...);
    void DestroySelf(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IPlayerProfileGuiController {
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PlayerProfileViewTouch {
    // Fields:
    Vector2 touchStartPos;
    PlayerProfileGuiController playerProfile;
    float spinRate;
    PlayerAvatarStage avatarStage;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnDestroy(...);
    void OnDrag(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokedexEntry {
    // Fields:
    int pokemonNo;
    boolean seen;
    boolean captured;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PokedexEntrySelectedEventArgs {
    // Fields:
    PokedexEntry entry;
    PokedexListItemView view;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInfoViewTouch {
    // Fields:
    PokemonInfoDynoScrollRect scrollRect;
    Vector2 touchStartPos;
    float normalizedClickBorder;
    float spinSpeed;
    PokemonAnim tapAnimation;
    SoundController soundController;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnTap(...);
    void OnDrag(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonProtoExtensions {
    // Methods:
    String GetSpeciesName(...);
    String GetDisplayName(...);
    float GetEggKmWalked(...);
    float GetEggKmTotal(...);
    boolean GetIsFainted(...);
    boolean GetIsDeployed(...);
    String GetAbility1Name(...);
    String GetAbility1Desc(...);
    String GetAbility2Name(...);
    String GetAbility2Desc(...);
    Sprite GetSprite(...);
    int GetTotalEvolutionPips(...);
    int GetCurrentEvolutionPips(...);
    int GetEvolutionStones(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class EggSelectedEventArgs {
    // Fields:
    int index;
    PokemonProto pokemon;
    EggListItemView view;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Pokemon
class PokemonInventoryEvent {
    // Fields:
    int value__;
    PokemonInventoryEvent PokemonSelected = 0;
    PokemonInventoryEvent Dismissed = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class IPokemonInventoryList {
    // Methods:
    void add_PokemonSelected(...);
    void remove_PokemonSelected(...);
    PokemonInventoryOrder get_OrderedBy(...);
    void set_OrderedBy(...);
    Transform get_Transform(...);
    Generic get_PokemonProtos(...);
}

// Namespace: Niantic.Holoholo.UI
class PokemonListItemView {
    // Fields:
    int HEAL_TRIGGER_NAME;
    Slider staminaSlider;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    Slider get_StaminaSlider(...);
    void PlayHealAnimation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class SetStaminaColor {
    // Fields:
    Color highStaminaColor;
    Color mediumStaminaColor;
    Color lowStaminaColor;
    Slider slider;
    Image fill;

    // Methods:
    void .ctor(...);
    void OnValueChanged(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class IapResult {
    // Fields:
    int value__;
    IapResult SUCCESS = 0;
    IapResult FAILURE = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.Storefront
class PokecoinCounter {
    // Fields:
    Text amountLabel;
    IIapService iapService;
    IReceipt pokecoinObservationReceipt;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Start(...);
    void Subscribe(...);
    void OnDestroy(...);
    void OnPlayerChange(...);
    boolean <OnPlayerChange>m__286(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class StorefrontCoinFloater {
    // Fields:
    String VISIBLE_KEY = "Visible";
    RectTransform target;
    Animator anim;
    IUiCamera uiCamera;

    // Methods:
    void .ctor(...);
    void Start(...);
    void OnScrollUpdate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.Storefront
class ComingSoonItem {
    // Fields:
    String <name>k__BackingField;
    int <count>k__BackingField;
    String <cost>k__BackingField;

    // Methods:
    void .ctor(...);
    String get_name(...);
    void set_name(...);
    int get_count(...);
    void set_count(...);
    String get_cost(...);
    void set_cost(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DownloadedTextureInfo {
    // Fields:
    uint ApproxBytes;
    float LastRequestedTime;
    Texture Tex;
    String Url;
    Generic DownloadedPromise;
    Coroutine DownloadRoutine;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class IGuiController {
    // Methods:
    void Initialize(...);
    GuiLayer get_Layer(...);
    int get_Depth(...);
    Generic get_SortingOrder(...);
    Canvas get_Canvas(...);
    boolean get_IsVisible(...);
    void set_IsVisible(...);
    boolean get_IsDestroyed(...);
    void Dismiss(...);
    IPromise DismissWithPromise(...);
}

// Namespace: 
class GuiLayerRegistration {
    // Fields:
    Generic registrationEntries;
    int layerIndex;
    int totalGuiDepth;
    int <GuiCount>k__BackingField;
    boolean <IsVisible>k__BackingField;
    Generic <>f__am$cache5;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    int get_GuiCount(...);
    void set_GuiCount(...);
    boolean get_IsVisible(...);
    void set_IsVisible(...);
    int get_BaseSortingOrder(...);
    int get_TopSortingOrder(...);
    Generic get_RegisteredGuis(...);
    void RegisterGui(...);
    void UnregisterGui(...);
    void Show(...);
    void Hide(...);
    void UpdateCanvasVisibility(...);
    boolean <get_RegisteredGuis>m__28E(...);
    IGuiController <get_RegisteredGuis>m__28F(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class RegistrationEntry {
    // Fields:
    IGuiController GuiController;
    int Depth;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class AnimateBlur {
    // Fields:
    float animateTime;
    AnimationCurve animateCurve;
    BlurOptimized blur;
    float targetBlur;
    float targetAlpha;
    Image panel;
    Coroutine animateCoroutine;

    // Methods:
    void .ctor(...);
    void OnEnable(...);
    void Show(...);
    void AnimateOut(...);
    IEnumerator Animation(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityStandardAssets.ImageEffects
class BlurOptimized {
    // Fields:
    int downsample;
    float blurSize;
    int blurIterations;
    BlurType blurType;
    Shader blurShader;
    Material blurMaterial;

    // Methods:
    void .ctor(...);
    boolean SupportedDevice(...);
    boolean CheckResources(...);
    void OnDisable(...);
    void OnRenderImage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ boolean CheckResources(...);
}

// Namespace: 
class BlurType {
    // Fields:
    int value__;
    BlurType StandardGauss = 0;
    BlurType SgxGauss = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class UserPromptServiceInterfaceExt {
    // Methods:
    IReceipt ShowNonBlockingError(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class ModalEvent {
    // Fields:
    int value__;
    ModalEvent Any = 0;
    ModalEvent OK = 1;
    ModalEvent Cancel = 2;
    ModalEvent OptionA = 3;
    ModalEvent OptionB = 4;
    ModalEvent OptionC = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class IModalButton {
    // Methods:
    String get_Text(...);
    ModalEvent get_Action(...);
}

// Namespace: Niantic.Holoholo.UI
class ModalButton {
    // Fields:
    cmod_reqd OkCancelButtons;
    cmod_reqd YesNoButtons;
    cmod_reqd OkButton;
    ModalEvent <Action>k__BackingField;
    String <Text>k__BackingField;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    ModalEvent get_Action(...);
    void set_Action(...);
    String get_Text(...);
    void set_Text(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String get_Text(...);
    /*[05]*/ ModalEvent get_Action(...);
}

// Namespace: 
class Receipt {
    // Fields:
    ToastGuiController toastGui;
    boolean alreadyDismissed;
    Action ToastDismissed;

    // Methods:
    void .ctor(...);
    void add_ToastDismissed(...);
    void remove_ToastDismissed(...);
    void DismissToast(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void add_ToastDismissed(...);
    /*[05]*/ void remove_ToastDismissed(...);
    /*[06]*/ void DismissToast(...);
}

// Namespace: Niantic.Holoholo.UI
class RectTransformExt {
    // Methods:
    boolean ChildIsVisible(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DataSet {
    // Fields:
    Generic <TextFields>k__BackingField;
    Generic <ImageFields>k__BackingField;
    Generic <SliderFields>k__BackingField;

    // Methods:
    void .ctor(...);
    Generic get_TextFields(...);
    void set_TextFields(...);
    Generic get_ImageFields(...);
    void set_ImageFields(...);
    Generic get_SliderFields(...);
    void set_SliderFields(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DataSetOf`1 {
    // Fields:
    var <Source>k__BackingField;

    // Methods:
    void .ctor(...);
    var get_Source(...);
    void set_Source(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TextBinding {
    // Fields:
    String Key;
    Text TextField;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SpriteBinding {
    // Fields:
    String Key;
    Image ImageField;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class SliderBinding {
    // Fields:
    String Key;
    Slider SliderField;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class AlphaFadeTransition {
    // Fields:
    CanvasGroup targetCanvasGroup;
    float startAlpha;
    float endAlpha;
    AnimationCurve fadeCurve;
    float duration;

    // Methods:
    void .ctor(...);
    IEnumerator RunTransition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator RunTransition(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class AnimatorTransition {
    // Fields:
    Animator targetAnimator;
    String transitionState;
    int transitionLayer;

    // Methods:
    void .ctor(...);
    AnimatorStateInfo get_LayerStateInfo(...);
    boolean get_InTransitionState(...);
    IEnumerator RunTransition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator RunTransition(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class CompleteNowGuiTransition {
    // Methods:
    void .ctor(...);
    IEnumerator RunTransition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator RunTransition(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class GuiTransition {
    // Fields:
    TransitionType type;
    Coroutine runRoutine;

    // Methods:
    void .ctor(...);
    TransitionType get_Type(...);
    IPromise Play(...);
    IEnumerator RunTransition(...);
    void <Play>m__2A2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TransitionType {
    // Fields:
    int value__;
    TransitionType In = 0;
    TransitionType Out = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class ScreenWipeTransition {
    // Fields:
    Factory wipeFactory;
    Direction direction;
    float duration;

    // Methods:
    void .ctor(...);
    IEnumerator RunTransition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator RunTransition(...);
}

// Namespace: Niantic.Holoholo.UI.Transition
class SlideTransition {
    // Fields:
    RectTransform targetTransform;
    Vector2 startPosition;
    Vector2 endPosition;
    AnimationCurve slideCurve;
    float duration;

    // Methods:
    void .ctor(...);
    IEnumerator RunTransition(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ IEnumerator RunTransition(...);
}

// Namespace: Niantic.Holoholo.UI
class LetterSpacing {
    // Fields:
    float spacing;

    // Methods:
    void .ctor(...);
    float get_Spacing(...);
    void set_Spacing(...);
    void ModifyMesh(...);
    void ModifyVertices(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Awake(...);
    /*[05]*/ void OnEnable(...);
    /*[06]*/ void Start(...);
    /*[07]*/ void OnDisable(...);
    /*[08]*/ void OnDestroy(...);
    /*[09]*/ boolean IsActive(...);
    /*[10]*/ void OnRectTransformDimensionsChange(...);
    /*[11]*/ void OnBeforeTransformParentChanged(...);
    /*[12]*/ void OnTransformParentChanged(...);
    /*[13]*/ void OnDidApplyAnimationProperties(...);
    /*[14]*/ void OnCanvasGroupChanged(...);
    /*[15]*/ void OnCanvasHierarchyChanged(...);
    /*[16]*/ void ModifyMesh(...);
    /*[17]*/ void ModifyMesh(...);
    /*[18]*/ void ModifyMesh(...);
    /*[19]*/ void ModifyMesh(...);
}

// Namespace: Niantic.Holoholo.UI
class UIExtensions {
    // Methods:
    IEnumerator CrossFadeAlphaRoutine(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Niantic.Holoholo.UI
class ButtonReactiveFXController {
    // Fields:
    float btnPos;
    Orientation orientation;

    // Methods:
    void .ctor(...);
    void SpawnReaction(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Orientation {
    // Fields:
    int value__;
    Orientation BottomLeft = 0;
    Orientation BottomMiddle = 1;
    Orientation BottomRight = 2;
    Orientation InputPos = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Niantic.Holoholo.UI
class UserResponsePromise`1 {
    // Fields:
    Generic actions;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void TriggerAction(...);
    Generic On(...);
    void <TriggerAction>m__2A3(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic On(...);
}

// Namespace: Niantic.Holoholo.UI
class UserResponsePromise`2 {
    // Fields:
    Generic actions;

    // Methods:
    void .ctor(...);
    void TriggerAction(...);
    Generic On(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic On(...);
}

// Namespace: Niantic.Holoholo.UI
class IUserResponsePromise`1 {
    // Methods:
    Generic On(...);
}

// Namespace: Niantic.Holoholo.UI
class IUserResponsePromise`2 {
    // Methods:
    Generic On(...);
}

// Namespace: UnityTest
class AssertionComponent {
    // Fields:
    float checkAfterTime;
    boolean repeatCheckTime;
    float repeatEveryTime;
    int checkAfterFrames;
    boolean repeatCheckFrame;
    int repeatEveryFrame;
    boolean hasFailed;
    CheckMethod checkMethods;
    ActionBase m_ActionBase;
    int checksPerformed;
    int m_CheckOnFrame;
    String m_CreatedInFilePath;
    int m_CreatedInFileLine;

    // Methods:
    void .ctor(...);
    ActionBase get_Action(...);
    void set_Action(...);
    Object GetFailureReferenceObject(...);
    String GetCreationLocation(...);
    void Awake(...);
    void OnValidate(...);
    void OnComponentCopy(...);
    void Start(...);
    IEnumerator CheckPeriodically(...);
    boolean ShouldCheckOnFrame(...);
    void OnDisable(...);
    void OnEnable(...);
    void OnDestroy(...);
    void Update(...);
    void FixedUpdate(...);
    void LateUpdate(...);
    void OnControllerColliderHit(...);
    void OnParticleCollision(...);
    void OnJointBreak(...);
    void OnBecameInvisible(...);
    void OnBecameVisible(...);
    void OnTriggerEnter(...);
    void OnTriggerExit(...);
    void OnTriggerStay(...);
    void OnCollisionEnter(...);
    void OnCollisionExit(...);
    void OnCollisionStay(...);
    void OnTriggerEnter2D(...);
    void OnTriggerExit2D(...);
    void OnTriggerStay2D(...);
    void OnCollisionEnter2D(...);
    void OnCollisionExit2D(...);
    void OnCollisionStay2D(...);
    void CheckAssertionFor(...);
    boolean IsCheckMethodSelected(...);
    cmod_opt Create(...);
    cmod_opt Create(...);
    cmod_opt Create(...);
    cmod_opt Create(...);
    cmod_opt Create(...);
    cmod_opt Create(...);
    cmod_opt CreateAssertionComponent(...);
    void set_UpdateCheckStartOnFrame(...);
    void set_UpdateCheckRepeatFrequency(...);
    void set_UpdateCheckRepeat(...);
    void set_TimeCheckStartAfter(...);
    void set_TimeCheckRepeatFrequency(...);
    void set_TimeCheckRepeat(...);
    AssertionComponent get_Component(...);
    boolean <OnComponentCopy>m__2A5(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void set_UpdateCheckStartOnFrame(...);
    /*[05]*/ void set_UpdateCheckRepeatFrequency(...);
    /*[06]*/ void set_UpdateCheckRepeat(...);
    /*[07]*/ void set_TimeCheckStartAfter(...);
    /*[08]*/ void set_TimeCheckRepeatFrequency(...);
    /*[09]*/ void set_TimeCheckRepeat(...);
    /*[10]*/ AssertionComponent get_Component(...);
}

// Namespace: UnityTest
class CheckMethod {
    // Fields:
    int value__;
    CheckMethod AfterPeriodOfTime = 1;
    CheckMethod Start = 2;
    CheckMethod Update = 4;
    CheckMethod FixedUpdate = 8;
    CheckMethod LateUpdate = 16;
    CheckMethod OnDestroy = 32;
    CheckMethod OnEnable = 64;
    CheckMethod OnDisable = 128;
    CheckMethod OnControllerColliderHit = 256;
    CheckMethod OnParticleCollision = 512;
    CheckMethod OnJointBreak = 1024;
    CheckMethod OnBecameInvisible = 2048;
    CheckMethod OnBecameVisible = 4096;
    CheckMethod OnTriggerEnter = 8192;
    CheckMethod OnTriggerExit = 16384;
    CheckMethod OnTriggerStay = 32768;
    CheckMethod OnCollisionEnter = 65536;
    CheckMethod OnCollisionExit = 131072;
    CheckMethod OnCollisionStay = 262144;
    CheckMethod OnTriggerEnter2D = 524288;
    CheckMethod OnTriggerExit2D = 1048576;
    CheckMethod OnTriggerStay2D = 2097152;
    CheckMethod OnCollisionEnter2D = 4194304;
    CheckMethod OnCollisionExit2D = 8388608;
    CheckMethod OnCollisionStay2D = 16777216;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class ActionBase {
    // Fields:
    GameObject go;
    mvar m_ObjVal;
    MemberResolver m_MemberResolver;
    String thisPropertyPath;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    cmod_reqd GetAccepatbleTypesForA(...);
    int GetDepthOfSearch(...);
    cmod_reqd GetExcludedFieldNames(...);
    boolean Compare(...);
    boolean Compare(...);
    boolean get_UseCache(...);
    Type GetParameterType(...);
    String GetConfigurationDescription(...);
    Generic GetFields(...);
    ActionBase CreateCopy(...);
    void Fail(...);
    String GetFailureMessage(...);
    boolean <GetConfigurationDescription>m__2A6(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean get_UseCache(...);
    /*[08]*/ Type GetParameterType(...);
    /*[09]*/ String GetConfigurationDescription(...);
    /*[10]*/ void Fail(...);
    /*[11]*/ String GetFailureMessage(...);
}

// Namespace: UnityTest
class MemberResolver {
    // Fields:
    mvar m_CallingObjectRef;
    cmod_reqd m_Callstack;
    GameObject m_GameObject;
    String m_Path;

    // Methods:
    void .ctor(...);
    mvar GetValue(...);
    Type GetMemberType(...);
    boolean TryGetMemberType(...);
    boolean TryGetValue(...);
    mvar GetValueFromMember(...);
    mvar GetBaseObject(...);
    cmod_reqd GetCallstack(...);
    void ValidatePath(...);
    boolean IsValueType(...);
    FieldInfo GetField(...);
    PropertyInfo GetProperty(...);
    MethodInfo GetGetMethod(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class IAssertionComponentConfigurator {
    // Methods:
    void set_UpdateCheckStartOnFrame(...);
    void set_UpdateCheckRepeatFrequency(...);
    void set_UpdateCheckRepeat(...);
    void set_TimeCheckStartAfter(...);
    void set_TimeCheckRepeatFrequency(...);
    void set_TimeCheckRepeat(...);
    AssertionComponent get_Component(...);
}

// Namespace: UnityTest
class AssertionException {
    // Fields:
    AssertionComponent m_Assertion;

    // Methods:
    void .ctor(...);
    String get_StackTrace(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: UnityTest
class Assertions {
    // Methods:
    void CheckAssertions(...);
    void CheckAssertions(...);
    void CheckAssertions(...);
    void CheckAssertions(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class ActionBaseGeneric`1 {
    // Methods:
    void .ctor(...);
    boolean Compare(...);
    boolean Compare(...);
    cmod_reqd GetAccepatbleTypesForA(...);
    Type GetParameterType(...);
    boolean get_UseCache(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
}

// Namespace: UnityTest
class BoolComparer {
    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: UnityTest
class ColliderComparer {
    // Fields:
    CompareType compareType;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType Intersects = 0;
    CompareType DoesNotIntersect = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class ComparerBase {
    // Fields:
    CompareToType compareToType;
    GameObject other;
    mvar m_ObjOtherVal;
    String otherPropertyPath;
    MemberResolver m_MemberResolverB;
    mvar <ConstValue>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean Compare(...);
    boolean Compare(...);
    cmod_reqd GetAccepatbleTypesForB(...);
    mvar get_ConstValue(...);
    void set_ConstValue(...);
    mvar GetDefaultConstValue(...);
    String GetFailureMessage(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[14]*/ mvar get_ConstValue(...);
    /*[15]*/ void set_ConstValue(...);
    /*[16]*/ mvar GetDefaultConstValue(...);
}

// Namespace: 
class CompareToType {
    // Fields:
    int value__;
    CompareToType CompareToObject = 0;
    CompareToType CompareToConstantValue = 1;
    CompareToType CompareToNull = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class ComparerBaseGeneric`1 {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
}

// Namespace: UnityTest
class ComparerBaseGeneric`2 {
    // Fields:
    var constantValueGeneric;

    // Methods:
    void .ctor(...);
    mvar get_ConstValue(...);
    void set_ConstValue(...);
    mvar GetDefaultConstValue(...);
    boolean IsValueType(...);
    boolean Compare(...);
    boolean Compare(...);
    cmod_reqd GetAccepatbleTypesForA(...);
    cmod_reqd GetAccepatbleTypesForB(...);
    boolean get_UseCache(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
}

// Namespace: UnityTest
class FloatComparer {
    // Fields:
    CompareTypes compareTypes;
    double floatingPointError;

    // Methods:
    void .ctor(...);
    boolean Compare(...);
    int GetDepthOfSearch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareTypes {
    // Fields:
    int value__;
    CompareTypes Equal = 0;
    CompareTypes NotEqual = 1;
    CompareTypes Greater = 2;
    CompareTypes Less = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class GeneralComparer {
    // Fields:
    CompareType compareType;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType AEqualsB = 0;
    CompareType ANotEqualsB = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class IntComparer {
    // Fields:
    CompareType compareType;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType Equal = 0;
    CompareType NotEqual = 1;
    CompareType Greater = 2;
    CompareType GreaterOrEqual = 3;
    CompareType Less = 4;
    CompareType LessOrEqual = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class IsRenderedByCamera {
    // Fields:
    CompareType compareType;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType IsVisible = 0;
    CompareType IsNotVisible = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class StringComparer {
    // Fields:
    CompareType compareType;
    StringComparison comparisonType;
    boolean ignoreCase;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType Equal = 0;
    CompareType NotEqual = 1;
    CompareType Shorter = 2;
    CompareType Longer = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class TransformComparer {
    // Fields:
    CompareType compareType;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType Equals = 0;
    CompareType NotEquals = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class ValueDoesNotChange {
    // Fields:
    mvar m_Value;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
}

// Namespace: UnityTest
class Vector2Comparer {
    // Fields:
    CompareType compareType;
    float floatingPointError;

    // Methods:
    void .ctor(...);
    boolean Compare(...);
    int GetDepthOfSearch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType MagnitudeEquals = 0;
    CompareType MagnitudeNotEquals = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class Vector3Comparer {
    // Fields:
    CompareType compareType;
    double floatingPointError;

    // Methods:
    void .ctor(...);
    boolean Compare(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType MagnitudeEquals = 0;
    CompareType MagnitudeNotEquals = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class Vector4Comparer {
    // Fields:
    CompareType compareType;
    double floatingPointError;

    // Methods:
    void .ctor(...);
    boolean Compare(...);
    int GetDepthOfSearch(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
    /*[18]*/ boolean Compare(...);
}

// Namespace: 
class CompareType {
    // Fields:
    int value__;
    CompareType MagnitudeEquals = 0;
    CompareType MagnitudeNotEquals = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class VectorComparerBase`1 {
    // Methods:
    void .ctor(...);
    boolean AreVectorMagnitudeEqual(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ cmod_reqd GetAccepatbleTypesForA(...);
    /*[05]*/ int GetDepthOfSearch(...);
    /*[06]*/ cmod_reqd GetExcludedFieldNames(...);
    /*[07]*/ boolean Compare(...);
    /*[08]*/ boolean get_UseCache(...);
    /*[09]*/ Type GetParameterType(...);
    /*[10]*/ String GetConfigurationDescription(...);
    /*[11]*/ void Fail(...);
    /*[12]*/ String GetFailureMessage(...);
    /*[13]*/ boolean Compare(...);
    /*[14]*/ cmod_reqd GetAccepatbleTypesForB(...);
    /*[15]*/ mvar get_ConstValue(...);
    /*[16]*/ void set_ConstValue(...);
    /*[17]*/ mvar GetDefaultConstValue(...);
}

// Namespace: UnityTest
class InvalidPathException {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: 
class ITestResult {
    // Methods:
    TestResultState get_ResultState(...);
    String get_Message(...);
    String get_Logs(...);
    boolean get_Executed(...);
    String get_Name(...);
    String get_FullName(...);
    String get_Id(...);
    boolean get_IsSuccess(...);
    double get_Duration(...);
    String get_StackTrace(...);
    boolean get_IsIgnored(...);
}

// Namespace: UnityTest
class TestResultState {
    // Fields:
    byte value__;
    TestResultState Inconclusive = 0;
    TestResultState NotRunnable = 1;
    TestResultState Skipped = 2;
    TestResultState Ignored = 3;
    TestResultState Success = 4;
    TestResultState Failure = 5;
    TestResultState Error = 6;
    TestResultState Cancelled = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class DTOFormatter {
    // Methods:
    void .ctor(...);
    void Transfer(...);
    void Serialize(...);
    mvar Deserialize(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ITransferInterface {
    // Methods:
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
}

// Namespace: 
class Writer {
    // Fields:
    Stream _stream;

    // Methods:
    void .ctor(...);
    void WriteConvertedNumber(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Transfer(...);
    /*[05]*/ void Transfer(...);
    /*[06]*/ void Transfer(...);
    /*[07]*/ void Transfer(...);
    /*[08]*/ void Transfer(...);
    /*[09]*/ void Transfer(...);
    /*[10]*/ void Transfer(...);
    /*[11]*/ void Transfer(...);
}

// Namespace: 
class Reader {
    // Fields:
    Stream _stream;

    // Methods:
    void .ctor(...);
    cmod_reqd ReadConvertedNumber(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);
    void Transfer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Transfer(...);
    /*[05]*/ void Transfer(...);
    /*[06]*/ void Transfer(...);
    /*[07]*/ void Transfer(...);
    /*[08]*/ void Transfer(...);
    /*[09]*/ void Transfer(...);
    /*[10]*/ void Transfer(...);
    /*[11]*/ void Transfer(...);
}

// Namespace: UnityTest.IntegrationTestRunner
class ITestRunnerCallback {
    // Methods:
    void RunStarted(...);
    void RunFinished(...);
    void AllScenesFinished(...);
    void TestStarted(...);
    void TestFinished(...);
    void TestRunInterrupted(...);
}

// Namespace: 
class IntegrationTest {
    // Fields:
    String passMessage = "IntegrationTest Pass";
    String failMessage = "IntegrationTest Fail";

    // Methods:
    void Pass(...);
    void Pass(...);
    void Fail(...);
    void Fail(...);
    void Fail(...);
    void Fail(...);
    void Assert(...);
    void Assert(...);
    void Assert(...);
    void Assert(...);
    void LogResult(...);
    void LogResult(...);
    GameObject FindTestObject(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ExcludePlatformAttribute {
    // Fields:
    cmod_reqd platformsToExclude;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    String <ExcludePlatformAttribute>m__2A7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class ExpectExceptions {
    // Fields:
    cmod_reqd exceptionTypeNames;
    boolean succeedOnException;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    String <ExpectExceptions>m__2A8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class IgnoreAttribute {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class DynamicTestAttribute {
    // Fields:
    String m_SceneName;

    // Methods:
    void .ctor(...);
    boolean IncludeOnScene(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class SucceedWithAssertions {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class TimeoutAttribute {
    // Fields:
    float timeout;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: 
class IntegrationTestAttribute {
    // Fields:
    String m_Path;

    // Methods:
    void .ctor(...);
    boolean IncludeOnScene(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: UnityTest.IntegrationTestRunner
class IntegrationTestsProvider {
    // Fields:
    Generic testCollection;
    ITestComponent currentTestGroup;
    Generic testToRun;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void AddTestToList(...);
    ITestComponent GetNextTest(...);
    void FinishTest(...);
    ITestComponent FindNextTestGroup(...);
    ITestComponent FindInnerTestGroup(...);
    boolean AnyTestsLeft(...);
    Generic GetRemainingTests(...);
    ITestComponent <IntegrationTestsProvider>m__2A9(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class ITestComponent {
    // Methods:
    void EnableTest(...);
    boolean IsTestGroup(...);
    GameObject get_gameObject(...);
    String get_Name(...);
    ITestComponent GetTestGroup(...);
    boolean IsExceptionExpected(...);
    boolean ShouldSucceedOnException(...);
    double GetTimeout(...);
    boolean IsIgnored(...);
    boolean ShouldSucceedOnAssertions(...);
    boolean IsExludedOnThisPlatform(...);
}

// Namespace: UnityTest
class NetworkResultSender {
    // Fields:
    TimeSpan m_ConnectionTimeout;
    String m_Ip;
    int m_Port;
    boolean m_LostConnection;

    // Methods:
    void .ctor(...);
    boolean SendDTO(...);
    boolean Ping(...);
    void RunStarted(...);
    void RunFinished(...);
    void TestStarted(...);
    void TestFinished(...);
    void AllScenesFinished(...);
    void TestRunInterrupted(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void RunStarted(...);
    /*[05]*/ void RunFinished(...);
    /*[06]*/ void AllScenesFinished(...);
    /*[07]*/ void TestStarted(...);
    /*[08]*/ void TestFinished(...);
    /*[09]*/ void TestRunInterrupted(...);
}

// Namespace: UnityTest
class ResultDTO {
    // Fields:
    MessageType messageType;
    int levelCount;
    int loadedLevel;
    String loadedLevelName;
    String testName;
    float testTimeout;
    ITestResult testResult;

    // Methods:
    void .ctor(...);
    ResultDTO CreatePing(...);
    ResultDTO CreateRunStarted(...);
    ResultDTO CreateRunFinished(...);
    ResultDTO CreateTestStarted(...);
    ResultDTO CreateTestFinished(...);
    ResultDTO CreateAllScenesFinished(...);
    ITestResult GetSerializableTestResult(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class MessageType {
    // Fields:
    byte value__;
    MessageType Ping = 0;
    MessageType RunStarted = 1;
    MessageType RunFinished = 2;
    MessageType TestStarted = 3;
    MessageType TestFinished = 4;
    MessageType RunInterrupted = 5;
    MessageType AllScenesFinished = 6;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class SerializableTestResult {
    // Fields:
    TestResultState resultState;
    String message;
    boolean executed;
    String name;
    String fullName;
    String id;
    boolean isSuccess;
    double duration;
    String stackTrace;
    boolean isIgnored;

    // Methods:
    void .ctor(...);
    TestResultState get_ResultState(...);
    String get_Message(...);
    String get_Logs(...);
    boolean get_Executed(...);
    String get_Name(...);
    String get_FullName(...);
    String get_Id(...);
    boolean get_IsSuccess(...);
    double get_Duration(...);
    String get_StackTrace(...);
    boolean get_IsIgnored(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ TestResultState get_ResultState(...);
    /*[05]*/ String get_Message(...);
    /*[06]*/ String get_Logs(...);
    /*[07]*/ boolean get_Executed(...);
    /*[08]*/ String get_Name(...);
    /*[09]*/ String get_FullName(...);
    /*[10]*/ String get_Id(...);
    /*[11]*/ boolean get_IsSuccess(...);
    /*[12]*/ double get_Duration(...);
    /*[13]*/ String get_StackTrace(...);
    /*[14]*/ boolean get_IsIgnored(...);
}

// Namespace: UnityTest
class TestComponent {
    // Fields:
    ITestComponent NullTestComponent;
    float timeout;
    boolean ignored;
    boolean succeedAfterAllAssertionsAreExecuted;
    boolean expectException;
    String expectedExceptionList;
    boolean succeedWhenExceptionIsThrown;
    IncludedPlatforms includedPlatforms;
    cmod_reqd platformsToIgnore;
    boolean dynamic;
    String dynamicTypeName;
    Generic <>f__am$cacheB;
    Generic <>f__am$cacheC;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean IsExludedOnThisPlatform(...);
    boolean IsAssignableFrom(...);
    boolean IsExceptionExpected(...);
    boolean ShouldSucceedOnException(...);
    double GetTimeout(...);
    boolean IsIgnored(...);
    boolean ShouldSucceedOnAssertions(...);
    Type GetTypeByName(...);
    void OnValidate(...);
    void EnableTest(...);
    int CompareTo(...);
    boolean IsTestGroup(...);
    String get_Name(...);
    ITestComponent GetTestGroup(...);
    boolean Equals(...);
    int GetHashCode(...);
    TestComponent CreateDynamicTest(...);
    GameObject CreateTest(...);
    GameObject CreateTest(...);
    Generic FindAllTestsOnScene(...);
    Generic FindAllTopTestsOnScene(...);
    Generic FindAllDynamicTestsOnScene(...);
    void DestroyAllDynamicTests(...);
    void DisableAllTests(...);
    boolean AnyTestsOnScene(...);
    boolean AnyDynamicTestForCurrentScene(...);
    Generic GetTypesWithHelpAttribute(...);
    boolean op_Equality(...);
    boolean op_Inequality(...);
    boolean <IsExludedOnThisPlatform>m__2AA(...);
    String <IsExceptionExpected>m__2AB(...);
    Generic <GetTypeByName>m__2AC(...);
    boolean <FindAllTopTestsOnScene>m__2AE(...);
    boolean <FindAllDynamicTestsOnScene>m__2AF(...);
    GameObject UnityTest.ITestComponent.get_gameObject(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void EnableTest(...);
    /*[05]*/ boolean IsTestGroup(...);
    /*[06]*/ GameObject UnityTest.ITestComponent.get_gameObject(...);
    /*[07]*/ String get_Name(...);
    /*[08]*/ ITestComponent GetTestGroup(...);
    /*[09]*/ boolean IsExceptionExpected(...);
    /*[10]*/ boolean ShouldSucceedOnException(...);
    /*[11]*/ double GetTimeout(...);
    /*[12]*/ boolean IsIgnored(...);
    /*[13]*/ boolean ShouldSucceedOnAssertions(...);
    /*[14]*/ boolean IsExludedOnThisPlatform(...);
    /*[15]*/ int CompareTo(...);
    /*[16]*/ GameObject UnityTest.ITestComponent.get_gameObject(...);
}

// Namespace: 
class IncludedPlatforms {
    // Fields:
    int value__;
    IncludedPlatforms WindowsEditor = 1;
    IncludedPlatforms OSXEditor = 2;
    IncludedPlatforms WindowsPlayer = 4;
    IncludedPlatforms OSXPlayer = 8;
    IncludedPlatforms LinuxPlayer = 16;
    IncludedPlatforms MetroPlayerX86 = 32;
    IncludedPlatforms MetroPlayerX64 = 64;
    IncludedPlatforms MetroPlayerARM = 128;
    IncludedPlatforms WindowsWebPlayer = 256;
    IncludedPlatforms OSXWebPlayer = 512;
    IncludedPlatforms Android = 1024;
    IncludedPlatforms IPhonePlayer = 2048;
    IncludedPlatforms TizenPlayer = 4096;
    IncludedPlatforms WP8Player = 8192;
    IncludedPlatforms BB10Player = 16384;
    IncludedPlatforms NaCl = 32768;
    IncludedPlatforms PS3 = 65536;
    IncludedPlatforms XBOX360 = 131072;
    IncludedPlatforms WiiPlayer = 262144;
    IncludedPlatforms PSP2 = 524288;
    IncludedPlatforms PS4 = 1048576;
    IncludedPlatforms PSMPlayer = 2097152;
    IncludedPlatforms XboxOne = 4194304;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class NullTestComponentImpl {
    // Fields:
    GameObject <gameObject>k__BackingField;

    // Methods:
    void .ctor(...);
    int CompareTo(...);
    void EnableTest(...);
    boolean IsTestGroup(...);
    GameObject get_gameObject(...);
    void set_gameObject(...);
    String get_Name(...);
    ITestComponent GetTestGroup(...);
    boolean IsExceptionExpected(...);
    boolean ShouldSucceedOnException(...);
    double GetTimeout(...);
    boolean IsIgnored(...);
    boolean ShouldSucceedOnAssertions(...);
    boolean IsExludedOnThisPlatform(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void EnableTest(...);
    /*[05]*/ boolean IsTestGroup(...);
    /*[06]*/ GameObject get_gameObject(...);
    /*[07]*/ String get_Name(...);
    /*[08]*/ ITestComponent GetTestGroup(...);
    /*[09]*/ boolean IsExceptionExpected(...);
    /*[10]*/ boolean ShouldSucceedOnException(...);
    /*[11]*/ double GetTimeout(...);
    /*[12]*/ boolean IsIgnored(...);
    /*[13]*/ boolean ShouldSucceedOnAssertions(...);
    /*[14]*/ boolean IsExludedOnThisPlatform(...);
    /*[15]*/ int CompareTo(...);
}

// Namespace: UnityTest
class TestResult {
    // Fields:
    GameObject m_Go;
    String m_Name;
    ResultType resultType;
    double duration;
    String messages;
    String stacktrace;
    String id;
    boolean dynamicTest;
    TestComponent TestComponent;

    // Methods:
    void .ctor(...);
    GameObject get_GameObject(...);
    void Update(...);
    void Reset(...);
    TestResultState get_ResultState(...);
    String get_Message(...);
    String get_Logs(...);
    boolean get_Executed(...);
    String get_Name(...);
    String get_Id(...);
    boolean get_IsSuccess(...);
    boolean get_IsTimeout(...);
    double get_Duration(...);
    String get_StackTrace(...);
    String get_FullName(...);
    boolean get_IsIgnored(...);
    boolean get_IsFailure(...);
    int GetHashCode(...);
    int CompareTo(...);
    boolean Equals(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ TestResultState get_ResultState(...);
    /*[05]*/ String get_Message(...);
    /*[06]*/ String get_Logs(...);
    /*[07]*/ boolean get_Executed(...);
    /*[08]*/ String get_Name(...);
    /*[09]*/ String get_FullName(...);
    /*[10]*/ String get_Id(...);
    /*[11]*/ boolean get_IsSuccess(...);
    /*[12]*/ double get_Duration(...);
    /*[13]*/ String get_StackTrace(...);
    /*[14]*/ boolean get_IsIgnored(...);
    /*[15]*/ int CompareTo(...);
}

// Namespace: 
class ResultType {
    // Fields:
    int value__;
    ResultType Success = 0;
    ResultType Failed = 1;
    ResultType Timeout = 2;
    ResultType NotRun = 3;
    ResultType FailedException = 4;
    ResultType Ignored = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class TestResultRenderer {
    // Fields:
    Generic m_TestCollection;
    boolean m_ShowResults;
    Vector2 m_ScrollPosition;
    int m_FailureCount;
    Generic <>f__am$cache4;
    Generic <>f__am$cache5;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    void ShowResults(...);
    void AddResults(...);
    void Draw(...);
    int FailureCount(...);
    int <Draw>m__2B0(...);
    boolean <Draw>m__2B1(...);
    String <Draw>m__2B2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Styles {
    // Fields:
    GUIStyle SucceedLabelStyle;
    GUIStyle FailedLabelStyle;
    GUIStyle FailedMessagesStyle;

    // Methods:
    void .cctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest
class TestRunner {
    // Fields:
    String k_Prefix = "IntegrationTest";
    String k_StartedMessage = "IntegrationTest Started";
    String k_FinishedMessage = "IntegrationTest Finished";
    String k_TimeoutMessage = "IntegrationTest Timeout";
    String k_FailedMessage = "IntegrationTest Failed";
    String k_FailedExceptionMessage = "IntegrationTest Failed with exception";
    String k_IgnoredMessage = "IntegrationTest Ignored";
    String k_InterruptedMessage = "IntegrationTest Run interrupted";
    int TestSceneNumber;
    TestResultRenderer k_ResultRenderer;
    TestComponent currentTest;
    Generic m_ResultList;
    Generic m_TestComponents;
    double m_StartTime;
    boolean m_ReadyToRun;
    String m_TestMessages;
    String m_Stacktrace;
    TestState m_TestState;
    TestRunnerConfigurator m_Configurator;
    TestRunnerCallbackList TestRunnerCallback;
    IntegrationTestsProvider m_TestsProvider;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;
    Generic <>f__am$cache10;
    Generic <>f__am$cache11;
    Generic <>f__am$cache12;
    Generic <>f__am$cache13;
    Generic <>f__am$cache14;
    Generic <>f__am$cache15;
    Generic <>f__am$cache16;
    Generic <>f__am$cache17;
    Generic <>f__am$cache18;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_isInitializedByRunner(...);
    void Awake(...);
    void Start(...);
    void InitRunner(...);
    Generic ParseListForGroups(...);
    void Update(...);
    void OnDestroy(...);
    void LogHandler(...);
    IEnumerator StateMachine(...);
    void LogMessage(...);
    void FinishTestRun(...);
    void PrintResultToLog(...);
    void LoadNextLevelOrQuit(...);
    void OnGUI(...);
    void StartNewTest(...);
    void FinishTest(...);
    TestRunner GetTestRunner(...);
    GameObject Create(...);
    boolean IsBatchMode(...);
    String <Start>m__2B3(...);
    TestResult <InitRunner>m__2B4(...);
    ITestComponent <InitRunner>m__2B5(...);
    boolean <OnDestroy>m__2B7(...);
    boolean <PrintResultToLog>m__2B8(...);
    boolean <PrintResultToLog>m__2B9(...);
    boolean <PrintResultToLog>m__2BA(...);
    boolean <PrintResultToLog>m__2BB(...);
    String <PrintResultToLog>m__2BC(...);
    boolean <PrintResultToLog>m__2BD(...);
    boolean <PrintResultToLog>m__2BE(...);
    boolean <PrintResultToLog>m__2BF(...);
    String <PrintResultToLog>m__2C0(...);
    boolean <StartNewTest>m__2C1(...);
    boolean <FinishTest>m__2C2(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TestState {
    // Fields:
    int value__;
    TestState Running = 0;
    TestState Success = 1;
    TestState Failure = 2;
    TestState Exception = 3;
    TestState Timeout = 4;
    TestState Ignored = 5;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: UnityTest
class TestRunnerConfigurator {
    // Fields:
    String integrationTestsNetwork;
    String batchRunFileMarker;
    String testScenesToRun;
    String previousScenes;
    Generic m_IPEndPointList;
    boolean <isBatchRun>k__BackingField;
    boolean <sendResultsOverNetwork>k__BackingField;
    Generic <>f__am$cache7;
    Generic <>f__am$cache8;
    Generic <>f__am$cache9;
    Generic <>f__am$cacheA;
    Generic <>f__am$cacheB;
    Generic <>f__am$cacheC;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    boolean get_isBatchRun(...);
    void set_isBatchRun(...);
    boolean get_sendResultsOverNetwork(...);
    void set_sendResultsOverNetwork(...);
    String GetIntegrationTestScenes(...);
    void CheckForSendingResultsOverNetwork(...);
    String GetTextFromTextAsset(...);
    String GetTextFromTempFile(...);
    void CheckForBatchMode(...);
    Generic GetAvailableNetworkIPs(...);
    ITestRunnerCallback ResolveNetworkConnection(...);
    boolean <GetAvailableNetworkIPs>m__2C5(...);
    String <GetAvailableNetworkIPs>m__2C6(...);
    int <GetAvailableNetworkIPs>m__2C7(...);
    String <GetAvailableNetworkIPs>m__2C8(...);
    NetworkResultSender <ResolveNetworkConnection>m__2C9(...);
    String <ResolveNetworkConnection>m__2CA(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: UnityTest.IntegrationTestRunner
class TestRunnerCallbackList {
    // Fields:
    Generic m_CallbackList;

    // Methods:
    void .ctor(...);
    void Add(...);
    void Remove(...);
    void RunStarted(...);
    void RunFinished(...);
    void AllScenesFinished(...);
    void TestStarted(...);
    void TestFinished(...);
    void TestRunInterrupted(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void RunStarted(...);
    /*[05]*/ void RunFinished(...);
    /*[06]*/ void AllScenesFinished(...);
    /*[07]*/ void TestStarted(...);
    /*[08]*/ void TestFinished(...);
    /*[09]*/ void TestRunInterrupted(...);
}

// Namespace: UnityTest
class CallTesting {
    // Fields:
    int afterFrames;
    float afterSeconds;
    Functions callOnMethod;
    Method methodToCall;
    int m_StartFrame;
    float m_StartTime;

    // Methods:
    void .ctor(...);
    void TryToCallTesting(...);
    void Start(...);
    void Update(...);
    void CallAfterFrames(...);
    void CallAfterSeconds(...);
    void OnDisable(...);
    void OnEnable(...);
    void OnDestroy(...);
    void FixedUpdate(...);
    void LateUpdate(...);
    void OnControllerColliderHit(...);
    void OnParticleCollision(...);
    void OnJointBreak(...);
    void OnBecameInvisible(...);
    void OnBecameVisible(...);
    void OnTriggerEnter(...);
    void OnTriggerExit(...);
    void OnTriggerStay(...);
    void OnCollisionEnter(...);
    void OnCollisionExit(...);
    void OnCollisionStay(...);
    void OnTriggerEnter2D(...);
    void OnTriggerExit2D(...);
    void OnTriggerStay2D(...);
    void OnCollisionEnter2D(...);
    void OnCollisionExit2D(...);
    void OnCollisionStay2D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Functions {
    // Fields:
    int value__;
    Functions CallAfterSeconds = 0;
    Functions CallAfterFrames = 1;
    Functions Start = 2;
    Functions Update = 3;
    Functions FixedUpdate = 4;
    Functions LateUpdate = 5;
    Functions OnDestroy = 6;
    Functions OnEnable = 7;
    Functions OnDisable = 8;
    Functions OnControllerColliderHit = 9;
    Functions OnParticleCollision = 10;
    Functions OnJointBreak = 11;
    Functions OnBecameInvisible = 12;
    Functions OnBecameVisible = 13;
    Functions OnTriggerEnter = 14;
    Functions OnTriggerExit = 15;
    Functions OnTriggerStay = 16;
    Functions OnCollisionEnter = 17;
    Functions OnCollisionExit = 18;
    Functions OnCollisionStay = 19;
    Functions OnTriggerEnter2D = 20;
    Functions OnTriggerExit2D = 21;
    Functions OnTriggerStay2D = 22;
    Functions OnCollisionEnter2D = 23;
    Functions OnCollisionExit2D = 24;
    Functions OnCollisionStay2D = 25;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class Method {
    // Fields:
    int value__;
    Method Pass = 0;
    Method Fail = 1;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Zenject
class BinderBase {
    // Fields:
    Type _contractType;
    DiContainer _container;
    String _bindIdentifier;

    // Methods:
    void .ctor(...);
    Type get_ContractType(...);
    DiContainer get_Container(...);
    BindingConditionSetter ToProvider(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class GenericBinder`1 {
    // Methods:
    void .ctor(...);
    BindingConditionSetter ToLookup(...);
    BindingConditionSetter ToLookup(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToGetter(...);
    BindingConditionSetter ToGetter(...);
    BindingConditionSetter ToTransient(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToInstance(...);
    BindingConditionSetter ToSingleInstance(...);
    BindingConditionSetter ToSingleInstance(...);
    BindingConditionSetter ToSingleMethod(...);
    BindingConditionSetter ToSingleMethod(...);
    BindingConditionSetter ToSingleFactory(...);
    BindingConditionSetter ToSingleFactory(...);
    BindingConditionSetter ToSingleFactory(...);
    BindingConditionSetter ToSingleFactory(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToResource(...);
    BindingConditionSetter ToTransientPrefabResource(...);
    BindingConditionSetter ToTransientPrefab(...);
    BindingConditionSetter ToTransientGameObject(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSinglePrefabResource(...);
    BindingConditionSetter ToSinglePrefabResource(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryBinder`1 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToInstance(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToIFactory(...);
    BindingConditionSetter ToFacadeFactory(...);
    BindingConditionSetter ToFacadeFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToPrefab(...);
    Generic <ToIFactory`1>m__2D4(...);
    Generic <ToCustomFactory`2>m__2D7(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryBinder`2 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToIFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToPrefab(...);
    Generic <ToIFactory`1>m__2DB(...);
    Generic <ToCustomFactory`2>m__2DC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryBinder`3 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToIFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToPrefab(...);
    Generic <ToIFactory`1>m__2DF(...);
    Generic <ToCustomFactory`2>m__2E0(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryBinder`4 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToIFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToPrefab(...);
    Generic <ToIFactory`1>m__2E3(...);
    Generic <ToCustomFactory`2>m__2E4(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryBinder`5 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToIFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToPrefab(...);
    Generic <ToIFactory`1>m__2E7(...);
    Generic <ToCustomFactory`2>m__2E8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactoryUntypedBinder`1 {
    // Fields:
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    BindingConditionSetter ToInstance(...);
    BindingConditionSetter ToMethod(...);
    BindingConditionSetter ToCustomFactory(...);
    BindingConditionSetter ToFactory(...);
    BindingConditionSetter ToFactory(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class InjectContext {
    // Fields:
    Type ObjectType;
    InjectContext ParentContext;
    mvar ObjectInstance;
    String Identifier;
    String ConcreteIdentifier;
    String MemberName;
    Type MemberType;
    boolean Optional;
    InjectSources SourceType;
    mvar FallBackValue;
    DiContainer Container;
    BindingId BindingId;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    Generic get_ParentContexts(...);
    Generic get_ParentContextsAndSelf(...);
    Generic get_AllObjectTypes(...);
    String GetObjectGraphString(...);
    InjectContext ChangeObjectInstance(...);
    InjectContext ChangeMemberType(...);
    InjectContext ChangeConcreteIdentifier(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class InjectSources {
    // Fields:
    int value__;
    InjectSources Any = 0;
    InjectSources Local = 1;
    InjectSources Parent = 2;
    InjectSources AnyParent = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Zenject
class TypeBinder {
    // Methods:
    void .ctor(...);
    BindingConditionSetter ToTransient(...);
    BindingConditionSetter ToTransient(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingle(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToSingleMonoBehaviour(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToTransientPrefab(...);
    BindingConditionSetter ToTransientGameObject(...);
    BindingConditionSetter ToTransientGameObject(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToSingleGameObject(...);
    BindingConditionSetter ToTransientPrefabResource(...);
    BindingConditionSetter ToTransientPrefabResource(...);
    BindingConditionSetter ToSinglePrefabResource(...);
    BindingConditionSetter ToSinglePrefabResource(...);
    BindingConditionSetter ToSinglePrefabResource(...);
    BindingConditionSetter ToTransientPrefab(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSinglePrefab(...);
    BindingConditionSetter ToSingleMethodBase(...);
    BindingConditionSetter ToSingleFactoryBase(...);
    BindingConditionSetter ToMethodBase(...);
    BindingConditionSetter ToLookupBase(...);
    BindingConditionSetter ToGetterBase(...);
    BindingConditionSetter ToInstance(...);
    BindingConditionSetter ToSingleInstance(...);
    BindingConditionSetter ToResource(...);
    BindingConditionSetter ToResource(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class ZenjectException {
    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: Zenject
class ZenjectResolveException {
    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: Zenject
class ZenjectBindException {
    // Methods:
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void GetObjectData(...);
    /*[05]*/ Exception get_InnerException(...);
    /*[06]*/ String get_Message(...);
    /*[07]*/ String get_Source(...);
    /*[08]*/ String get_StackTrace(...);
    /*[09]*/ void GetObjectData(...);
    /*[10]*/ Type GetType(...);
}

// Namespace: Zenject
class Facade {
    // Fields:
    TickableManager _tickableManager;
    InitializableManager _initializableManager;
    DisposableManager _disposablesManager;
    Generic _initialObjects;

    // Methods:
    void .ctor(...);
    TickableManager get_TickableManager(...);
    InitializableManager get_InitializableManager(...);
    DisposableManager get_DisposableManager(...);
    void Initialize(...);
    void Dispose(...);
    void Tick(...);
    void LateTick(...);
    void FixedTick(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ void Initialize(...);
    /*[06]*/ void Tick(...);
    /*[07]*/ void FixedTick(...);
    /*[08]*/ void LateTick(...);
    /*[09]*/ void Initialize(...);
    /*[10]*/ void Dispose(...);
    /*[11]*/ void Tick(...);
    /*[12]*/ void LateTick(...);
    /*[13]*/ void FixedTick(...);
}

// Namespace: Zenject
class TickableManager {
    // Fields:
    Generic _tickables;
    Generic _fixedTickables;
    Generic _lateTickables;
    Generic _priorities;
    Generic _fixedPriorities;
    Generic _latePriorities;
    TickablesTaskUpdater _updater;
    FixedTickablesTaskUpdater _fixedUpdater;
    LateTickablesTaskUpdater _lateUpdater;
    boolean _isPaused;
    Generic <>f__am$cacheA;
    Generic <>f__am$cacheB;
    Generic <>f__am$cacheC;
    Generic <>f__am$cacheD;
    Generic <>f__am$cacheE;
    Generic <>f__am$cacheF;

    // Methods:
    void .ctor(...);
    Generic get_Tickables(...);
    void Initialize(...);
    void InitFixedTickables(...);
    void InitTickables(...);
    void InitLateTickables(...);
    void Add(...);
    void Add(...);
    void AddLate(...);
    void AddLate(...);
    void AddFixed(...);
    void AddFixed(...);
    void Remove(...);
    void RemoveLate(...);
    void RemoveFixed(...);
    void Update(...);
    void FixedUpdate(...);
    void LateUpdate(...);
    void Pause(...);
    void Resume(...);
    Type <InitFixedTickables>m__33A(...);
    int <InitFixedTickables>m__33C(...);
    Type <InitTickables>m__33D(...);
    int <InitTickables>m__33F(...);
    Type <InitLateTickables>m__340(...);
    int <InitLateTickables>m__342(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class TickablesTaskUpdater {
    // Methods:
    void .ctor(...);
    void UpdateItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void UpdateItem(...);
}

// Namespace: Zenject
class FixedTickablesTaskUpdater {
    // Methods:
    void .ctor(...);
    void UpdateItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void UpdateItem(...);
}

// Namespace: Zenject
class LateTickablesTaskUpdater {
    // Methods:
    void .ctor(...);
    void UpdateItem(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void UpdateItem(...);
}

// Namespace: Zenject
class InitializableManager {
    // Fields:
    Generic _initializables;
    Generic <>f__am$cache1;
    Generic <>f__am$cache2;
    Generic <>f__am$cache3;

    // Methods:
    void .ctor(...);
    void Initialize(...);
    int <InitializableManager>m__335(...);
    int <Initialize>m__336(...);
    IInitializable <Initialize>m__337(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IInitializable {
    // Methods:
    void Initialize(...);
}

// Namespace: Zenject
class DisposableManager {
    // Fields:
    Generic _disposables;
    boolean _disposed;
    Generic <>f__am$cache2;
    Generic <>f__am$cache3;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    void Add(...);
    void Add(...);
    void Remove(...);
    void Dispose(...);
    int <DisposableManager>m__330(...);
    int <Dispose>m__332(...);
    IDisposable <Dispose>m__333(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: Zenject
class FacadeBinder`1 {
    // Fields:
    Generic _installerFunc;
    DiContainer _container;
    String _identifier;

    // Methods:
    void .ctor(...);
    void ToSingle(...);
    void AddValidator(...);
    var CreateFacade(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class Validator {
    // Fields:
    DiContainer _container;
    Generic _installerFunc;

    // Methods:
    void .ctor(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
}

// Namespace: Zenject
class IFacadeFactory {
}

// Namespace: Zenject
class FacadeFactory`1 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FacadeFactory`2 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorEA {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_573>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_574>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`3 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorEB {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_575>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_576>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`4 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorEC {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_577>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_578>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`5 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorED {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_579>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_580>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`6 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorEE {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_581>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_582>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`7 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorEF {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_583>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_584>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class FacadeFactory`8 {
    // Fields:
    DiContainer _container;
    Generic _containerInitializer;

    // Methods:
    void .ctor(...);
    Generic Zenject.IValidatable.Validate(...);
    var Create(...);
    DiContainer CreateSubContainer(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Zenject.IValidatable.Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: <IValidatable
class Validate>c__IteratorF0 {
    // Fields:
    DiContainer <subContainer>__0;
    Generic <$s_585>__1;
    ZenjectResolveException <error>__2;
    Generic <$s_586>__3;
    ZenjectResolveException <error>__4;
    int $PC;
    ZenjectResolveException $current;
    Generic <>f__this;

    // Methods:
    void .ctor(...);
    ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
    mvar System.Collections.IEnumerator.get_Current(...);
    IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    boolean MoveNext(...);
    void Dispose(...);
    void Reset(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ mvar System.Collections.IEnumerator.get_Current(...);
    /*[06]*/ boolean MoveNext(...);
    /*[07]*/ void Reset(...);
    /*[08]*/ IEnumerator System.Collections.IEnumerable.GetEnumerator(...);
    /*[09]*/ Generic System.Collections.Generic.IEnumerable<Zenject.ZenjectResolveException>.GetEnumerator(...);
    /*[10]*/ ZenjectResolveException System.Collections.Generic.IEnumerator<Zenject.ZenjectResolveException>.get_Current(...);
}

// Namespace: Zenject
class IFacade {
}

// Namespace: Zenject
class Factory`1 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`2 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`3 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`4 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`5 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`6 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`7 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`8 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`9 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`10 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class Factory`11 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    DiContainer get_Container(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethod`1 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethod`2 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethod`3 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethod`4 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethod`5 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Type get_ConstructedType(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryMethodUntyped`1 {
    // Fields:
    DiContainer _container;
    Generic _method;

    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ Generic Validate(...);
}

// Namespace: Zenject
class FactoryNested`2 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`3 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`4 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`5 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`6 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`7 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`8 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`9 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`10 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`11 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryNested`12 {
    // Fields:
    Generic _concreteFactory;

    // Methods:
    void .ctor(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class FactoryUntyped`2 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    void set_Container(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class FactoryUntyped`1 {
    // Fields:
    DiContainer _container;
    Type _concreteType;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    void set_Container(...);
    Type get_ConcreteType(...);
    void set_ConcreteType(...);
    void Initialize(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ var Create(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectFactory {
    // Fields:
    DiContainer _container;
    GameObject _prefab;
    String _groupName;

    // Methods:
    void .ctor(...);
    Generic Validate(...);
    cmod_opt CreateInternal(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
}

// Namespace: Zenject
class GameObjectFactory`1 {
    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectFactory`2 {
    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectFactory`3 {
    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectFactory`4 {
    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectFactory`5 {
    // Methods:
    void .ctor(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
    /*[06]*/ var Create(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class GameObjectInstantiator {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IFactory {
}

// Namespace: Zenject
class IFactory`1 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`2 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`3 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`4 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`5 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`6 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`7 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`8 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`9 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`10 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactory`11 {
    // Methods:
    var Create(...);
}

// Namespace: Zenject
class IFactoryUntyped`1 {
    // Methods:
    var Create(...);
    Generic Validate(...);
}

// Namespace: Zenject
class IValidatable {
    // Methods:
    Generic Validate(...);
}

// Namespace: Zenject
class IValidatableFactory {
    // Methods:
    Type get_ConstructedType(...);
    cmod_reqd get_ProvidedTypes(...);
}

// Namespace: Zenject
class TypeValuePair {
    // Fields:
    Type Type;
    mvar Value;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class InstantiateUtil {
    // Fields:
    Generic <>f__am$cache0;

    // Methods:
    Generic CreateTypeValueList(...);
    TypeValuePair CreateTypePair(...);
    boolean PopValueWithType(...);
    TypeValuePair <CreateTypeValueList>m__2EC(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class KeyedFactoryBase`2 {
    // Fields:
    DiContainer _container;
    Generic _typePairs;
    Generic _typeMap;
    Type _fallbackType;
    Generic <>f__am$cache4;
    Generic <>f__am$cache5;
    Generic <>f__am$cache6;
    Generic <>f__am$cache7;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    cmod_reqd get_ProvidedTypes(...);
    Generic get_Keys(...);
    Generic get_TypeMap(...);
    void Initialize(...);
    boolean HasKey(...);
    Type GetTypeForKey(...);
    Generic Validate(...);
    BindingConditionSetter AddBindingInternal(...);
    var <Initialize>m__2EE(...);
    String <Initialize>m__2EF(...);
    var <Initialize>m__2F0(...);
    Type <Initialize>m__2F1(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ Generic Validate(...);
}

// Namespace: Zenject
class KeyedFactory`2 {
    // Methods:
    void .ctor(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ Generic Validate(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class KeyedFactory`3 {
    // Methods:
    void .ctor(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ Generic Validate(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class KeyedFactory`4 {
    // Methods:
    void .ctor(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ Generic Validate(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class KeyedFactory`5 {
    // Methods:
    void .ctor(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ Generic Validate(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class KeyedFactory`6 {
    // Methods:
    void .ctor(...);
    cmod_reqd get_ProvidedTypes(...);
    var Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ cmod_reqd get_ProvidedTypes(...);
    /*[06]*/ Generic Validate(...);
    /*[07]*/ var Create(...);
}

// Namespace: Zenject
class ListFactory`1 {
    // Fields:
    DiContainer _container;
    Generic _implTypes;

    // Methods:
    void .ctor(...);
    void Bind(...);
    Generic Create(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PrefabFactory`1 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    var Create(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ var Create(...);
}

// Namespace: Zenject
class PrefabFactory`2 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    var Create(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class PrefabFactory`3 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    var Create(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class PrefabFactory`4 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    var Create(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class PrefabFactory`5 {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    var Create(...);
    var Create(...);
    Generic Validate(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic Validate(...);
    /*[05]*/ var Create(...);
    /*[06]*/ var Create(...);
}

// Namespace: Zenject
class InjectableInfo {
    // Fields:
    boolean Optional;
    String Identifier;
    InjectSources SourceType;
    String MemberName;
    Type MemberType;
    Type ObjectType;
    Generic Setter;
    mvar DefaultValue;

    // Methods:
    void .ctor(...);
    InjectContext CreateInjectContext(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class TypeAnalyzer {
    // Fields:
    Generic _typeInfo;
    Generic <>f__am$cache1;
    Generic <>f__am$cache2;

    // Methods:
    void .cctor(...);
    ZenjectTypeInfo GetInfo(...);
    ZenjectTypeInfo CreateTypeInfo(...);
    Generic GetConstructorInjectables(...);
    InjectableInfo CreateInjectableInfoForParam(...);
    Generic GetPostInjectMethods(...);
    Generic GetPropertyInjectables(...);
    Generic GetFieldInjectables(...);
    InjectableInfo CreateForMember(...);
    ConstructorInfo GetInjectConstructor(...);
    boolean <GetPostInjectMethods>m__2F3(...);
    boolean <GetInjectConstructor>m__2F8(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class ZenjectTypeInfo {
    // Fields:
    Generic _postInjectMethods;
    Generic _constructorInjectables;
    Generic _fieldInjectables;
    Generic _propertyInjectables;
    ConstructorInfo _injectConstructor;
    Type _typeAnalyzed;
    Generic <>f__am$cache6;

    // Methods:
    void .ctor(...);
    Type get_TypeAnalyzed(...);
    Generic get_PostInjectMethods(...);
    Generic get_AllInjectables(...);
    Generic get_FieldInjectables(...);
    Generic get_PropertyInjectables(...);
    Generic get_ConstructorInjectables(...);
    ConstructorInfo get_InjectConstructor(...);
    Generic <get_AllInjectables>m__2FB(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class PostInjectableInfo {
    // Fields:
    MethodInfo _methodInfo;
    Generic _injectableInfo;

    // Methods:
    void .ctor(...);
    MethodInfo get_MethodInfo(...);
    Generic get_InjectableInfo(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree
class Assert {
    // Methods:
    boolean get_IsEnabled(...);
    void That(...);
    void DerivesFrom(...);
    void DerivesFromOrEqual(...);
    void IsType(...);
    void IsType(...);
    void IsEqual(...);
    void Throws(...);
    void Throws(...);
    void IsEqual(...);
    void IsEqual(...);
    void IsNotEqual(...);
    void IsNotEqual(...);
    void IsNull(...);
    void IsNotNull(...);
    void IsNotNull(...);
    void IsNull(...);
    void IsNotNull(...);
    void IsNotEqual(...);
    void That(...);
    void That(...);
    void Throw(...);
    void Throw(...);
    String FormatString(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree
class LinqExtensions {
    // Methods:
    Generic Append(...);
    Generic Prepend(...);
    cmod_opt OnlyOrDefault(...);
    Generic Prepend(...);
    boolean HasAtLeast(...);
    boolean HasMoreThan(...);
    boolean HasLessThan(...);
    boolean HasAtMost(...);
    boolean IsEmpty(...);
    Generic GetDuplicates(...);
    Generic ReplaceOrAppend(...);
    Generic ToEnumerable(...);
    Generic ToEnumerable(...);
    Generic ToHashSet(...);
    boolean IsLength(...);
    cmod_opt GetSingle(...);
    Generic OfType(...);
    Generic DistinctBy(...);
    Generic DistinctBy(...);
    Generic DistinctByImpl(...);
    cmod_opt Second(...);
    cmod_opt SecondOrDefault(...);
    int RemoveAll(...);
    boolean ContainsItem(...);
    cmod_opt <GetDuplicates`1>m__2FC(...);
    boolean <GetDuplicates`1>m__2FD(...);
    cmod_opt <GetDuplicates`1>m__2FE(...);
    boolean <GetSingle`1>m__2FF(...);
    boolean <GetSingle`1>m__300(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree
class Log {
    // Methods:
    void Debug(...);
    void Info(...);
    void Warn(...);
    void Trace(...);
    void ErrorException(...);
    void ErrorException(...);
    void Error(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree
class MiscExtensions {
    // Methods:
    String Fmt(...);
    Generic Yield(...);
    String Join(...);
    void RemoveWithConfirm(...);
    void RemoveWithConfirm(...);
    void RemoveWithConfirm(...);
    void RemoveWithConfirm(...);
    cmod_opt GetValueAndRemove(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree.Util
class PreserveAttribute {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: ModestTree.Util.Debugging
class ProfileBlock {
    // Methods:
    void .ctor(...);
    ProfileBlock Start(...);
    ProfileBlock Start(...);
    ProfileBlock Start(...);
    ProfileBlock Start(...);
    void Dispose(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
}

// Namespace: ModestTree.Util
class ReflectionUtil {
    // Methods:
    boolean IsGenericList(...);
    boolean IsGenericList(...);
    IList CreateGenericList(...);
    IDictionary CreateGenericDictionary(...);
    mvar DowncastList(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree.Util
class Tuple`2 {
    // Fields:
    var First;
    var Second;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree.Util
class Tuple`3 {
    // Fields:
    var First;
    var Second;
    var Third;

    // Methods:
    void .ctor(...);
    void .ctor(...);
    boolean Equals(...);
    boolean Equals(...);
    int GetHashCode(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree.Util
class Tuple {
    // Methods:
    Generic New(...);
    Generic New(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree
class TypeExtensions {
    // Fields:
    Generic <>f__am$cache0;
    Generic <>f__switch$map7;

    // Methods:
    boolean DerivesFrom(...);
    boolean DerivesFrom(...);
    boolean DerivesFromOrEqual(...);
    boolean DerivesFromOrEqual(...);
    boolean IsValueType(...);
    cmod_reqd DeclaredInstanceMethods(...);
    cmod_reqd DeclaredInstanceProperties(...);
    cmod_reqd DeclaredInstanceFields(...);
    Type BaseType(...);
    boolean IsGenericType(...);
    boolean IsInterface(...);
    boolean IsAbstract(...);
    MethodInfo Method(...);
    cmod_reqd GenericArguments(...);
    cmod_reqd Interfaces(...);
    cmod_reqd Constructors(...);
    mvar GetDefaultValue(...);
    String GetSimpleName(...);
    Generic GetParentTypes(...);
    String NameWithParents(...);
    boolean IsClosedGenericType(...);
    boolean IsOpenGenericType(...);
    Generic GetAllInstanceFields(...);
    Generic GetAllInstanceProperties(...);
    Generic GetAllInstanceMethods(...);
    String Name(...);
    String GetCSharpTypeName(...);
    boolean HasAttribute(...);
    boolean HasAttribute(...);
    Generic AllAttributes(...);
    Generic AllAttributes(...);
    boolean HasAttribute(...);
    boolean HasAttribute(...);
    Generic AllAttributes(...);
    Generic AllAttributes(...);
    String <NameWithParents>m__303(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class CompositionRoot {
    // Fields:
    boolean _isDisposed;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    IFacade get_RootFacade(...);
    boolean get_AllowInjectInactive(...);
    void Update(...);
    void FixedUpdate(...);
    void LateUpdate(...);
    void OnApplicationQuit(...);
    void OnDestroy(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class LookupId {
    // Fields:
    ProviderBase Provider;
    BindingId BindingId;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class GlobalCompositionRoot {
    // Fields:
    String GlobalInstallersResourceName = "ZenjectGlobalInstallers";
    GlobalCompositionRoot _instance;
    DiContainer _container;
    IFacade _rootFacade;
    boolean _hasInitialized;
    Generic <>f__am$cache4;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    IFacade get_RootFacade(...);
    boolean get_AllowInjectInactive(...);
    GlobalCompositionRoot get_Instance(...);
    void EnsureIsInitialized(...);
    void Initialize(...);
    void InitializeRootIfNecessary(...);
    DiContainer CreateContainer(...);
    Generic GetGlobalInstallers(...);
    Generic <GetGlobalInstallers>m__32C(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DiContainer get_Container(...);
    /*[05]*/ IFacade get_RootFacade(...);
    /*[06]*/ boolean get_AllowInjectInactive(...);
}

// Namespace: Zenject
class GlobalInstallerConfig {
    // Fields:
    cmod_reqd Installers;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class IBinder {
    // Methods:
    boolean HasBinding(...);
    UntypedBinder Bind(...);
    Generic Bind(...);
    Generic Rebind(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactory(...);
    Generic BindIFactoryUntyped(...);
    Generic BindIFactoryUntyped(...);
    BindingConditionSetter BindInstance(...);
    BindingConditionSetter BindInstance(...);
    Generic Bind(...);
    UntypedBinder Bind(...);
    boolean Unbind(...);
    boolean Unbind(...);
    void UnbindAll(...);
    boolean HasBinding(...);
    boolean HasBinding(...);
    void BindAllInterfacesToSingle(...);
    void BindAllInterfacesToSingle(...);
    void BindAllInterfacesToInstance(...);
    void BindAllInterfacesToInstance(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindFacadeFactory(...);
    BindingConditionSetter BindGameObjectFactory(...);
    BindingConditionSetter BindGameObjectFactory(...);
    void Install(...);
    void Install(...);
    void Install(...);
    void Install(...);
    boolean HasInstalled(...);
    boolean HasInstalled(...);
}

// Namespace: Zenject
class IInstaller {
    // Methods:
    void InstallBindings(...);
    boolean get_IsEnabled(...);
}

// Namespace: Zenject
class IResolver {
    // Methods:
    void InjectExplicit(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void InjectGameObject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void Inject(...);
    void InjectExplicit(...);
    void InjectExplicit(...);
    Generic ResolveTypeAll(...);
    Generic ResolveTypeAll(...);
    mvar Resolve(...);
    cmod_opt Resolve(...);
    cmod_opt Resolve(...);
    cmod_opt TryResolve(...);
    cmod_opt TryResolve(...);
    mvar TryResolve(...);
    mvar TryResolve(...);
    mvar Resolve(...);
    mvar Resolve(...);
    cmod_opt Resolve(...);
    IList ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    Generic ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    IList ResolveAll(...);
    Generic ValidateResolve(...);
    Generic ValidateResolve(...);
    Generic ValidateValidatables(...);
}

// Namespace: Zenject
class Installer {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    boolean get_IsEnabled(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
}

// Namespace: Zenject
class MonoInstaller {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    boolean get_IsEnabled(...);
    void Start(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void Start(...);
}

// Namespace: Zenject
class SceneCompositionRoot {
    // Fields:
    Generic DecoratedScenes;
    Generic BeforeInstallHooks;
    Generic AfterInstallHooks;
    boolean OnlyInjectWhenActive;
    boolean ParentNewObjectsUnderRoot;
    cmod_reqd Installers;
    DiContainer _container;
    IFacade _rootFacade;
    StaticSettings _staticSettings;
    Generic <>f__am$cache9;

    // Methods:
    void .ctor(...);
    void .cctor(...);
    DiContainer get_Container(...);
    IFacade get_RootFacade(...);
    boolean get_AllowInjectInactive(...);
    void Awake(...);
    void Start(...);
    DiContainer CreateContainer(...);
    Generic GetSceneRootObjects(...);
    void InjectObjectsInScene(...);
    SceneCompositionRoot Instantiate(...);
    SceneCompositionRoot InstantiateComponent(...);
    boolean <CreateContainer>m__32D(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ DiContainer get_Container(...);
    /*[05]*/ IFacade get_RootFacade(...);
    /*[06]*/ boolean get_AllowInjectInactive(...);
}

// Namespace: 
class StaticSettings {
    // Fields:
    Generic Installers;
    boolean ParentNewObjectsUnderRoot;
    boolean OnlyInjectWhenActive;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class SingletonTypes {
    // Fields:
    int value__;
    SingletonTypes ToSingle = 0;
    SingletonTypes ToSingleMethod = 1;
    SingletonTypes ToSingleInstance = 2;
    SingletonTypes ToSinglePrefab = 3;
    SingletonTypes ToSinglePrefabResource = 4;
    SingletonTypes ToSingleFactory = 5;
    SingletonTypes ToSingleGameObject = 6;
    SingletonTypes ToSingleMonoBehaviour = 7;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: 
class SingletonInfo {
    // Fields:
    SingletonTypes Type;
    int RefCount;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class ZenConstants {
    // Fields:
    String DefaultParentId = "InstantiateDefaultParent";
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class DisposableInfo {
    // Fields:
    IDisposable Disposable;
    int Priority;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class ExecutionOrderInstaller {
    // Fields:
    Generic _typeOrder;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);
    void BindPriority(...);
    void BindPriority(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class FixedTickablePrioritiesInstaller {
    // Fields:
    Generic _tickables;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);
    void BindPriority(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class ITickable {
    // Methods:
    void Tick(...);
}

// Namespace: Zenject
class IFixedTickable {
    // Methods:
    void FixedTick(...);
}

// Namespace: Zenject
class ILateTickable {
    // Methods:
    void LateTick(...);
}

// Namespace: 
class InitializableInfo {
    // Fields:
    IInitializable Initializable;
    int Priority;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class KernelUtil {
    // Methods:
    void BindTickable(...);
    void BindTickablePriority(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class LateTickablePrioritiesInstaller {
    // Fields:
    Generic _tickables;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);
    void BindPriority(...);
    void BindPriority(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class StandardInstaller`1 {
    // Methods:
    void .ctor(...);
    void InstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class StandardInstaller {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class TaskUpdater`1 {
    // Fields:
    Generic _tasks;
    Generic _queuedTasks;
    Generic <>f__am$cache2;

    // Methods:
    void .ctor(...);
    Generic get_AllTasks(...);
    Generic get_ActiveTasks(...);
    void AddTask(...);
    void AddTaskInternal(...);
    void RemoveTask(...);
    void OnFrameStart(...);
    void UpdateAll(...);
    void UpdateRange(...);
    void ClearRemovedTasks(...);
    void AddQueuedTasks(...);
    void InsertTaskSorted(...);
    void UpdateItem(...);
    var <AddTaskInternal>m__338(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class TaskInfo {
    // Fields:
    var Task;
    int Priority;
    boolean IsRemoved;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class MouseButtons {
    // Fields:
    int value__;
    MouseButtons Left = 0;
    MouseButtons Right = 1;
    MouseButtons Middle = 2;
    MouseButtons None = 3;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Zenject
class UnityEventManager {
    // Fields:
    Vector3 _lastMousePosition;
    int _lastWidth;
    int _lastHeight;
    Action ApplicationGainedFocus;
    Action ApplicationLostFocus;
    Generic ApplicationFocusChanged;
    Action ApplicationQuit;
    Action ChangingScenes;
    Action DrawGizmos;
    Generic MouseButtonDown;
    Generic MouseButtonUp;
    Action LeftMouseButtonDown;
    Action LeftMouseButtonUp;
    Action MiddleMouseButtonDown;
    Action MiddleMouseButtonUp;
    Action RightMouseButtonDown;
    Action RightMouseButtonUp;
    Action MouseMoved;
    Action ScreenSizeChanged;
    Action Started;
    Generic MouseWheelMoved;
    boolean <IsFocused>k__BackingField;
    Action <>f__am$cache16;
    Action <>f__am$cache17;
    Generic <>f__am$cache18;
    Action <>f__am$cache19;
    Action <>f__am$cache1A;
    Action <>f__am$cache1B;
    Generic <>f__am$cache1C;
    Generic <>f__am$cache1D;
    Action <>f__am$cache1E;
    Action <>f__am$cache1F;
    Action <>f__am$cache20;
    Action <>f__am$cache21;
    Action <>f__am$cache22;
    Action <>f__am$cache23;
    Action <>f__am$cache24;
    Action <>f__am$cache25;
    Action <>f__am$cache26;
    Generic <>f__am$cache27;

    // Methods:
    void .ctor(...);
    void add_ApplicationGainedFocus(...);
    void remove_ApplicationGainedFocus(...);
    void add_ApplicationLostFocus(...);
    void remove_ApplicationLostFocus(...);
    void add_ApplicationFocusChanged(...);
    void remove_ApplicationFocusChanged(...);
    void add_ApplicationQuit(...);
    void remove_ApplicationQuit(...);
    void add_ChangingScenes(...);
    void remove_ChangingScenes(...);
    void add_DrawGizmos(...);
    void remove_DrawGizmos(...);
    void add_MouseButtonDown(...);
    void remove_MouseButtonDown(...);
    void add_MouseButtonUp(...);
    void remove_MouseButtonUp(...);
    void add_LeftMouseButtonDown(...);
    void remove_LeftMouseButtonDown(...);
    void add_LeftMouseButtonUp(...);
    void remove_LeftMouseButtonUp(...);
    void add_MiddleMouseButtonDown(...);
    void remove_MiddleMouseButtonDown(...);
    void add_MiddleMouseButtonUp(...);
    void remove_MiddleMouseButtonUp(...);
    void add_RightMouseButtonDown(...);
    void remove_RightMouseButtonDown(...);
    void add_RightMouseButtonUp(...);
    void remove_RightMouseButtonUp(...);
    void add_MouseMoved(...);
    void remove_MouseMoved(...);
    void add_ScreenSizeChanged(...);
    void remove_ScreenSizeChanged(...);
    void add_Started(...);
    void remove_Started(...);
    void add_MouseWheelMoved(...);
    void remove_MouseWheelMoved(...);
    boolean get_IsFocused(...);
    void set_IsFocused(...);
    void Start(...);
    void Tick(...);
    void OnDestroy(...);
    void OnApplicationQuit(...);
    void OnDrawGizmos(...);
    void OnApplicationFocus(...);
    void <ApplicationGainedFocus>m__343(...);
    void <ApplicationLostFocus>m__344(...);
    void <ApplicationFocusChanged>m__345(...);
    void <ApplicationQuit>m__346(...);
    void <ChangingScenes>m__347(...);
    void <DrawGizmos>m__348(...);
    void <MouseButtonDown>m__349(...);
    void <MouseButtonUp>m__34A(...);
    void <LeftMouseButtonDown>m__34B(...);
    void <LeftMouseButtonUp>m__34C(...);
    void <MiddleMouseButtonDown>m__34D(...);
    void <MiddleMouseButtonUp>m__34E(...);
    void <RightMouseButtonDown>m__34F(...);
    void <RightMouseButtonUp>m__350(...);
    void <MouseMoved>m__351(...);
    void <ScreenSizeChanged>m__352(...);
    void <Started>m__353(...);
    void <MouseWheelMoved>m__354(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Tick(...);
}

// Namespace: Zenject
class ZenUtil {
    // Methods:
    void .ctor(...);
    boolean IsNull(...);
    void LoadScene(...);
    void LoadScene(...);
    void LoadScene(...);
    void LoadSceneAdditive(...);
    void LoadSceneAdditive(...);
    void LoadSceneAdditive(...);
    void UnityLoadScene(...);
    void LoadSceneInternal(...);
    IEnumerator LoadSceneAdditiveWithContainer(...);
    IEnumerator LoadSceneAdditiveWithContainerAsync(...);
    IEnumerator LoadSceneAdditiveWithContainerAsync(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class DiContainerProvider {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class GameObjectTransientProvider {
    // Fields:
    Type _componentType;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class GameObjectTransientProviderFromPrefab {
    // Fields:
    Type _concreteType;
    GameObject _template;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class GameObjectTransientProviderFromPrefabResource {
    // Fields:
    String _resourcePath;
    Type _concreteType;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class InstanceProvider {
    // Fields:
    mvar _instance;
    Type _instanceType;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class MethodProvider`1 {
    // Fields:
    Generic _method;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class MethodProviderUntyped {
    // Fields:
    Generic _method;
    Type _returnType;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class ResourceProvider {
    // Fields:
    Type _concreteType;
    String _resourcePath;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Type GetTypeToInstantiate(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class FactorySingletonLazyCreator`2 {
    // Fields:
    SingletonId _id;
    FactorySingletonProviderCreator _owner;
    int _referenceCount;
    mvar _instance;
    DiContainer _container;

    // Methods:
    void .ctor(...);
    void IncRefCount(...);
    void DecRefCount(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ Generic ValidateBinding(...);
    /*[05]*/ mvar GetInstance(...);
    /*[06]*/ void DecRefCount(...);
    /*[07]*/ void IncRefCount(...);
}

// Namespace: Zenject
class MethodSingletonLazyCreator`1 {
    // Fields:
    Generic _createMethod;
    SingletonId _id;
    MethodSingletonProviderCreator _owner;
    int _referenceCount;
    mvar _instance;

    // Methods:
    void .ctor(...);
    Delegate get_CreateMethod(...);
    void IncRefCount(...);
    void DecRefCount(...);
    mvar GetInstance(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void DecRefCount(...);
    /*[05]*/ void IncRefCount(...);
    /*[06]*/ mvar GetInstance(...);
    /*[07]*/ Delegate get_CreateMethod(...);
}

// Namespace: Zenject
class MonoBehaviourSingletonProvider {
    // Fields:
    MonoBehaviourSingletonProviderCreator _owner;
    SingletonRegistry _singletonRegistry;
    MonoBehaviourSingletonLazyCreator _lazyCreator;
    Type _componentType;
    MonoBehaviourSingletonId _monoBehaviourId;
    SingletonId _singletonId;

    // Methods:
    void .ctor(...);
    void Init(...);
    void Dispose(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: 
class GameObjectMarkInfo {
    // Fields:
    GameObject GameObject;
    int RefCount;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class PrefabMarkInfo {
    // Fields:
    GameObject Prefab;
    int RefCount;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class ResourceMarkInfo {
    // Fields:
    String ResourcePath;
    int RefCount;

    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class TransientProvider {
    // Fields:
    Type _concreteType;

    // Methods:
    void .ctor(...);
    Type GetInstanceType(...);
    mvar GetInstance(...);
    Type GetTypeToInstantiate(...);
    Generic ValidateBinding(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void Dispose(...);
    /*[05]*/ boolean Matches(...);
    /*[06]*/ Type GetInstanceType(...);
    /*[07]*/ mvar GetInstance(...);
    /*[08]*/ Generic ValidateBinding(...);
    /*[09]*/ void Dispose(...);
}

// Namespace: Zenject
class InjectAttributeBase {
    // Fields:
    boolean <IsOptional>k__BackingField;
    String <Identifier>k__BackingField;
    InjectSources <SourceType>k__BackingField;

    // Methods:
    void .ctor(...);
    boolean get_IsOptional(...);
    void set_IsOptional(...);
    String get_Identifier(...);
    void set_Identifier(...);
    InjectSources get_SourceType(...);
    void set_SourceType(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Zenject
class InjectAttribute {
    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Zenject
class InjectOptionalAttribute {
    // Methods:
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Zenject
class PostInjectAttribute {
    // Methods:
    void .ctor(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar get_TypeId(...);
    /*[05]*/ boolean IsDefaultAttribute(...);
}

// Namespace: Zenject
class AutoBindInstaller {
    // Fields:
    CompositionRoot _compRoot;
    Generic <>f__am$cache1;

    // Methods:
    void .ctor(...);
    void InstallBindings(...);
    Generic <InstallBindings>m__357(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void InstallBindings(...);
    /*[05]*/ boolean get_IsEnabled(...);
    /*[06]*/ boolean get_IsEnabled(...);
    /*[07]*/ void InstallBindings(...);
}

// Namespace: Zenject
class DecoratorInstaller {
    // Fields:
    DiContainer _container;

    // Methods:
    void .ctor(...);
    DiContainer get_Container(...);
    void PreInstallBindings(...);
    void PostInstallBindings(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ void PreInstallBindings(...);
    /*[05]*/ void PostInstallBindings(...);
}

// Namespace: Zenject
class SceneDecoratorCompositionRoot {
    // Fields:
    String SceneName;
    cmod_reqd DecoratorInstallers;
    cmod_reqd PreInstallers;
    cmod_reqd PostInstallers;
    Generic _beforeInstallHooks;
    Generic _afterInstallHooks;

    // Methods:
    void .ctor(...);
    void Awake(...);
    void AddPreBindings(...);
    void AddPostBindings(...);
    void ProcessDecoratorInstallers(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: ModestTree.Util
class UnityUtil {
    // Fields:
    Generic <>f__am$cache0;
    Generic <>f__am$cache1;
    Generic <>f__am$cache2;
    Generic <>f__am$cache3;

    // Methods:
    boolean get_IsAltKeyDown(...);
    boolean get_IsControlKeyDown(...);
    boolean get_IsShiftKeyDown(...);
    boolean get_WasShiftKeyJustPressed(...);
    boolean get_WasAltKeyJustPressed(...);
    int GetDepthLevel(...);
    Generic GetComponentsInChildrenTopDown(...);
    Generic GetComponentsInChildrenBottomUp(...);
    Generic GetAllGameObjectsInScene(...);
    Generic GetRootGameObjects(...);
    int <GetComponentsInChildrenTopDown>m__358(...);
    int <GetComponentsInChildrenBottomUp>m__359(...);
    GameObject <GetAllGameObjectsInScene>m__35A(...);
    boolean <GetRootGameObjects>m__35B(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: Zenject
class ZenjectAutoBinding {
    // Fields:
    Component _component;
    BindTypes _bindType;

    // Methods:
    void .ctor(...);
    Component get_Component(...);
    BindTypes get_BindType(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class BindTypes {
    // Fields:
    int value__;
    BindTypes ToInstance = 0;
    BindTypes ToInterfaces = 1;
    BindTypes ToInstanceAndInterfaces = 2;
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ String ToString(...);
    /*[05]*/ TypeCode GetTypeCode(...);
    /*[06]*/ boolean System.IConvertible.ToBoolean(...);
    /*[07]*/ byte System.IConvertible.ToByte(...);
    /*[08]*/ char System.IConvertible.ToChar(...);
    /*[09]*/ DateTime System.IConvertible.ToDateTime(...);
    /*[10]*/ Decimal System.IConvertible.ToDecimal(...);
    /*[11]*/ double System.IConvertible.ToDouble(...);
    /*[12]*/ short System.IConvertible.ToInt16(...);
    /*[13]*/ int System.IConvertible.ToInt32(...);
    /*[14]*/ long System.IConvertible.ToInt64(...);
    /*[15]*/ sbyte System.IConvertible.ToSByte(...);
    /*[16]*/ float System.IConvertible.ToSingle(...);
    /*[17]*/ String ToString(...);
    /*[18]*/ mvar System.IConvertible.ToType(...);
    /*[19]*/ ushort System.IConvertible.ToUInt16(...);
    /*[20]*/ uint System.IConvertible.ToUInt32(...);
    /*[21]*/ ulong System.IConvertible.ToUInt64(...);
    /*[22]*/ int CompareTo(...);
}

// Namespace: Holoholo.Rpc
class OnServerResponseDelegate`1 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: ModestTree.Util
class Func`6 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: ModestTree.Util
class Func`7 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: ModestTree.Util
class Func`8 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: ModestTree.Util
class Func`9 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: ModestTree.Util
class Func`10 {
    // Methods:
    void .ctor(...);
    var Invoke(...);
    IAsyncResult BeginInvoke(...);
    var EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ var Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ var EndInvoke(...);
}

// Namespace: ModestTree.Util
class Action`5 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: ModestTree.Util
class Action`6 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: ModestTree.Util
class Action`7 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: ModestTree.Util
class Action`8 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: ModestTree.Util
class Action`9 {
    // Methods:
    void .ctor(...);
    void Invoke(...);
    IAsyncResult BeginInvoke(...);
    void EndInvoke(...);

    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
    /*[04]*/ mvar Clone(...);
    /*[05]*/ void GetObjectData(...);
    /*[06]*/ mvar DynamicInvokeImpl(...);
    /*[07]*/ mvar Clone(...);
    /*[08]*/ void GetObjectData(...);
    /*[09]*/ cmod_reqd GetInvocationList(...);
    /*[10]*/ Delegate CombineImpl(...);
    /*[11]*/ Delegate RemoveImpl(...);
    /*[12]*/ void Invoke(...);
    /*[13]*/ IAsyncResult BeginInvoke(...);
    /*[14]*/ void EndInvoke(...);
}

// Namespace: 
class $ArrayType$32 {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class $ArrayType$16 {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}

// Namespace: 
class $ArrayType$1024 {
    // Virtual Table:
    /*[00]*/ boolean Equals(...);
    /*[01]*/ void Finalize(...);
    /*[02]*/ int GetHashCode(...);
    /*[03]*/ String ToString(...);
}